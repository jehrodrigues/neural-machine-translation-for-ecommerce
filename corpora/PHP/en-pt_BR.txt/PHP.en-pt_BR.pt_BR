Manual do PHP
Anterior
Apêndice K.
Próxima
Como nós geramos os formatos
Experimentalmente XSLT (Extensible Stylesheet Language Transformations) para manutenção e formatação.
Utilizando XML como meta dado nos permite gerar vários outros formatos a partir dos arquivos fonte, ao mesmo tempo que a manutenção é feita em um único lugar para todas as versões.
As ferramentas utilizadas para criar as versões HTML e TeX são o Jade, escrito por James Clark, e The Modular DocBook Stylesheets, escrito por Norman Walsh.
Nós utilizamos o Microsoft HTML Help Workshop para criar o formato HTML Help e, é claro, o próprio PHP para fazer algumas conversões adicionais.
Você pode obter o manual em várias línguas e formatos, incluindo texto simples, HTML, PDF, PalmPilot DOC, PalmPilot iSilo e Windows HTML Help, a partir do http: / /www.php.net / docs.php.
Os manuais são automaticamente atualizados quando da alteração dos fontes.
Para maiores informações sobre como obter os fontes XML desta documentação, veja em http: / /cvs.php.net /.
A documentação é guardada no módulo phpdoc.
Anterior
Principal
Próxima
Como ajudar a melhorar a documentação
Acima
Traduções
Manual do PHP
Anterior
Apêndice K.
Próxima
Como ajudar a melhorar a documentação
Há várias maneiras de você contribuir a melhorar essa documentação.
Se você encontrar erros no manual, em qualquer língua, notifique-os utilizando o rastreamento de bugs em http: / /bugs.php.net /.
Classifique o problema com um "Documentation Problem".
Você também pode submeter problemas específicos dos formatos do manual nesse endereço.
Nota:
Por favor, não abuse do rastreamento de bugs para solicitar ajuda.
Use as listas de discussão ou as comunidades mencionadas anteriormente.
Você pode também contribuir com comentários, fornecendo exemplos adicionais e esclarecimentos para outros leitores.
Mas não envie notificações de bugs usando o sistema de comentários.
Você pode ler mais sobre os comentários na seção 'Sobre os comentários de usuários' deste apêndice.
Se você sabe Inglês e alguma outra língua, você pode ajudar com as traduções.
Se você deseja iniciar uma nova tradução, ou ajudar num projeto de tradução, leia o http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.
Anterior
Principal
Próxima
Como encontrar mais informações sobre o PHP
Acima
Como nós geramos os formatos
Manual do PHP
Anterior
Próxima
Sobre o manual
O manual do PHP é fornecido em vários formatos.
Esses formatos podem ser divididos em dois grupos: de leitura online e em pacotes para download.
Algumas editoras tornaram disponíveis versões impressas desse manual.
Você pode ler o manual online em http: / /www.php.net / Você pode ler o manual online em http: / /www.php.net / e em numerosos mirrors.
Para melhor performance, escolha o mirror localizado mais fisicamente próximo a você.
Você pode visualizar o manual no formato HTML simples ou em um formato HTML que se assemelha ao próprio look and feel do site do PHP
A vantagem do manual online para a maioria dos formatos offline é a sua integração com os comentários dos usuários.
A desvantagem óbvia é que você precisa estar online para ler o manual.
Existem vários formatos offline do manual, e o formato mais apropriado para você depende do seu sistema operacional de seu estilo pessoal de leitura.
Para informações de como esse manual é gerado e quais são esses formatos, veja a seção 'Como nós criamos os formatos' deste apêndice.
As versões mais independentes de plataforma são o HTML e o texto simples.
O formato HTML é fornecido em um único arquivo e também como um pacote de arquivos individuais para cada seção (o que resulta numa coleção de vários milhares de arquivos).
Os formatos HTML e texto simples são condensados com o tar e comprimidos usando o bzip2.
Outro formato popular independente de plataforma, e que ainda fornece suporte a impressão, é o PDF (também conhecido como Adobe Acrobat).
Mas antes de você baixar o manual neste formato e apertar o botão Imprimir, esteja avisado que o ele tem por volta de 2000 páginas, e está sendo constantemente revisado.
Nota:
Se você ainda não tem um programa capaz de visualizar arquivos PDF, você precisará baixar o Adobe Acrobat Reader.
Para proprietários de handhelds compatíveis com o Palm, os formatos DOC e iSilo são ideias para esta plataforma.
Você pode ter no seu handheld de seu uso diário um visualizador DOC ou iSilo para aumentar seu conhecimento em PHP, ou apenas como referência rápida.
Para a plataforma Windows, a versão HTML Help do manual condensa os originais no formato HTML para o uso com o HTML Help.
Esse formato tem busca de textos, índice completo e marcadores.
Vários ambientes de desenvolvimento populares do PHP em Windows se integram com esse formato da documentação para facilitar o acesso a documentação.
Anterior
Principal
Próxima
Acima
Sobre as notas de usuários
Manual do PHP
Anterior
Apêndice K.
Próxima
Como encontrar mais informações sobre o PHP
Esse manual não fornece instruções sobre práticas gerais de programação.
Se esse é seu primeiro contato, ou se ainda está iniciando em programação, você poderá encontrar dificuldade em aprender a programar em PHP apenas usando esse manual.
Você precisa procurar textos destinados a orientar os iniciantes.
Você pode encontrar uma lista de livros relacionados ao PHP em http: / /www.php.net / books.php.
Há também um grande número de listas de discussão ativas para todos os aspectos da programação com o PHP.
Se você se deparar com um problema que por si só não consegue solucionar, você poderá obter ajuda nestas listas.
Uma relação dessas listas pode ser encontrada em http: / /www.php.net / support.php, como também links para os arquivos dessas listas de discussão e outras fontes de suporte online.
Em http: / /www.php.net / links.php há uma relação de sites com artigos, fóruns e galerias de código PHP.
Anterior
Principal
Próxima
Como ler a definição de função (protótipo)
Acima
Como ajudar a melhorar a documentação
Manual do PHP
Anterior
Apêndice K.
Sobre o manual
Próxima
Sobre as notas de usuários
Os comentários de usuários são uma importante presença no desenvolvimento deste manual.
Permitindo aos usuários do manual a contribuir com exemplos e outros esclarecimentos através de seus browsers, nós podemos incorporar esse feedback no corpo do manual.
E até que as notas sejam incorporadas, os comentários podem ser visualizados na versão online e em alguns formatos offline.
Nota:
As contribuições dos usuários não são moderadas antes da sua publicação online, então a qualidade desses textos e exemplos ou a veracidade e origem dessas contribuições não pode ser garantida. (Note que não há uma garantia total de qualidade ou exatidão do próprio manual.)
Anterior
Principal
Próxima
Sobre o manual
Acima
Como ler a definição de função (protótipo)
Manual do PHP
Anterior
Apêndice K.
Próxima
Como ler a definição de função (protótipo)
Cada função é documentada para referência rápida, e conhecendo como ler e entender o manual fará com que a utilização do PHP seja muito mais fácil.
Mais do que simplesmente estudar exemplos ou copiar e colar, você precisa saber como ler as definições de função (protótipo).
Vamos começar:
Pré-requisito:
Conhecimento básico dos tipos:
Mesmo sendo o PHP uma linguagem fracamente tipada, é importante ter um conhecimento básico dos tipo pois eles tem um significado importante.
Definições de função nos dizem que tipo de valor é retornado, e vamos utilizar a definição de strlen() como nosso primeiro exemplo:
strlen (PHP 3, PHP 4 = 4.0.0) strlen - - Obtêm o tamanho da string Description int strlen (string str) Retorna o comprimento da string.
Tabela K-1.
Detalhamento da definição da função
Parte
Descrição
Nome da função.
strlen() está disponível em todos os PHP 3 e PHP 4
Tipo do valor que esta função retorna, que no caso é um inteiro (no caso, o comprimento de uma string é medida em números).
O primeiro (e neste caso, o único) parâmetro / argumento da função strlen() é chamado str, e é uma string.
Nos podemos reescrever a definição de função acima de maneira genérica:
tipo retornado nome da função (parametro tipo parametro tipo)
Muitas funções tem parâmetros multiplos, como in_array().
Seu protótipo é como:
O que isso significa? in_array() retorna um valor booleano, TRUE em caso de sucesso (needle foi encontrado em haystack) ou FALSE em caso de falha (needle não foi encontrado em haystack).
O primeiro parâmetro é chamado needle e pode de ser de vários tipos, por isso nós dizemos que ele é "mixed".
Esse needle mixed (que nós estamos procurando) pode ser tanto um valor escalar (string, inteiro, ou float), ou um array. haystack (o array onde nós estamos procurando) é o segundo parâmetro.
O terceiro parâmetro opcional é chamado strict.
Todos os parâmetros opcionais aparecem dentro de [colchetes].
O manual diz que o default do parâmetro strict é o booleano FALSE.
Veja a página de do manual de cada função para detalhes de como elas funcionam.
Anterior
Principal
Próxima
Sobre as notas de usuários
Acima
Como encontrar mais informações sobre o PHP
Manual do PHP
Anterior
Apêndice K.
Próxima
Traduções
O manual do PHP não está disponível apenas em vários formatos, mas também em várias línguas.
O texto do manual é primeiramente escrito em Inglês, então um time de pessoas ao redor do mundo fazem a tradução em suas línguas natais.
Se a tradução de uma função específica ou de um capítulo ainda não foi realizada, o sistema de compilação do manual utiliza a versão original em Inglês.
As pessoas envolvidas na tradução iniciam a partir dos fontes XML disponíveis em http: / /cvs.php.net / e partir daí traduzem para sua lingua mãe.
Eles não utilizam as versões HTML, texto ou PDF.
É o sistema de compilação do manual que converte os fontes XML para formatos mais legíveis.
Nota:
Se você quiser colaborar com a tradução da documentação para a sua língua, entre e contato com o time de documentação e tradução, inscrevendo-se na lista de discussão phpdoc: para isso, encaminhe um e-mail em branco para phpdoc-subscribe@lists.php.net.
O endereço da lista é em phpdoc@lists.php.net.
Depois, encaminhe uma mensagem mencionando seu interesse em traduzir o manual para uma língua que você receberá retorno, fornecendo ajuda para você começar a tradução para uma nova língua ou participar do time de documentação da sua língua.
Atualmente o manual está disponível, parcialmente ou não, nas seguintes línguas:
Português (Brasil), Chinês, Checo, Holandês, Francês, Alemão, Húngaro, Italiano, Japonês, Koreano, Polonês e Espanhol.
Todos eles podem ser baixados aqui: http: / /www.php.net / docs.php.
Anterior
Principal
Próxima
Como nós geramos os formatos
Acima
Identificadores faltando (compilação do manual)
Anterior
Apêndice F.
Lista de funções sinônimas (aliases)
Esta é a lista de funções sinônimas.
Todas as funções sinônimas estão listadas aqui.
Normalmente é uma má idéia utiliza-lás, pois elas estão em vias de ficarem obsoletas ou serem renomeadas, o que criaria um script não portável.
Esta lista é fornecida para ajudar aqueles que querem atualizar os seus scripts antigos para a nova sintaxe.
De qualquer forma, alguma funções simplesmente tem dois nomes e não tem real preferência. (Por exemplo, is_int() e is_integer() são igualmente boas)
Esta lista é consistente com o PHP versão 4.0.6.
Tabela F-1.
Sinônimos
Função sinônimo (alias)
Função mestre
Extensão usada
Anterior
Principal
Próxima
Acima
Palavras reservadas do PHP
Anterior
VII.
Apêndices
Identificadores faltando (compilação do manual)
Anterior
Principal
Próxima
A História do PHP e projetos relacionados
Manual do PHP
Anterior
Apêndice E.
Próxima
HashTable *function_table
pval *object
pval *function_name
int param_count
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dir - - classe diretório
Um mecanismo pseudo-orientado a objeto para ler um diretório.
Duas propriedades são disponíveis uma vez que o diretório foi aberto:
A propriedade handle pode ser usada com outras funções de diretório como readdir(), rewinddir() e closedir().
A propriedade path é configurada para o caminho que o diretório foi aberto.
Três métodos disponibilizados são: read, rewind e close.
Repare nos detalhes de como o valor retornado de dir() é verificado no exemplo abaixo.
Nós explicitamente testamos se valor de retorno é idêntico (igual e do mesmo tipo que -- - veja operadores de comparação para mais detalhes) a FALSE, desde que, de outra forma, qualquer entrada de diretório que seja avaliada para FALSE fará parar o loop.
Exemplo dir()
$d = dir( "/ etc"); echo "Manipulador: ".$d - handle." br \n"; echo "Caminho: ".$d - path. "br \n"; while (false !== ($entry = $d - read())) {echo $entry." br \n";} $d - close();
Nota:
A ordem em que os diretórios são retornadas pelo método é dependente do sistema.
Nota:
Este módulo define a classe interna Directory, significando que você não será capaz de criar uma classe sua com esse nome.
Para uma lista completa das classes predefinidas no PHP, veja em Classes Predefinidas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 4.
Configuração
Próxima
Rodando o PHP como módulo do Apache
Quando usando o PHP como um módulo do Apache, você também pode mudar as definições de configuração usando diretivas na configuração do Apache (httpd.conf) e dos arquivos .htaccess (Você irá precisar de privilégios "AllowOverride Options "ou "AllowOverride All")
Com o PHP 3.0, existem diretivas Apache que correspondem a cada definição de configuração no nome php3.ini, exceto o nome predefinido por "php3_".
Com o PHP 4.0, existem várias diretivas do Apache que lhe permitem mudar a configuração PHP dentro do arquivo de configuração do Apache.
Isso define o valor da variável especificada.
Isto é usado para definir uma opção de configuração Booleana.
Isto define o valor da variável especificada.
Definições de configuração "Admin" só podem ser definidas a partir dos arquivos principais de configuração do Apache, e não dos arquivos .htaccess.
Exemplo 4-2.
Exemplo de configuração do Apache
Nota:
Constantes PHP não existem fora do PHP.
Por exemplo, no httpd.conf não adianta utilizar-se de constantes PHP como E_ALL ou E_NOTICE para configurar a diretiva error_reporting, pois elas não tem nenhum sentido e serão avaliados como 0.
Nesses casos, utilize seus valores de bit.
Outras interfaces para o PHP
Independentemente da interface do PHP, você pode mudar certos valores em tempo de execução em seus scripts através ini_set().
A tabela seguinte explica em que nível as diretivas podem ser modificadas.
Tabela 4-1.
Definições das constantes PHP_INI_*
Constante
Valor
Significado
Diretiva pode ser modificada em seus scripts
Diretiva pode ser modificada no .htaccess e nas diretivas VHost do httpd.conf.
Diretiva pode ser modificada no php.ini ou httpd.conf (mas não em blocos VHost do httpd.conf).
Diretiva pode ser modificada em qualquer lugar
Você pode visualizar as configurações das diretivas na saída de phpinfo().
Você também pode acessar os valores individuais das configurações utilizando ini_get() ou get_cfg_var().
Anterior
Principal
Próxima
Configuração
Acima
Diretivas de configuração
Manual do PHP
Anterior
Capítulo 4.
Configuração
Próxima
Diretivas de configuração
Opções Httpd
Tabela 4-2.
Opções Httpd
Padrão
Alterável
Opções da Linguagem
Opções gerais da linguagem
Nome
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Informa quando a tag reduzida (??) do PHP pode ser permitida.
Se você quiser usar o PHP em combinação com XML, você pode desligar essa opção para poder utilizar ?xml? inline.
De outra forma, você pode imprimir com o PHP, por exemplo: ?php echo '?xml version="1.0"';?.
Se desligado, você precisará utilizar a forma longa da tag de abertura do PHP (?php?).
Nota:
Esta diretiva também afeta o atalho ?=, que é idêntico a? echo.
A utilização desse atalho requer short_open_tag ligado.
Ativa a utilização das tags estilo ASP%% em adição as tags ?php?.
Isto inclui o atalho de impressão de valores %= $var%.
Para mais informações, veja Alternando do HTML.
Nota:
O suporte a tags estilo APS foi acrescentado no 3.0.4.
O número de dígitos significantes exibidos em números de ponto flutuante.
Força a especificação Ano 2002 (poderá causar problemas com browsers não compatíveis)
Especifica a habilidade em forçar que argumentos possam ser passados por referência na chamada de uma função.
Este método é obsoleto e logo não será mais suportado nas futuras versões do PHP / Zend.
O método recomendado para especificar que argumentos devem ser passados por referência é pela declaração da função.
Você é encorajado em tentar desligar essa opção e verificar se seus scripts trabalham adequadamente de forma a garantir que elas irã funcionar nas futuras versões da linguagem (você receberá um alerta cada vez que utilizar esse recurso, e o argumento será passado por valor em vez de por referência).
Veja também Referências Explicadas.
Decide se o PHP poderá expor o fato de que ele está instalado no servidor (acrescentando sua assinatura no header do servidor web).
Isto não causa problemas de segurança de qualquer forma, mas torna possível determinar se você usa o PHP em seu servidor ou não.
Limitação de recursos
Tabela 4-4.
Limitação de recursos
Nome
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Isto configura a quantidade máxima de memória, em bytes, que um script poderá alocar.
Isto ajuda a prevenir que scripts mal escritos acabem com toda a memória disponível do servidor.
Veja também max_execution_time.
Manipulação de dados
Tabela 4-5.
Opções configuráveis para manipulação de dados
Nome
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Se ativado, quaisquer variáveis Environment, GET, POST, Cookie e Server encontradas poderão ser acessadas nos arrays globais associativos $_ENV, $_GET, $_POST, $_COOKIE e $_SERVER.
Note que a partir do PHP 4.0.3, track_vars está sempre ativado.
O separador de parâmetros em URLs geradas pelo PHP.
Lista dos separador( es) utilizados pelo PHP para interpretar URLs em variáveis.
Nota:
Cada caracter nesta diretiva é considerado como um separador!
Configura a ordem de interpretação das variáveis EGPCS (Environment, GET, POST, Cookie e Server).
O default dessa diretiva é "EGPCS".
Configurando para "GP", por exemplo, fará com que o PHP ignore completamente variáveis de ambiente (E), cookies (C) e do servidor (S), sendo que qualquer variável GET será sobrescrita por qualquer variável do método POST com o mesmo nome.
Veja também register_globals.
Ativa ou não o registro de variáveis EGPCS (Environment, GET, POST, Cookie e Server) como variáveis globais.
Por exemplo: se register_globals = on, a URL http: / /www.example.com / test.php?id=3 irá criar a variável $id.
Ou, $DOCUMENT_ROOT de $_SERVER[ 'DOCUMENT_ROOT'].
Você pode desligar essa diretiva se você não deseja sujar o escopo global de seus scripts com dados do usuário.
Desde o PHP 4.2.0, o padrão dessa diretiva é off.
É preferível utilizar as variáveis predefinidas do PHP, como as superglobals: $_ENV, $_GET, $_POST, $_COOKIE e $_SERVER.
Leia cuidadosamente o capitulo de segurança em Utilizando register_globals para mais informações.
Veja que register_globals não pode ser alterado em tempo de execução (ini_set()).
Entretanto, você pode utilizar o .htaccess Entretanto, você pode utilizar o .htaccess se seu host permitir como descrito anteriormente.
Um exemplo de entrada do .htaccess: php_flag register_globals on.
Configura quando o PHP deve declarar ou não as variáveis argv e argc (que podem conter dados do método GET).
Veja também Utilizando o PHP em linha de comando.
Além, essa diretiva foi criada no PHP 4.0.0 e sempre foi "ativa" antes disso.
Configura o tamanho máximo dos dados postados.
Esta configuração também afeta o upload de arquivos.
Para receber arquivos grandes, esse valor precisa ser maior que upload_max_filesize.
Se o limite de memória estiver ativado em seu script de configuração, memory_limit também afeta o upload de arquivos.
Falando diretamente, memory_limit precisa ser maior que post_max_size.
Informa a ordem de interpretação das variáveis GET / POST / COOKIE.
O padrão dessa diretiva é "GPC".
Configurando para "GP", por exemplo, fará com que o PHP ignore completamente cookies e que sobrescreva qualquer dado postado via GET por variáveis postados via POST que tenham o mesmo nome.
Nota:
Esta opção não está disponível no PHP 4.
Utilize variables_order no seu lugar.
Especifica o nome do arquivo que será automaticamente interpretado antes do arquivo principal.
O arquivo é incluído como se ele fosse chamado com a função include(), então include_path é utilizado.
O valor especial none desabilita a auto inclusão.
Especifica se o nome do arquivo que será automaticamente interpretado depois do arquivo principal.
O arquivo é incluído como se ele fosse chamada a função include(), então include_path é utilizado.
O valor especial none desabilita a auto inclusão.
Nota:
Se o script é terminado com exit(), a auto inclusão não irá ocorrer.
A partir da versão 4.0b4, o PHP sempre emite a codificação de caracter por padrão no header Content-type:.
Para desabilitar o envio do código de página, simplesmente deixe a diretiva em branco.
Sempre preenche a variável $HTTP_RAW_POST_DATA.
Permite a manipulação de headers HTTP com scripts PHP (com PROPFIND, PROPPATCH, MOVE, COPY, etc).
Veja também magic_quotes_gpc, magic-quotes-runtime, e magic_quotes_sybase.
Paths and Directories
Tabela 4-6.
Opções de configuração de caminhos e diretórios
Nome
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Especifica a lista de diretórios onde as funções require(), include() and fopen_with_path() procurarão por arquivos.
O formato é o mesmo que o da variável ambiente PATH: uma lista de diretórios, separador por vírgula no UNIX ou ponto e vírgula no Windows.
Exemplo 4-3. include_path UNIX
include_path=.: / home / httpd / php-lib
Exemplo 4-4. include_path Windows
include_path=" .;c:\www\phplib "
O "diretório root" do PHP no servidor.
Utilizado somente se for preenchido.
Se o PHP estiver configurado com safe mode, nenhum arquivo acima desse diretório será acessível.
Se o PHP não estiver compilado com FORCE_REDIRECT, você DEVE configurar doc_root se estiver rodando o PHP como CGI sob qualquer servidor web (que não o IIS) Outra alternativa é configurar a diretiva cgi.force_redirect, abaixo.
O caminho base do usado como diretório home do usuário para arquivos PHP, por exemplo public_html.
Diretório de onde o PHP poderá carregar dinamicamente as extensões.
Veja também enable_dl e dl().
Que extensões dinamicamente carregáveis devem ser carregadas quando o PHP inicia.
cgi.force_redirect é necessário para prover segurança quando rodando o PHP como módulo sob a maioria dos servidores web.
Se deixado indefinido, o PHP assume como ativo.
Você pode desligá-lo SOB SEU RISCO.
Nota:
Usuários Windows:
Você PODE desligar isso no ISS, e de fato, você DEVE fazê-lo.
Para que o OmniHTTPD ou Xitami funcionem, você PRECISA desligá-lo.
Se cgi.force_redirect estiver ativado, e se não estiver rodando o PHP sob os servidores web Apache ou Netscape (iPlanet), você PRECISARÁ configurar uma variável de ambiente que o PHP procurará para saber se ele pode continuar a execução.
Nota:
Configurar essa variável PODERÁ causar problemas de segurança, POR ISSO SAIBA QUE ESTEJA FAZENDO PRIMEIRO.
FastCGI sob o IIS (em sistemas baseados em WinNT) suporta a habilidade de despersonalizar tokens de segurança da chamado do cliente.
Configure 1 se estiver rodando sob o ISS.
O padrão é zero.
Upload de arquivos
Opções de configuração para upload de arquivos
Nome
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Permite ou não upload de arquivos HTTP.
Veja também upload_max_filesize, upload_tmp_dir e post_max_size directives.
O diretório temporário utilizado para armazenar arquivos quando realizando o upload de arquivos.
Ele precisa ter permissão de escrita para qualquer usuário que for rodar o PHP.
Se não especificado, o PHP utilizará o default do sistema.
O tamanho máximo de um arquivo para upload.
SQL Geral
Opções de configuração SQL gerais
Nome
Padrão
Alterável
Diretivas de configuração do debugador
Nome DNS ou endereço IP do host utilizado pelo debugador.
Porta utilizado pelo debugador.
Controle de ativação do debugador.
Anterior
Principal
Próxima
Como alterar as configurações definidas
Acima
Manual do PHP
Anterior
Próxima
Configuração
O arquivo de configuração (chamado php3.ini no PHP 3.0, e simplesmente php.ini no PHP 4.0) é lido quando o PHP inicia.
Para as versões de módulos de servidor do PHP, isso só acontece uma vez quando o servidor é iniciado.
A localização padrão do php.ini é uma opção de compilação (veja a FAQ correspondente), mas pode ser modificada para as versões CGI e CLI com o opcional -c (mais informações em utilizando o PHP na linha de comando).
Você também pode utilizar a variavável ambiente PHPRC para colocar caminhos adicionais para a procura do arquivo php.ini.
Note que nem todas as diretivas do PHP estão documentadas a seguir.
Para uma lista completa, leia o seu próprio e bem comentado arquivo php.ini.
Você também pode ver a versão mais atualizada diretamente do CVS.
Nota:
O valor default da diretiva register_globals mudou de on para off a partir do PHP 4.2.0.
Exemplo 4-1. php.ini example
; qualquer texto depois de um ponto e vírgula não delimitado (;) é ignorado [php]; marcadores de seção (texto entre colchetes) também são ignorados; Valores booleanos podem ser:; true, on, yes; ou false, off, no, none register_globals = off magic_quotes_gpc = yes; você pode delimitar strings com aspas include_path = ".: / usr / local / lib / php "; barras invertidas são tratadas da mesma maneira que outros caracteres include_path = ".;c:\php\lib"
Anterior
Principal
Próxima
Acima
Como alterar as configurações definidas
Manual do PHP
Anterior
Capítulo 12.
Próxima
Sintaxe alternativa para estruturas de controle
O PHP oferece uma sintaxe alternativa para algumas das suas estruturas de controle: if, while, for, foreach e switch.
Em cada caso, a forma básica da sintaxe alternativa é mudar o sinal de abertura para dois-pontos (:) e o sinal de fechamento para endif;, endwhile;, endfor;, endforeach; ou endswitch;, respectivamente.
A é igual a 5 ?php endif;?
No exemplo acima, o bloco HTML "A é igual a 5" está aninhado dentro de uma instrução if No exemplo acima, o bloco HTML "A é igual a 5 "está aninhado dentro de uma instrução if escrito na sintaxe alternativa.
O bloco HTML será mostrado somente se $a é igual a 5.
A sintaxe alternativa se aplica a else e elseif também.
A seguir temos uma estrutura if com elseif e else no formato alternativo:
if ($a == 5): print "a igual a 5"; print ".. ."; elseif ($a == 6): print "a igual a 6"; print "!! !"; else: print "a não é nem 5 nem 6"; endif;
Veja também: while, for e if para mais exemplos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
break
break cancela a execução do comando for, foreach while, do..while ou switch atual.
break aceita um argumento numérico opcional que diz a ele quantas estruturas aninhadas englobadas devem ser quebradas.
$arr = array ('um', 'dois', 'três', 'quatro', 'PARE', 'cinco'); while (list (, $val) = each ($arr)) {if ($val == 'PARE') {break; / * Você poderia colocar 'break 1; 'aqui. * /} echo "$val br \n";} / * Utilizando o argumento opcional. * / $i = 0; while (++$i) {switch ($i) {case 5: echo "No 5 br \n"; break 1; / * Sai somente do switch. * / case 10: echo "No 10; saindo br \n"; break 2; / * Sai do switch e while. * / default: break;}}
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
continue
continue é usado dentro de estruturas de loops para saltar o resto da iteração do loop atual e continuar a execução no início da próxima iteração.
continue aceita um argumento numérico opcional que diz a ele de quantos níveis de loops aninhados ele deve saltar até o fim.
while (list ($key, $value) = each ($arr)) {if (!($key% 2)) {/ / pula itens pares continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo "Fora br \n"; while (1) {echo "nbsp; nbsp;Meio br \n"; while (1) {echo" nbsp; nbsp;Dentro br \n"; continue 3;} echo "Isto nunca será exibido. br \n";} echo "Nem isso. br \n";}
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Estruturas de Controle
Próxima
O construtor declare é utilizado para configurar diretivas de execução para blocos de código.
A sintaxe do declare é similar a sintaxe de outros construtores de controle.
declare (diretiva) instrucao
A seção diretiva permite o comportamento do bloco declare a ser configurado.
Atualmente somente uma diretiva é reconhecida: a diretiva ticks. (veja abaixo para maiores informações em diretiva ticks)
Como ela é executada e que efeitos colaterais que podem ocorrem durante a execução dependem da configuração diretiva.
Um tick é um evento que ocorre para cada N níveis de instruções executados pelo interpretador com o bloco declare.
O valor para N é especificado utilizando ticks= N nos blocos declare das seções diretiva.
O( s) evento(s) que ocorre(m) em cada tick são especificados utilizando register_tick_function().
Veja o exemplo abaixo para maiores detalhes.
Note que mais de um evento pode ocorrer em cada tick.
Exemplo 12-1.
Histórico de um trecho de código PHP
?php / / Uma função que grava o tempo entre as chamadas function profile ($dump = FALSE) {static $profile; / / Retorna os tempos preservados no histórico, então apaga if ($dump) {$temp = $profile; unset ($profile); return ($temp);} $profile[] = microtime ();} / / Ativa o manipulador do tick register_tick_function("profile"); / / Inicializa a função antes de declarar o bloco profile (); / / Roda um trecho de código, disparando um tick a cada duas instruções declare (ticks=2) {for ($x = 1; $x 50; ++$x) {echo similar_text (md5($x), md5($x*$x)), "br / ;";}} / / Mostra os dados guardados no histórico print_r (profile (TRUE));?
Ticks são idealizados para debug, implementação de multitask simples, processos de I / O em background e afins.
Veja também: register_tick_function() e unregister_tick_function().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
do..while
Loops do..while são bem similares aos loops while, exceto pelo fato de que a condição é verificada no fim de cada iteração em vez de no começo.
A diferença principal dos loops while regulares é que a primeira iteração de um loop do..while é garantidamente executada (a condição só é verificada no fim da iteração) enquanto que ele pode não rodar necessariamente em um loop while normal (a condição é verificada no começo de cada iteração, se ela é avaliada como FALSE logo no começo, a execução do loop terminaria imediatamente).
Há apenas uma sintaxe para loops do..while:
O loop acima rodaria exatamente uma vez, desde que depois da primeira iteração, quando a condição é verificada, ela é avaliada como FALSE ($i não é maior que zero 0) e a execução do loop termina.
Usuários avançados de C podem estar familiarizados com o uso diferenciado do loop do..while, para permitir o fim da execução no meio dos blocos de código, englobando-os com do..while (0), e usando a instrução break.
O fragmento de código a seguir demonstra isso:
do {if ($i 5) {print "i não é grande o suficiente"; break;} $i *= $factor; if ($i $minimum_limit) {break;} print "i está Ok"; ...process i...} while(0);
Não se preocupe se você não entendeu isto da forma certa ou de jeito nenhum.
Você pode codificar scripts simples ou mesmo poderosos sem usar esse 'recurso'.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
else
Freqüentemente você vai querer executar uma instrução se uma certa condição for encontrada, e uma instrução diferente se a condição não for encontrada.
Isto é o que o else faz. else estende um comando if para executar uma instrução caso a expressão no comando if seja avaliada como FALSE.
Por exemplo, o código a seguir mostraria a é maior que b se $a for maior que $b, e a NÃO é maior que b caso contrário:
if ($a $b) {print "a é maior que b";} else {print "a NÃO é maior que b";}
Anterior
Principal
Próxima
Estruturas de Controle
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
elseif
elseif, como seu nome sugere, é uma combinação de if e else.
Da mesma forma que o else, ele estende um comando if para executar uma instrução diferente no caso de a expressão if original ser avaliada como FALSE.
Porém, ao contrário de else, ele executará aquela expressão alternativa somente se a expressão condicional do elseif for avaliada como TRUE.
Por exemplo, o código a seguir mostraria a é maior que b, a é igual a b ou a é menor que b:
if ($a $b) {print "a é maior que b";} elseif ($a == $b) {print "a é igual a b";} else {print "a é menor que b b";}
Podem haver vários elseif s dentro da mesma instrução if.
A primeira expressão elseif (se houver) que for avaliada como TRUE será executada.
No PHP, você também pode escrever 'else if' (em duas palavras) e o comportamento será idêntico a um 'elseif '(em uma só palavra).
O significado sintático é ligeiramente diferente (se você está familiarizado com C, eles tem o mesmo comportamento), mas no final de contas ambos teriam exatamente o mesmo comportamento.
O comando elseif só é executado se a expressão if precedente e quaisquer expressões elseif anteriores forem avaliadas como FALSE, e a expressão elseif atual for avaliada como TRUE.
Anterior
Principal
Próxima
Acima
Sintaxe alternativa para estruturas de controle
Manual do PHP
Anterior
Capítulo 12.
Próxima
foreach
O PHP4 (mas não o PHP3) inclui um construtor foreach, muito parecido com o PERL e outras linguagens.
Isto oferece uma maneira fácil de iterar sobre matrizes. foreach funciona somente com arrays, e lançará um erro se tentar utilizá-lo em uma variável de qualquer tipo diferente ou em variáveis não inicializadas.
Há duas sintaxes; a segunda é uma abreviatura, mas útil, da primeira:
foreach( expressao_array as $valor) instrucoes foreach(expressao_array as $chave = $valor) instrucoes
A primeira forma varre uma dada matriz dada por expressao_array.
Em cada 'loop', o valor do elemento corrente é atribuído a $valor e o ponteiro interno da matriz é avançado em uma posição (assim, no próxima iteração você estará olhando para o próximo elemento).
A segunda forma faz a mesma coisa, exceto pelo fato de que a chave do elemento atual será atribuído à variável $chave em cada iteração.
Nota:
Quando o foreach Quando o foreach inicia sua primeira execução, o ponteiro interno da matriz é zerado automaticamente para o primeiro elemento do array.
Isto significa que você não precisa chamar reset() antes de um loop foreach.
Nota:
Note também que foreach opera sobre uma cópia do array especificado, não o próprio array, portanto o ponteiro da array não é modificado como na instrução each(), que altera o elemento do array selecionado, mas isso não se reflete o array original.
Você pode ter notado que os seguintes itens são funcionalmente idênticos:
reset ($arr); while (list(, $value) = each ($arr)) {echo "Valor: $value br \n";} foreach ($arr as $value) {echo "Valor: $value br \n";}
reset ($arr); while (list($key, $value) = each ($arr)) {echo "Chave: $key; Valor: $value br \n";} foreach ($arr as $key = $value) {echo "Chave: $key; Valor: $value br \n";}
Mais alguns exemplos para demonstrar os usos:
/* exemplo foreach 1: somente valores * / $a = array (1, 2, 3, 17); foreach ($a as $v) {print "Valor atual de \$a: $v.\n";} / * exemplo foreach 2: valores (com as chaves impressas para ilustração) * / $a = array (1, 2, 3, 17); $i = 0; / * para exemplo somente * / foreach($a as $v) {print "\$a[$i] = $v.\n"; $i++;} / * exemplo foreach 3: chaves e valores * / $a = array ("um "= 1, "dois" = 2, "três "= 3, "dezessete" = 17); foreach($a as $k = $v) {print "\$a[$k] = $v.\n";} / * exemplo foreach 4: arrays multidimensionais * / $a[0][0] = "a"; $a[0][1] = "b"; $a[1][0] = "y"; $a[1][1] = "z"; foreach($a as $v1) {foreach ($v1 as $v2) {print "$v2\n";}} / * exemplo foreach 5: arrays dinâmicos * / foreach(array(1, 2, 3, 4, 5) as $v) {print "$v\n";}
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
for
Loops for são os laços mais complexos em PHP.
Eles se comportam como os seus compatíveis em C.
A sintaxe de um loop for é:
for (expr1; expr2; expr3) instrucoes
A primeira expressão (expr1) é avaliada (executada) uma vez incondicionalmente no começo do loop.
No começo de cada iteração, expr2 é avaliada.
Se ela é avaliada como TRUE, o loop continua e o( s) comando(s) aninhado(s) é(são) executado(s).
Se é avaliada como FALSE, a execução do 'loop' termina.
No fim de cada iteração, expr3 é avaliada (executada).
Cada uma das expressões pode ser vazia. expr2 vazia significa que o loop pode rodar indefinidamente (PHP considera-a implicitamente como TRUE, como em C).
Isto pode não ser tão inútil quanto você pode pensar, pois freqüentemente você pode querer terminar o 'loop' usando uma instrução break condicional em vez de usar a expressão-verdade do for.
Considere os seguintes exemplos.
Todos eles mostram números de 1 a 10:
/* exemplo 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * exemplo 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * exemplo 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * exemplo 4 * / for ($i = 1; $i = 10; print $i, $i++);
Obviamente, o primeiro exemplo parece ser o mais bonito (ou talvez o quarto), mas você pode perceber que a possível utilização de expressões vazias em laços for se torna prático em algumas ocasiões.
O PHP também suporta a "sintaxe de dois-pontos" alternativa para laços for:
for (expr1; expr2; expr3): instrucoes;...; endfor;
Outras linguagens têm uma instrução foreach para varrer uma matriz ou tabela de hashing.
O PHP 3 não tem uma construção deste tipo; O PHP 4 possui (veja foreach).
No PHP 3, você pode combinar while com as funções list() e each() para obter o mesmo efeito.
Veja a documentação para estas funções para exemplos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Estruturas de Controle
Uma instrução pode ser uma atribuição, uma chamada de função, um 'loop', uma instrução condicional, ou mesmo uma instrução que não faz nada(um comando vazio).
Instruções geralmente terminam com um ponto e vírgula.
Além disso, as instruções podem ser agrupados em um grupo de comandos através do encapsulamento de um grupo de comandos com chaves.
Um grupo de comandos é uma instrução também.
Os vários tipos de instruções são descritos neste capítulo.
A construção if é uma das mais importantes implementações de muitas linguagens, incluindo o PHP.
Ela permite a execução condicional de fragmentos de código.
O PHP implementa uma estrutura if que é similar àquela do C:
if (expressao) instrucoes
Como descrita na seção sobre expressões, expressao é avaliado por seu contexto Booleano.
Se expressao for avaliado como TRUE, o PHP executará instrucoes, e se for avaliado como FALSE, ele será ignorado.
Maiores informações sobre a avaliação para FALSE podem ser encontradas na seção Convertendo para Booleanos.
Os exemplos a seguir mostrariam que a é maior que b se $a for maior que $b:
if ($a $b) print "a é maior que b";
Freqüentemente você vai querer ter mais que uma instrução seja executado condicionalmente.
E é claro, não há necessidade de englobar cada instrução com uma cláusula if.
Em vez disso, você pode colocar várias instruções em um agrupamento de comandos.
Por exemplo, este código mostraria a é maior que b se $a for maior que $b, e então atribuiria o valor de $a para $b:
if ($a $b) {print "a é maior que b"; $b = $a;}
Comandos if podem ser aninhados indefinidamente dentro de outros comandos if, o que faz com que você complete a flexibilidade para a execução condicional de várias partes do seu programa.
Anterior
Principal
Próxima
Operadores de Arrays
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
switch
A instrução switch é similar a uma série de instruções IFs seguidas.
Em muitas ocasiões, você poderá ter que comparar a mesma variável (ou expressão) com muitos valores diferentes, executando códigos diferentes dependendo com qual valor ele se encaixar.
É exatamente para isso que a instrução switch faz.
Os exemplos seguintes mostram duas maneiras diferentes de escrever a mesma coisa, uma utilizando uma série de is s e a outra utlizando a instrução switch:
if ($i == 0) {print "i igual a 0";} if ($i == 1) {print "i igual a 1";} if ($i == 2) {print "i igual a 2";} switch ($i) {case 0: print "i igual a 0"; break; case 1: print "i igual a 1"; break; case 2: print "i igual a 2"; break;}
É importante entender como a instrução switch funciona para evitar enganos.
A instrução switch executa linha a linha (atualmente, instrução a instrução).
No início, nenhum código é executado.
Somente quando uma instrução case é encontrada com um valor que combina com a expressão do switch faz com que o PHP execute as instruções a partir daí.
O PHP continua executando as instruções até o fim do bloco switch ou na primeira vez que encontrar uma instrução break.
Se você não escrever uma instrução break no fim das instruções case, o PHP continuará executando os case s seguintes.
Exemplo:
switch ($i) {case 0: print "i igual a 0"; case 1: print "i igual a 1"; case 2: print "i igual a 2";}
Aqui, se $i é igual a zero, o PHP executará todas as instruções print!.
Se $i é igual a 1, o PHP executará os últimas duas instruções print, e somente se $i for igual a 2, você terá o comportamento 'esperado' apenas onde 'i igual a 2 'será mostrado.
Então é importante não se esquecer das instruções break (e as vezes não colocá-las para obter esse resultado em certas circunstâncias).
Em uma instrução switch, a condição somente será avaliada e resultado comparado para cada instrução case.
Em uma instrução elseif, a condição é avaliada novamente.
Se sua condição é mais complicada que um simples comparação e / ou e dentro de um loop, um switch é mais rápido.
Um case pode não ter nenhuma instrução dentro, o que simplesmente passa o controle para o próximo case.
switch ($i) {case 0: case 1: case 2: print "i é menor que 3 mas não negativo"; break; case 3: print "i é 3";}
Um case especial é o default.
Ele precisa ser a última instrução case.
Por exemplo:
switch ($i) {case 0: print "i igual a 0"; break; case 1: print "i igual a 1"; break; case 2: print "i igual a 2"; break; default: print "i não é igual a 0, 1 ou 2";}
A expressão avaliada pelo case A expressão avaliada pelo case precisa ser um tipo simples, ou seja, inteiros, números de ponto flutuante e strings.
Arrays ou objetos não podem ser utilizados a não ser que eles impliquem num tipo simples.
A sintaxe alternativa para estruturas de controle é suportada para os switches.
Para maiores informações, veja Sintaxe alternativa para estruturas de controle.
switch ($i): case 0: print "i igual a 0"; break; case 1: print "i igual a 1"; break; case 2: print "i igual a 2"; break; default: print "i não é igual a 0, 1 ou 2"; endswitch;
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
while
Loops while são o tipo mais simples de criar um 'loop' em PHP.
Eles se comportam como seus compatíveis em C.
O formato básico de um comando while é:
while (expressao) instrucoes
O significado de um comando while é simples.
Ele pede que o PHP execute os comandos aninhados repetidamente, enquanto a expressão do while é avaliada como TRUE.
O valor da expressão é verificada cada vez que se passa no começo do 'loop', desta forma, mesmo que este valor mude durante a execução do(s) comando(s) aninhado(s), a execução não parará até que o fim da iteração (cada vez que o PHP executa os comandos dentro do 'loop' é uma iteração).
Às vezes, se a expressão while é avaliada como FALSE logo no início, o( s) comando(s) aninhado(s) não será(ão) rodado(s) nem uma vez sequer.
Como no comando if, você pode agrupar múltiplos comandos dentro do mesmo laço while englobando um grupo de instruções com chaves, ou usando a sintaxe alternativa:
while (expressao): instrucoes... endwhile;
Os exemplos a seguir são idênticos, e ambos imprimem números de 1 to 10:
/* exemplo 1 * / $i = 1; while ($i = 10) {print $i++; / * o valor impresso será $i depois do acréscimo (post-increment) * /} / * exemplo 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;
Anterior
Principal
Próxima
Sintaxe alternativa para estruturas de controle
Acima
Manual do PHP
Este manual tem © Copyright 1997 - 2003 para o PHP Documentation Group.
Os membros deste grupo são listados na primeira página deste manual.
Este manual pode ser redistribuído sob os termos da Licença Pública Geral (GNU) conforme publicada pela Free Software Foundation; a versão 2 da Licença ou (a seu critério) qualquer versão posterior.
A seção 'Extendendo PHP 4.0' deste manual tem copyright © 2000 para Zend Technologies, Ltd.
Este material pode ser distribuido somente sob os termos e condições descritas na Open Publication License v1.0 ou posterior (a versão mais recente está disponível em http: / /www.opencontent.org / openpub /).
Principal
Manual do PHP
Anterior
Próxima
O debugador do PHP
O PHP 3 tem suporte ao debug baseado em rede.
O PHP 4 não possui um utilitário de debug interno.
O Zend IDE inclui um debugador e há também outras extensões grátis como o DBG em http: / /dd.cron.ru / dbg / ou o Advanced PHP Debugger (APD).
Anterior
Principal
Próxima
Acima
Utilizando o debugador
Manual do PHP
Anterior
Apêndice D.
Próxima
Protocolo do Debugger
O protocolo do debugador do PHP 3 é baseado em linhas.
Cada linha tem um tipo, e várias linhas compõem uma mensagem.
Cada mensagem começa com uma linha do tipo start e termina com uma linha do tipo end.
O PHP 3 pode enviar linhas de diferentes mensagens simultaneamente.
Uma linha tem este formato:
Data no formato ISO 8601 (yyyy - mm - dd)
Hora, incluindo microsegundos: hh: mm: uuuuuu
Nome DNS ou IP da maquina onde o erro do script foi gerado.
ID do processo na máquina do processo com o PHP 3 que gerou este erro de script.
Tipo da linha.
Informa o programa sobre como ele deve tratar os seguintes dados:
Tabela D-1.
Tipos de Linhas de Debug
Nome
Significado
Informa ao programa que a mensagem começa aqui.
O conteúdo de data será o tipo de erro da mensagem, como listado abaixo.
A mensagem de erro do PHP 3.
Arquivo e número da linha onde ocorreu o erro.
A primeira linha location sempre conterá o nível superior. data conterá: arquivo: linha.
Sempre existirá uma linha location após uma message e após cada function.
Número de janelas (frames) na saida atual.
Se houver quatro níveis, será esperado informação sobre quatro níveis de funções chamadas.
Se não for dada nenhuma linha de janela (frame) assume que o valor é 0 (o erro aconteceu no início).
Nome da função onde o erro ocorreu.
Será repetida para cada vez que a função for chamada dentro da pilha.
Informa ao programa que a mensagem de debug termina aqui.
Linha de dados.
Tabela D-2.
Tipos de erros de debug
Debugador
Interno do PHP 3
warning (alerta, atenção)
error (erro)
parse (interpretação)
notice (notificação)
core-error (erro grave)
core-warning (aviso grave)
unknown (desconhecido)
(qualquer outro)
Exemplo D-1.
Exemplo de uma mensagem de Debug
Anterior
Principal
Próxima
Utilizando o debugador
Acima
Manual do PHP
Anterior
Apêndice D.
Próxima
Utilizando o debugador
O debugador interno do PHP 3 é útil para rastrear bugs fugitivos.
O debugador trabalha conectado em uma porta TCP cada vez que o PHP 3 inicia.
Todas as mensagens de erro daquela requisição será enviada para esta conexão TCP.
Estas informações são destinadas a "debugar o servidor" de dentro de um sistema IDE ou editor de arquivos programável (como o Emacs).
Como ativar o debugger:
Configure uma porta TCP para ele no arquivo de configuração (debugger.port) e habilite ele (debugger.enabled).
Configure um "ouvidor" TCP naquela porta em algum programa (por exemplo socket -l -s 1400 no UNIX).
Em seu código execute um "debugger_on (endereço )", onde endereço é o número IP ou nome do computador executando o "ouvidor" TCP.
Anterior
Principal
Próxima
O debugador do PHP
Acima
Protocolo do Debugger
Anterior
Capítulo 49.
Build Problems
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 52.
PHP and COM
Exemplo 52-1.
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 47.
Database issues
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 44.
General Information
Anterior
Principal
PrÃ³xima
Perguntas Mais FreqÃ¼entes
Acima
Anterior
VI.
Perguntas Mais Freqüentes
Miscellaneous Questions
Anterior
Principal
Próxima
Anterior
Capítulo 51.
PHP and HTML
Exemplo 51-1.
Nota:
Exemplo 51-2.
Nota:
Exemplo 51-3.
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 48.
Installation
Anterior
Principal
PrÃ³xima
Acima
Anterior
Capítulo 53.
PHP and other languages
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 45.
Mailing lists
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 55.
Migrating from PHP 3 to PHP 4
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 54.
Migrating from PHP 2 to PHP 3
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 56.
Miscellaneous Questions
Anterior
Principal
Próxima
Acima
Apêndices
Anterior
Capítulo 46.
Obtaining PHP
Nota:
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 50.
Using PHP
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Capítulo 23.
Utilizando o PHP na linha de comando
A partir versão 4.3, o PHP suporta um novo tipo SAPI (Server Application Programming Interface) chamado CLI que significa Command Line Interface.
Como o próprio nome indica, essa SAPI tem foco no desenvolvimento de aplicações shell (ou no terminal / linha de comando) com o PHP.
As diferenças entre a CLI SAPI e as outras SAPI s são detalhadas neste capítulo.
A CLI SAPI foi liberada primeiramente com o PHP 4.2.0, mas ainda em estágio experimental, sendo necessário ativá-la explicitamente com a opção --enable-cli durante o. / configure.
Desde o PHP 4.0.3 a CLI SAPI não mais é experimental e é sempre compilada e instalada como o arquivo php (chamado php.exe no Windows), no formato binário executável.
Diferenças importantes das CLI SAPI comparada com outras SAPI s:
Diferentemente da CGI SAPI, nenhum header é impresso na saída.
A CGI SAPI possui um meio de suprimir os headers HTTP, mas não há uma chave equivalente para ativá-los na CLI SAPI.
A versão CLI é definida silenciosa por padrão.
Mas a chave -q é mantida para compatibilidade, de forma que você possa utilizar scripts CGI antigos.
Ela não altera o diretório de execução para o do script. (a chave -C também é mantida para compatibilidade).
Mensagens de erro em texto simples (sem formatação HTML).
Estas são as diretivas do php.ini que são sobrescritas pela CLI SAPI porque não fazem sentido no ambiente shell:
Tabela 23-1.
Diretivas php.ini sobrescritas
Diretiva
Valor default CLI SAPI
Comentários
Pode ser bem difícil de ler mensagens de erro no seu shell quando elas estão embebidas dentro de tags HTML, por isso essa diretiva tem default para FALSE.
Essa diretiva causa que qualquer saída gerada de um print(), echo() e semelhantes sejam imediatamente escritas para o output e não cacheadas em nenhum buffer.
Você ainda pode usar o output buffering se você precisa atrasar ou manipular a saída padrão.
Devido as infinitas possibilidades da utilização do PHP em ambientes shell, tempo máximo de execução foi configurado para ilimitado.
Enquanto aplicações escritas para web são geralmente executadas em poucos segundos, aplicações no shell tendem a ter um tempo de execução mais longo.
Nota:
Estas diretivas não podem ser inicializadas com outros valores do arquivo de configuração php.ini ou um arquivo personalizado (se informado).
Esta limitação existe porque estes valores são aplicados depois que todos os arquivos de configuração são analisados.
Entretanto, seus valores podem ser modificados durante a execução (o que pode não fazer sentido para todas elas, por exemplo, register_argc_argv).
Para facilicar a operação no ambiente shell, as seguintes constantes estão definidas:
Tabela 23-2.
Constantes específicas CLI
Constante
Descrição
Considerando isso, você não precisará mais abrí-los, por exemplo o stderr você mesmo, mas simplesmente usar a constante em vez do recurso stream:
A CLI SAPI não modifica o diretório de execução atual para o diretório onde o script é interpretado!
Exemplo mostrando a diferença da CGI SAPI:
?php / * Nossa aplicação de teste * / echo getcwd(), "\n";?
Quando utilizando a versão CGI, a saída é
$pwd / tmp $php-cgi -f outro_diretorio / test.php / tmp / outro_diretorio
Utilizando a versão CLI SAPI:
$pwd / tmp $php -f outro_diretorio / test.php / tmp
Nota:
A CGI SAPI suporta o comportamento da CLI SAPI utilizando a chave -C quando de sua execução na linha de comando.
A lista de opções de linha de comando fornecidas pelo binário do PHP pode ser solicitada a qualquer tempo executando o PHP com a opção -h:
A CLI SAPI fornecer três maneiras diferentes para você executar seu código PHP:
Chamando o PHP para executar um arquivo determinado.
Passar o código PHP para execução diretamente a linha de comando.
Nota:
Leia o exemplo cuidadosamente, observando que não há tags de abertura ou fechamento!
A opção -r simplesmente não precisa delas.
Utilizando-as você obterá erros de interpretação.
Fornece código PHP para interpretação via a entrada padrão (stdin).
Isto mostra a habilidade poderosa de como criar dinamicamente código PHP e fornecê-lo ao binário, como demonstrado neste exemplo (apenas demonstrativo):
$alguma_aplicacao _BAR_ algum_filtro _BAR_ php _BAR_ sort -u final_output.txt
Assim como qualquer aplicação shell, não somente o binário do PHP aceita um certo número de argumentos, mas também seu script PHP também pode recebê-los.
O número de argumentos que podem ser passados para seu script não é limitado ao PHP (mas o shell tem um certo limite de tamanho em caracteres que podem ser informados, e não há um padrão para esse limite).
Os argumentos passados para seu script são disponibilizados no array global $argv.
No índice zero sempre conterá o nome do script (podendo ser - no caso de código PHP estar vindo da entrada padrão ou da opção de linha de comando -r).
O segunda variável global $argc contém o número de elementos no array $argv (mas não o número de argumentos passados para seu script.
Os argumentos que você deseja passar para seu script não podem começar com o caracter - e isso não pode ser modificado.
Passando argumentos para seu script que comecem com um - causará problemas porque o PHP tentará manuseá-los.
Para prevenir isso, utilize o separador de argumentos - -.
Depois que os argumentos são interpretados pelo PHP, todos os argumentos restantes são repassados intocados para seu script.
# Isto não executará o código fornecido e irá fazer o PHP mostrar sua ajuda $php -r 'var_dump($argv);' -h Usage: php [options] [-f] file [args...] [...] # Isto passará o argumento '-h 'para seu script e prevenirá o PHP de usá-lo $php -r 'var_dump($argv);' - - -h array(2) {[0]= string(1) "-" [1]= string(2) "-h "}
Entretanto, há ainda uma outra maneira de se utilizar o PHP no shell.
Você pode escrever um script que na primeira linha tenha #! / usr / bin / php e na seqüência tenha código PHP normal, incluindo as tags de início e fim e os atributos de execução do arquivo.
Desta maneira ele pode ser executado como um script shell ou PERL normalmente:
$chmod 755 teste $. / test -h - - foo array( 4) {[0]= string(6) ". / teste" [1]= string(2) "-h "[2]= string(2) "- -" [3]= string(3) "foo "}
Tabela 23-3.
Opções de linha de comando
Opção
Descrição
Mostra o código fonte com destaque de cores.
Esta opção usa o mecanismo interno para interpretar o arquivo e produzir uma versão HTML do fonte com destaque de cores e a envia para a saída padrão.
Note que ele somente gerará blocos de code [...] / code, mas não headers HTML.
Nota:
Esta opção não funciona juntamente com a opção -r.
Mostra o fonte sem comentários e espaços em branco.
Nota:
Esta opção não funciona juntamente com a opção -r.
Interpreta e executa o arquivo informado com a opção -f Esta diretiva é opcional e pode ser deixada de lado.
Informar somente o nome do arquivo para execução é suficiente.
Imprime as versões o PHP, PHP SAPI e Zend para a saída padrão, por exemplo:
$php -v PHP 4.3.0-dev (cli), Copyright (c) 1997-2002 The PHP Group Zend Engine v1.2.1, Copyright (c) 1998-2002 Zend Technologies
Esta opção informa um diretório onde procurar pelo php.ini ou especifica um arquivo INI personalizado diretamente (não presisa ser obrigatoriamente php.ini), por exemplo:
Executa o PHP no modo interativo.
Esta opção permite definir um valor personalizado para qualquer diretiva de configuração permitida no php.ini.
Sintaxe:
-d diretiva[ =valor]
# Omitindo a parte do valor irá configurar a diretiva para "1" $php -d max_execution_time -r '$foo = ini_get("max_execution_time"); var_dump($foo); 'string(1) "1 "# Passando um valor vazio irá configurar a diretiva para" "php -d max_execution_time= -r '$foo = ini_get("max_execution_time"); var_dump($foo);' string(0)" "# A diretiva de configuração será preenchida com qualquer coisa informada depois do caracter =' '$php -d max_execution_time=20 -r '$foo = ini_get("max_execution_time"); var_dump($foo);' string(2) "20" $php -d max_execution_time=instonaofazsentido -r '$foo = ini_get("max_execution_time"); var_dump($foo); 'string(15) "instonaofazsentido "
Gera informações estendidas para o debugador / profiler.
Carrega a extensão Zend.
Se somente o nome de arquivo é fornecido, o PHP tenta carregar essa extensão do caminho default de bibliotecas do seu sistema (geralmente especificado em / etc / ld.so.conf em sistemas Linux).
Passando um nome de arquivo com o caminho absoluto irá evitar a procura no caminho das bibliotecas de sistema.
Um nome de arquivo com uma informação de diretório relativa fará com que o PHP apenas tente carregar a extensão no caminho relativo ao diretório atual.
Esta opção fornece uma maneira conveniente apenas realizar uma checagem de sintaxe no código PHP fornecido.
No sucesso, o texto No syntax errors detected in arquivo é impresso na saída padrão e informado o código de saida de sistema 0.
Em caso de erro, o texto Errors parsing filename juntamente com o a mensagem do interpretador interno é impressa para a saída padrão e o código de saída de sistema é 255.
Esta opção não procura por erros fatais (como funções não definidas).
Use -f se você deseja detectar erros fatais também.
Nota:
Esta opção não trabalha com a opção -r
Utilizando essa opção, o PHP imprime os módulos PHP e Zend compilados (e carregados):
Esta opção de linha de comando chama a função phpinfo() e imprime seus resultados.
Se o PHP não está funcionando bem, é interessante fazer um php -i Se o PHP não está funcionando bem, é interessante fazer um php -i para observar qualquer mensagem de erro impressa antes ou dentro das tabelas de informação.
Como a saída é em HTML, ela é um pouco grande.
Esta opção permite a execução de código PHP direto da linha de comando.
As tags de início e fim do PHP (?php e?) não são necessárias e causarão erros de interpretação.
Nota:
Cuidados deverão ser tomados utilizando dessa forma para evitar que haja substituição de variáveis pelo shell.
Exemplo mostrando um erro de interpretação
Com essa opção, você pode obter informações sobre a lista atual de opções de linha de comando pequenas descrições sobre o que elas fazem.
O PHP executável pode ser utilizando para rodar scripts PHP absolutamente independente de um servidor web.
Se você está num sistema Unix, você pode acrescentar uma linha especial na primeira linha de seu script e torná-lo executável, então o sistema operacional saberá que programa deverá rodar o script.
Na plataforma Windows, você pode associar php.exe -q com o clique duplo em arquivos .php ou fazer um arquivo batch para rodar seus scripts através do PHP.
A primeira linha acrescentada ao script nos Unix não funcionam no Windows, por isso você não pode escrever programas independentes de plataforma desse jeito.
Um exemplo simples de como escrever um programa para a linha de comando segue abaixo:
Exemplo 23-1.
Um script para rodar na linha de comando (script.php)
Este é um script de linha de comando com um parâmetro.
Uso: ?php echo $argv[ 0];? opcao opcao pode ser qualquer palavra que você queira imprimir.
Com as opções --help, -help, -h ou -?, você pode obter essa ajuda. ?php} else {echo $argv[1];}?
No script acima, nós utilizamos uma primeira linha especial para indicar que este arquivo precisa rodar pelo PHP.
Como nós trabalhamos com a versão CLI aqui, não serão impressos headers HTTP.
Há duas variáveis que você precisa conhecer para escrever aplicações em linha de comando com o PHP: $argc e $argv.
O primeiro é o número de argumentos mais um (o nome do script executando).
O segundo é um array contendo os argumentos, começando com o nome do script no índice zero ($argv[0]).
No programa acima é verificado se há apenas um argumento fornecido.
Se o argumento for --help, -help, -h ou -?, é impresso uma mensagem de ajuda, imprimindo o nome do script dinamicamente.
Qualquer outro argumento é exibido como informado.
Para rodar esse aplicativo nos Unix, basta torná-lo executável e o chamar diretamente como script.php exibaisso ou script.php -h.
No Windows, você pode fazer um arquivo batch para esta tarefa:
Exemplo 23-2.
Arquivo batch para rodar um script em linha de comando (script.bat)
@c:\php\php.exe script.php %1 %2 %3 %4
Assumindo que você nomeou o programa acima como script.php, e você tem um php.exe em c:\php\php.exe este arquivo batch irá rodar com os seguintes parâmetros: script.bat exibaisso ou script.bat -h.
Veja também a documentação da extensão Readline para mais funções que você pode usar para incrementar suas aplicações para linha de comando em PHP.
Anterior
Principal
Próxima
Acima
Referência das Funções
Anterior
Capítulo 20.
Connection handling
Nota:
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 17.
Cookies
O PHP suporta transparentemente cookies HTTP.
Cookies são um mecanismo para guardar dados no navegador remoto possibilitando o acompanhamento ou identificação de usuários que retornam.
Você pode criar cookies usando a função setcookie().
Os cookies são uma parte do cabeçalho HTTP, logo setcookie() precisa ser chamada antes que qualquer outro dado seja enviado ao navegador.
Esta é a mesma limitação que a função header() tem.
Você pode usar as funções de output buferizado para atrasar as impressões do script até que você tenha decidido ou não configurar qualquer cookie ou enviar mais headers.
Qualquer cookie enviado por você para o cliente automaticamente será uma variável do PHP assim como dados de postagens GET ou POST, dependendo dos valores de register_globals e variables_order.
Se você deseja assimilar vários valores em um único cookie, simplesmente acrescente [] ao nome do cookie.
NO PHP 4.1.0 e posteriores, o array superglobal $_COOKIE sempre estará preenchido com quaisquer cookies enviados do cliente. $HTTP_COOKIE_VARS, existente nas versões anteriores do PHP, também, quando a variável de configuração track_vars estiver ativa.
Para mais detalhes, incluindo comentários sobre problemas de browsers, veja a função setcookie().
Anterior
Principal
Próxima
Acima
Gerenciar o upload de arquivos
Manual do PHP
Anterior
Capítulo 18.
Próxima
Problemas comuns
O item MAX_FILE_SIZE não pode especificar um tamanho de arquivo com tamanho maior do que o especificado no php.ini em upload_max_filesize.
O padrão é 2 Megabytes.
Se o limite de memória esta ativado, um maior memory_limit pode ser necessário. tenha certeza de estabelecer um memory_limit grande o suficiente.
Se max_execution_time for muito pequeno, a execução do script pode ultrapassar o limite de tempo.
Tenha certeza de estabelecer um max_execution_time grande o suficiente.
Se post_max_size for muito pequeno, arquivos grandes não poderão ser carregados.
Tenha certeza de estabelecer post_max_size grande o suficiente.
Não validar o arquivo que você esta operando pode permitir que os usuários acessem informações sensíveis em outros diretórios.
Por favor note que o CERN httpd aparenta cortar tudo iniciando após o primeiro espaço do header content-type que ele recebe do cliente.
Se for este o caso, CERN httpd não irá suportar o upload de arquivos.
Devido ao grande número de estilos de listagem de diretórios nós não podemos garantir que arquivos com nomes exóticos( como que contém espaço) sejam manuseados corretamente.
Anterior
Principal
Próxima
Explicação das mensagens de erro
Acima
Carregando múltiplos arquivos
Manual do PHP
Anterior
Capítulo 18.
Próxima
Explicação das mensagens de erro
Desde o PHP 4.2.0, PHP retorna um código de erro apropriado na array do arquivo.
O código de erro pode ser encontrado em ['error'] na array que é criada durante o upload do arquivo.
Em outras palavras, o erro deve ser encontrado em $_FILES[ 'userfile']['error'].
Valor:
0; não houve erro, o upload foi bem sucedido.
Valor 1; O arquivo no upload é maior do que o limite definido em upload_max_filesize no php.ini.
Valor:
2; O arquivo ultrapassa o limite de tamanho em MAX_FILE_SIZE que foi especificado no formulário html.
Valor:
3; o upload do arquivo foi feito parcialmente.
Valor:
4; Não foi feito o upload do arquivo.
Nota:
Estas tornaram-se constantes no PHP 4.3.0
Anterior
Principal
Próxima
Gerenciar o upload de arquivos
Acima
Problemas comuns
Manual do PHP
Anterior
Próxima
Gerenciar o upload de arquivos
Upload de arquivos com o método POST
O PHP é capaz de receber o upload de qualquer browser que siga a norma RFC-1867 (o que inclui Netscape Navigator 3 ou posterior, Microsoft Internet Explorer 3 com um patch da Microsoft, ou posterior sem patch).
Isto permite que se faça o upload de arquivos de texto e binários.
Com as funções de autenticação e manipulação de arquivos do PHP, você tem o controle completo de quem pode fazer o upload de arquivo e o que fazer com o arquivo após seu upload.
Veja também file_uploads, upload_max_filesize, upload_tmp_dir, e post_max_size no php.ini
Note que o PHP também suporta o método PUT para upload de arquivos como o usado por Netscape Composer e W3C 's Amaya clients.
Uma tela para upload de arquivo pode ser criada com um formulário especial parecido com este:
Exemplo 18-1.
Formulário para Upload de Arquivo
form enctype=" multipart / form-data "action="_URL_" method="post "input type="hidden" name="MAX_FILE_SIZE "value="30000" Send this file: input name="userfile "type="file" input type="submit "value="Enviar Arquivo" / form
Atenção
O valor de MAX_FILE_SIZE é um aviso para o browser.
É fácil contornar este limite.
Então não conte que o browser irá obedecer a sua vontade.
O que foi estabelecido para maximum-size no PHP não pode ser enganado.
As variáveis definidas para o upload de arquivos são diferentes dependendo da versão e da configuração.
A array $HTTP_POST_FILES existe desde o PHP 4.0.0.
Estas array irão conter toda a informação do upload do arquivo.
Usar $_FILES é preferido.
O padrão de register_globals é off desde o PHP 4.2.0.
Os conteúdos de $_FILES do nosso script de exemplo é como segue.
Note que isso assume que o nome do upload do arquivo é userfile, como o usado no exemplo acima.
O nome original do arquivo no computador do usuário.
O tipo mime do arquivo, se o browser deu esta informação.
Um exemplo pode ser "image / gif".
O tamanho, em bytes, do arquivo.
O nome temporário do arquivo, como foi guardado no servidor.
O código de erro associado a este upload de arquivo. ['error'] foi adicionado no PHP 4.2.0
Nota:
Em versões anteriores a 4.1.0 o nome era $HTTP_POST_FILES e não é uma variável autoglobal como $_FILES é.
PHP 3 não suporta $HTTP_POST_FILES.
Quando register_globals esta em on no php.ini, variáveis adicionais estão disponíveis.
Por exemplo, $userfile_name será igual a $_FILES[ 'userfile']['name'], $userfile_type será igual a $_FILES['userfile']['type'], etc.
Lembre-se que desde o PHP 4.2.0, o padrão para register_globals é off.
É preferrível não depender desta opção.
Os arquivos serão guardados no diretório temporário do servidor, a menos que outro lugar seja especificado com a opção upload_tmp_dir no php.ini.
Mudando-a com putenv() de um script PHP não irá funcionar.
Esta variável de ambiente também pode ser usada para se ter certeza que outras operações estão funcionando no arquivo do upload.
Note que deve se definir upload_temp_dir no php.ini ou TMPDIR, não podendo estarem ambos vazios, sendo recomendado no mínimo upload_tmp_dir.
Exemplo 18-2.
Validando o upload de arquivos
Veja também as funções is_uploaded_file() e move_uploaded_file() para maiores informações.
O seguinte exemplo irá processar o envio de um arquivo que vem de um formulário.
?php / / Nas versões anteriores a 4.1.0, $HTTP_POST_FILES deve ser usado ao invés de $_FILES. / / Nas versões anteriores a 4.0.3, use copy() e is_uploaded_file() ao invés move_uploaded_file $uploaddir = '/ var / www / uploads /'; print "pre"; if (move_uploaded_file($_FILES['userfile']['tmp_name'], $uploaddir. $_FILES['userfile']['name'])) {print "O arquivo é valido e foi carregado com sucesso.
Aqui esta alguma informação:\n"; print_r($_FILES);} else {print "Possivel ataque de upload!
Aqui esta alguma informação:\n"; print_r($_FILES);}?
O script PHP que irá receber o arquivo do upload deve implementar qualquer lógica que for necessária para determinar o que deve ser feito com o arquivo do upload.
Você pode, por exemplo, usar a variável $_FILES[ 'userfile']['size'] para descartar qualquer arquivo que seja muito pequeno ou muito grande.
Você pode usar a variável $_FILES[ 'userfile']['type'] que não sejam de um certo tipo.
Desde o PHP 4.2.0, você pode usar $_FILES[ 'userfile']['error'] e planejar a sua lógica de acordo com os códigos de erro.
Qualquer que seja a lógica, você deve excluir o arquivo do diretório temporário ou move-lo para outro lugar.
O arquivo será excluído do diretório temporário ao fim do script se não tiver sido movido ou renomeado.
Anterior
Principal
Próxima
Acima
Explicação das mensagens de erro
Manual do PHP
Anterior
Capítulo 18.
Próxima
Carregando múltiplos arquivos
Múltiplos arquivos podem ser carregados usando-se diferentes name para input.
Também é possível carregar vários arquivos simultaneamente e ter a informação organizada automaticamente para você em arrays.
Para fazer assim, você precisa usar a mesma sintaxe no formulário HTML que você usa para múltiplos selects e checkboxes:
Nota:
O Suporte para carregar múltiplos arquivos foi adicionado na versão 3.0.10.
Exemplo 18-3.
Carregando múltiplos arquivos
Quando o formulário acima é submetido, as matrizes $_FILES[ 'userfile'], $_FILES['userfile']['name'], e $_FILES['userfile']['size'] serão inicializadas (assim como $HTTP_POST_FILES para versões do PHP anterior a 4.1.0).
Quando register_globals esta em on, globals para os arquivos carregados também são inicializadas.
Cada um destes será uma array indexada numericamente dos valores apropriados para os arquivos submetidos.
Por exemplo, assuma que os nomes de arquivos tenham sido submetidos / home / test / review.html e / home / test / xwp.out.
Neste caso, $_FILES[ 'userfile']['name'][0] deve conter o valor review.html, e $_FILES['userfile']['name'][1] deve conter o valor xwp.out.
Similarmente, $_FILES[ 'userfile']['size'][0] deve conter o tamanho de review.html, e assim por diante.
$_FILES[ 'userfile']['name'][0], $_FILES['userfile']['tmp_name'][0], $_FILES['userfile']['size'][0], e $_FILES['userfile']['type'][0] também são definidas.
Anterior
Principal
Próxima
Problemas comuns
Acima
Suporte ao método PUT
Manual do PHP
Anterior
Capítulo 18.
Próxima
Suporte ao método PUT
O suporte ao método PUT mudou entre PHP 3 e PHP 4.
No PHP 4, deve se usar a entrada padrão para ler os conteúdos de um PUT.
Exemplo 18-4.
Salvando arquivos HTTP PUT com o PHP 4
?php / * PUT data vem do stdin stream * / $putdata = fopen( "php: / /stdin" ,"r"); / * Abre um arquivo para escrita * / $fp = fopen("myputfile.ext" ,"w"); / * Lê os dados 1KB de cada vez e escreve no arquivo * / while ($data = fread($putdata,1024)) fwrite($fp,$data); / * Fecha os streams * / fclose($fp); fclose($putdata);?
Nota:
Toda a documentação abaixo aplica-se ao PHP 3 somente.
PHP prove suporte para o método HTTP PUT usado por clientes como Netscape Composer e W3C Amaya.
Requisições PUT são muito mais simples do que o upload de arquivo e se parecem com isto:
Isto normalmente indica que o cliente remoto gostaria de salvar o conteúdo que se segue como: / path / filename.html na sua arvore web.
É obvio que não é uma boa idéia para o Apache ou o PHP automaticamente permitir que todos possam sobrescrever arquivos na sua arvore web.
Então, para manusear este tipo de requisição você tem primeiro que dizer ao seu servidor web que você quer que um certo script PHP cuide da requisição.
No apache você faz isto com a diretiva Script.
Pode ser colocada praticamente em qualquer lugar do seu arquivo de configuração do Apache.
Um lugar comum é dentro de um bloco Directory ou talvez dentro de um bloco Virtualhost.
Uma linha como esta deve fazer o truque:
Isto diz para o apache enviar todas as requisições PUT que estejam no contexto que você colocou esta linha para o script put.php.
Isto assume, é claro, que você tem o PHP ativado para a extensão .php e que o PHP esta ativo.
Dentro do seu arquivo put.php você deve então fazer algo parecido com isto:
Isto deve copiar o arquivo para a localização requisitada pelo cliente remoto.
Você provavelmente quer fazer alguma checagem e / ou autenticar o usuário antes de fazer esta copia de arquivo.
O único truque aqui é que quando o php vê uma requisição com o método PUT ele guarda o arquivo carregado em um arquivo temporário justo como se fosse manuseado pelo método POST.
Quando a requisição termina, este arquivo temporário é apagado.
Assim seu script de manuseio do PUT tem que copiar este arquivo em outro lugar.
O nome deste arquivo temporário esta na variável $PHP_PUT_FILENAME, e você pode ver o nome de arquivo de destino sugerido em $REQUEST_URI (deve variar em servidores diferentes do apache).
Este nome do arquivo de destino é o que o cliente remoto especificou.
Você não tem que ouvir o cliente.
Você pode, por exemplo, copiar todos os arquivos carregados para um diretório especial de uploads.
Anterior
Principal
Próxima
Carregando múltiplos arquivos
Acima
Anterior
III.
Características
Utilizando o PHP na linha de comando
Anterior
Principal
Demonstrando referências
Anterior
Capítulo 16.
HTTP authentication with PHP
Exemplo 16-1.
Exemplo 16-2.
Nota:
Anterior
Principal
Próxima
Características
Acima
Anterior
Capítulo 21.
Persistent Database Connections
Nota:
Atenção
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 19.
Using remote files
See Apêndice I for more information about the protocols supported by PHP.
Nota:
Nota:
The Windows versions of PHP earlier than PHP 4.3 did not support remote file accessing for the following functions: include(), include_once(), require(), require_once(), and the imagecreatefromXXX functions in the Referência XLI, Image functions extension.
Exemplo 19-1.
Exemplo 19-2.
Nota:
Anterior
Principal
Próxima
Suporte ao método PUT
Acima
Manual do PHP
Anterior
Capítulo 22.
Próxima
Functions restricted / disabled by safe mode
Tabela 22-2.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Esta função é desabilitada no safe-mode
Esta função é desabilitada no safe-mode
Esta função é desabilitada no safe-mode
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (on source and target)
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only the target is checked)
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only the target is checked)
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only affected since PHP 4.2.1)
Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only affected since PHP 4.2.1)
Anterior
Principal
Próxima
Acima
Utilizando o PHP na linha de comando
Manual do PHP
Anterior
Próxima
Safe Mode
Security and Safe Mode
Tabela 22-1.
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Anterior
IV.
Referência das Funções
Funções de Compressão Zlib
Anterior
Principal
Utilizando o PHP na linha de comando
Apache
Manual do PHP
Anterior
Próxima
abs
Descrição
Se o argumento número é do tipo float, o número retornado também é float, em outro caso será inteiro (mas poderá retornar float se o resultado tiver magnitude maior que inteiro).
Exemplo 1. exemplo de abs()
$abs = abs( -4.2); / / $abs = 4.2; (double / float) $abs2 = abs(5); / / $abs2 = 5; (inteiro) $abs3 = abs(-5); / / $abs3 = 5; (inteiro)
Anterior
Principal
Próxima
Matemática e Trigonometria
Acima
Manual do PHP
Anterior
Próxima
Retorna o coseno hiperbólico de arg, isto é, o valor cujo coseno hiperbólico é arg.
Nota: esta função não é implementada na plataforma Windows
Veja também acos(), asinh() e atanh().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o inverso do coseno de arg em radianos. acos() é a função complementar de cos(), o que significa que a==cos(acos(a)) para qualquer valor de var que esteja dentro dos limites de acos().
Veja também acosh(), asin() e atan().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string com barras invertidas antes dos caracteres que estão listados no parâmetro charlist.
Como no estilo C, caracteres no código ASCII menores que 32 e maiores que 126 são convertidos para representação octadecimal.
Tome cuidado se você escolher escapar caracteres 0, a, b, f, n, r, t e v.
Eles serão convertidos para \0, \a, \b, \f, \n, \r, \t e \v.
No PHP \0 (NULL), \r (sinal de retorno), \n (novalinha) e \t (tab) são seqüencias de escape predefinidas, enquanto em C todas essas são seqüencias de escape predefinidas.
charlist como "\0..\37", que que escaparia todos os caracteres em código ASCII entre 0 e 37.
Exemplo 1. addcslashes() exemplo
Quando você define uma seqüencia de caracteres no argumento charlist certifique-se que você sabe quais os caracteres que vêm dentro do intervalo que você definiu.
Veja também stripcslashes(), stripslashes(), htmlspecialchars(), e quotemeta().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string com barras invertidas antes dos caracteres que precisam estar entre aspas numa pesquisa ao banco de dados e etc.
Estes caracteres estão com aspas simples ('), dupla ("), barra invertida (\) e NUL (o NULL byte).
veja também stripslashes(), htmlspecialchars(), e quotemeta().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
apache_child_terminate() apache_child_terminate() registrará o processo Apache executando a requisição atual do PHP para finalização quando a execução do código PHP terminar.
Isto pode se utilizado para terminar um processo depois que um script que tiver um alto consumo de memória for rodado e quando essa memória normalmente só é liberada internamente, mas não é devolviva para o sistema operacional.
Nota:
A disponibilidade desse recurso é controlado pela diretiva php.ini apache.child_terminate, que está definida off por default.
Este recurso não está disponível em versões multi-thread do Apache, como a versão para Windows 32 bits.
Veja também exit().
Anterior
Principal
Próxima
Apache
Acima
Manual do PHP
Anterior
Próxima
apache_lookup_uri
Descrição
Trabalha o suficiente para obter todas as informações importantes sobre o recurso dado e retorna esta informação em uma classe.
As propriedades da classe retornada são:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
apache_note() é uma função específica do Apache que obtém e seta valores em uma tabela de notas de requisição.
Se for chamada com um argumento, ela retorna o valor atual da nota note_name.
Se for chamada com dois argumentos, ela seta o valor da nota note_name para note_value e retorna o valor anterior da nota note_name.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
apache_request_headers() retorna um array associativo de todos os headers HTTP da requisição atual.
Ela é somente suportada se o PHP roda como um módulo do Apache.
Nota:
Antes do PHP 4.3.0, apache_request_headers() era chamado getallheaders().
Depois do PHP 4.3.0, getallheaders() é um sinônimo para apache_request_headers().
Exemplo apache_request_headers()
Nota:
Você também pode obter o valor das variáveis CGI comuns lendo-as a partir do ambiente, o que funciona caso esteja ou não utilizando o PHP como módulo do Apache.
Faça um phpinfo() para ver uma lista dessas variáveis chamadas variáveis ambiente.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
apache_response_headers
Descrição
Esta funcionalidade foi acrescentada a partir do PHP 4.3.0.
Veja também getallheaders() e headers_sent().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_change_key_case
Descrição
A mudança depende do último parâmetro (opcional) case.
Você pode passar duas constantes para ele, CASE_UPPER e CASE_LOWER.
O padrão é CASE_LOWER.
Essa função deixará os índices numéricos inalterados.
Exemplo de array_change_key_case()
$input_array = array( "primeiRo "= 1, "segunDo" = 4); print_r(array_change_key_case($input_array, CASE_UPPER);
A saída deste programa será:
Array ([PRIMEIRO] = 1 [SEGUNDO] = 2)
Anterior
Principal
Próxima
Funções para manipulação de arrays
Acima
Manual do PHP
Anterior
Próxima
array_chunk() divide um array em diversos arrays tendo como tamanho o valor de size.
Você provavelmente terá um array com menos valores no final.
Serão gerados arrays como membros de um array multidimensional com índices numéricos começando de 0 (zero).
Passando o valor TRUE para o parâmetro opcional preserve_keys, pode-se forçar a preservação das chaves do array original.
Se for passado o valor FALSE, novos índices numéricos serão gerados em cada array resultante começando de 0 (zero).
O padrão é FALSE.
Exemplo de array_chunk()
A saída deste programa será:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_count_values() retorna um array utilizando os valores do array input como chaves e seus respectivos números de ocorrências como valores.
Exemplo de array_count_values()
$array = array (1, "ola", 1, "mundo", "ola"); array_count_values ($array);
Array ([1] = 2 [ola] = 2 [mundo] = 1)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. array_diff_assoc() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_diff() retorna um array contendo todos os valores de array1 que não estão presentes em nenhum dos outros argumentos.
Note que as chaves são preservadas.
Exemplo de array_diff()
$array1 = array ("a "= "verde", "vermelho", "azul", "vermelho"); $array2 = array ("b" = "verde", "amarelo", "vermelho"); $result = array_diff ($array1, $array2);
O exemplo acima faz com que $result seja array ("azul");.
Ocorrências multiplas em $array1 são tratados da mesma forma.
Nota:
Dois elementos são considerados iguais se, e somente se, (string) $elem1 === (string) $elem2.
Em palavras: quando a representação em string é a mesma.
Nota:
Note que esta função faz compara apenas uma dimensão de um array com dimensão n.
Mas, obviamente, você pode comparar outras dimensões usando array_diff( $array1[0], $array2[0]);.
Atenção
Não estava funcionando no PHP 4.0.4!
Veja também array_intersect().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
array_fill
Descrição
array_fill() preenche um array com o número de entradas igual a num com o valor do parâmetro value, e chaves começando a partir de start_index.
Exemplo 1.
Exemplo de array_fill()
$a = array_fill( 5, 6, 'banana'); / * $a agora tem os seguintes valores: $a[5] = "banana"; $a[6] = "banana"; $a[7] = "banana"; $a[8] = "banana"; $a[9] = "banana"; $a[10] = "banana"; * /
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_filter() retorna um array contendo todos os elementos do array input filtrados de acordo com uma função aplicada.
Se o array input for associativo, as chaves são preservadas.
Exemplo de array_filter()
function impar( $var) {return ($var% 2 == 1);} function par($var) {return ($var% 2 == 0);} $array1 = array ("a "= 1, "b" = 2, "c "= 3, "d" = 4, "e "= 5); $array2 = array (6, 7, 8, 9, 10, 11, 12); echo "Impares: \n"; print_r(array_filter($array1, "impar")); echo "Pares: \n"; print_r(array_filter($array2, "par"));
A saída deste programa seria:
Impares:
Array ([a] = 1 [c] = 3 [e] = 5) Pares:
As funções utilizadas por array_filter() não devem alterar os valores do array..
Por exemplo, adicionar ou remover um elemento, pode apagar o array ao qual está sendo aplicada array_filter().
Se este array for alterado, o comportamento desta função se torna imprevisvel.
Veja também array_map() e array_reduce().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_flip() retorna um array com com a relação entre suas chaves e valores invertida, ou seja, as chaves de trans passam a ser os valores e os valores de trans passam a ser as chaves.
Note que os valores de trans devem ser chaves válidas, ou seja, eles precisam ser inteiros não negativos ou string.
Um aviso será mostrado se um valor é de um tipo inválido para chaves, e o par chave / valor em questão não será invertido.
Se um valor tem várias ocorrências, a última chave será usada como valor, e todos os outros serão perdidos.
array_flip() retorna FALSE se falhar.
Exemplo de array_flip()
Exemplo de array_flip(): colisão
Agora $trans é:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna um array a partir dos valores fornecidos.
Índices podem ser atribuidos aos valores através do operador =.
O índice por de ser do tipo string ou numérico.
Quando o índice é omitido, um índice numérico inteiro é automaticamente gerado, começando do 0.
Se o índice é um inteiro, o próximo índice a ser gerado será igual ao maior índice inteiro + 1.
Note que quando dois índices idênticos são definidos, o último sobrescreve o primeiro.
O exemplo a seguir demonstra como criar um array com duas dimensões, como especificar chaves em arrays associativos, e como definir índices numéricos em arrays normais.
Exemplo de array()
$frutas = array ("frutas "= array ("a"= "laranja", "b"= "banana", "c"= "melancia"), "numeros" = array (1, 2, 3, 4, 5, 6), "buracos "= array ("primeiro", 5 = "segundo", "terceiro"));
Exemplo 2.
Indexação automática com array()
$array = array( 1, 1, 1, 1, 1, 8 = 1, 4 = 1, 19, 3 = 13); print_r($array);
vai mostrar:
Esse exemplo cria um array com o índices a partir do 1.
Exemplo 3.
Array com índices a partir do 1 com array()
$trimestre = array( 1 = 'Janeiro', 'Fevereiro', 'Marco'); print_r($trimestre);
vai mostrar:
Array ([1] = 'Janeiro '[2] = 'Fevereiro' [3] = 'Marco ')
Veja também array_pad(), list() e range().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. array_intersect_assoc() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_intersect() retorna um array contendo todos os valores de array1 que estão presentes nos outros argumentos.
Note que as chaves são preservadas.
Exemplo de array_intersect()
$array1 = array ("a "= "verde", "vermelho", "azul"); $array2 = array ("b" = "verde", "amarelo", "vermelho"); $result = array_intersect ($array1, $array2);
Isso faz com que $result tenha
Array ([a] = verde [0] = vermelho)
Nota:
Dois elementos são considerados iguais se, e somente se, (string) $elem1 === (string) $elem2.
Em palavras: quando a representação em string é a mesma.
Atenção
Essa função não funcionava no PHP 4.0.4!
Veja também array_diff().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_key_exists() retorna TRUE se a chave key existe no array. key pode ser qualquer valor possível para uma chave de array.
Exemplo de array_key_exists()
$busca_array = array( "primeiro "= 1, "segundo" = 4); if (array_key_exists("primeiro", $busca_array)) {echo "O elemento 'primeiro 'está no array !";}
Nota:
O nome dessa função é key_exists() no PHP versão 4.0.6.
Veja também isset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_keys() retorna as chaves, numéricas e string, do array input.
Se o parâmetro opcional search_value for especificado, então apenas as chaves para esse valor serão retornadas.
Do contrário, todas as chaves de input serão retornadas.
Exemplo de array_keys()
$array = array (0 = 100, "cor "= "vermelho"); print_r(array_keys ($array)); $array = array ("azul", "vermelho", "verde", "azul", "azul"); print_r(array_keys ($array, "azul")); $array = array ("cor" = array("azul", "vermelho", "verde"), "tamanho "= array("pequeno", "medio", "grande")); print_r(array_keys ($array));
A saída deste programa seria:
Array ([0] = 0 [1] = cor) Array ([0] = 0 [1] = 3 [2] = 4) Array ([0] = cor [1] = tamanho)
Nota:
Abaixo está uma implementação para aqueles que ainda usam PHP 3.
Exemplo 2.
Implementação de array_keys() para usuários do PHP 3
function array_keys ($arr, $term="") {$t = array(); while (list($k,$v) = each($arr)) {if ($term $v != $term) {continue; $t[] = $k;} return $t;}}
Veja também array_values().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_map() retorna um array contendo todos os elementos de arr1 depois de aplicada uma determinada função em cada um.
O número de parâmetros que esta função aceita deve coincidir com o número de arrays passados para a array_map()
Exemplo de array_map()
?php function cubo( $n) {return $n*$n*$n;} $a = array(1, 2, 3, 4, 5); $b = array_map("cubo", $a); print_r($b);?
E programa acima faz com que $b tenha:
Exemplo 2. array_map() - usando mais de um array
?php function mostrar_Espanhol( $n, $m) {return "O número $n é chamado de $m na Espanha";} function map_Espanhol($n, $m) {return array ($n = $m);} $a = array(1, 2, 3, 4, 5); $b = array("uno", "dos", "tres", "cuatro", "cinco"); $c = array_map("mostrar_Espanhol", $a, $b); print_r($c); $d = array_map("map_Espanhol", $a, $b); print_r($d);?
Resultará em:
/ / Saída de $c Array ([0] = O número 1 é chamado de uno na Espanha [1] = O número 2 é chamado de dos na Espanha [2] = O número 3 é chamado de tres na Espanha [3] = O número 4 é chamado de cuatro na Espanha [4] = O número 5 é chamado de cinco na Espanha) / / Saída de $d Array ([0] = Array ([1] = uno) [1] = Array ([2] = dos) [2] = Array ([3] = tres) [3] = Array ([4] = cuatro) [4] = Array ([5] = cinco))
Normalmente quando se usa dois ou mais arrays, eles devem ter o mesmo tamanho porque a função callback é aplicada paralelamente nos elementos correpondentes.
Se os arrays tem tamanhos diferentes, o menor array será extendido com elementos vazios.
Uma forma interessante de se usar esta função é na construção de um array de arrays, o que pode ser facilmente feito usando NULL como o nome da função callback.
Exemplo 3.
Criando um array de arrays
?php $a = array( 1, 2, 3, 4, 5); $b = array("um", "dois", "tres", "quatro", "cinco"); $c = array("uno", "dos", "tres", "cuatro", "cinco"); $d = array_map(null, $a, $b, $c); print_r($d);?
A saída do programa acima seria:
Veja também array_filter(), array_reduce() e array_walk().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_merge() funde os elementos dois ou mais arrays de forma que os elementos de um são colocados no final do array anterior.
Retorna o array resultante da fusão.
Se os arrays dados têm as mesmas chaves string, então o último valor para uma chave irá sobrescrever o valor anterior.
Se, no entanto, os arrays tem as mesmas chaves numéricas, o último valor para uma chave não sobrescreverá o valor original, e sim adicionado ao array resultante.
Exemplo de array_merge()
$array1 = array ("cor "= "vermelho", 2, 4); $array2 = array ("a", "b", "cor" = "verde", "forma "= "trapezoide", 4); $result = array_merge ($array1, $array2);
Neste caso $result será:
Array ([cor] = verde [0] = 2 [1] = 4 [2] = a [3] = b [forma] = trapezoide [4] = 4)
Exemplo 2.
Exemplo simples de array_merge()
Não esqueça que as chaves numéricas serão reordenadas!
Se você quer preservar os arrays e apenas concatená-los, o operador +:
Nota:
Chaves coincidentes serão sobrescritas usando as regras de primeira ocorrência.
Veja também array_merge_recursive().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_merge_recursive() funde os elementos de dois ou mais arrays de forma que os elementos de um são colocados no final do array anterior.
Retorna o array resultante da fusão.
Se os arrays dados tem as mesmas chaves string, então os valores para uma chave são fundidos em um array, e isso é feito recursivamente, sendo que, se um dos valores for um array também, este função irá fundi-lo com os valores correspondentes no array resultante também.
Se, no entanto, os arrays tem as mesmas chaves numéricas, o último valor para uma chave não sobrescreverá o valor original, e sim adicionado ao array resultante.
Exemplo de array_merge_recursive()
$ar1 = array ("cor "= array ("favorita" = "vermelho"), 5); $ar2 = array (10, "cor "= array ("favorita" = "verde", "azul")); $result = array_merge_recursive ($ar1, $ar2);
Neste caso $result será:
Array ([color] = Array ([favorita] = Array ([0] = vermelho [1] = verde) [0] = azul) [0] = 5 [1] = 10)
Veja também array_merge().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_multisort() pode ser usada para ordenar vários arrays de uma vez ou apenas um array multi-dimensional de acordo com uma das dimensões.
A associação entre chaves e valores é mantida.
Os arrays dados são tratados como colunas de uma tabela a ser classificada pelas linhas - isso lembra a funcionalidade da cláusula ORDER BY da SQL.
O primeiro array é o principal na ordenação.
As linhas (valores) no primeiro array serve de base para a ordenação do próximo, e assim por diante.
A estrutura de argumentos dessa função não é muito normal, mas bastante flexível.
O primeiro argumento de todos deve ser um array.
Subsequentemente, cada argumento pode ser um array ou um dos sinais de classificação da lista a seguir.
Sinais de ordem de classificação:
SORT_ASC - classifica na ordem crescente
SORT_DESC - classifica na ordem descrescente
Sinais de tipos de ordenação:
SORT_REGULAR - compara os elementos normalmente
SORT_NUMERIC - compara os elementos como itens numéricos
SORT_STRING - compara os elementos como strings
Não podem existir dois sinais de ordenação do mesmo tipo especificados para um mesmo array.
Os sinais de ordenação especificados depois de um array se aplicam apenas para esse array - a eles são atribuídos por padrão os valores SORT_ASC e SORT_REGULAR depois de cada novo argumento do tipo array.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Ordenando múltiplos arrays
Nesse exemplo, depois da ordenação, o primeiro array terá 10, "a", 100, 100.
O segundo conterá 1, 1, "2", 3.
Os elementos do segundo array que correpondem aos do primeiro (100 e 100) também foram ordenados.
Exemplo 2.
Ordenando um array multi-dimensional
Nesse exemplo, depois da ordenação, o primeiro array terá 10, 100, 100, "a" (foi ordenado como strings em ordem crescente), e o segundo conterá 1, 3, "2", 1 (classificado como números, em ordem descrescente).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_pad() retorna uma cópia de input expandido para o comprimento especificado por pad_size com o valor pad_value.
Se pad_size for positivo então o array é expandido pela direita, se for negativo, pela esquerda.
Se o valor absoluto de pad_size for menor ou igual ao comprimento de input, então ele permanece inalterado.
Exemplo de array_pad()
$input = array (12, 10, 9); $result = array_pad ($input, 5, 0); / / $result é array (12, 10, 9, 0, 0) $result = array_pad ($input, -7, -1); / / $result é array (-1, -1, -1, -1, 12, 10, 9) $result = array_pad ($input, 2, "noop"); / / Não será expandido
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_pop() retira e retorna o último elemento de array, diminuindo array em um elemento.
Se array estiver vazio (ou se não for um array), o valor NULL é retornado.
Exemplo de array_pop()
$cesta = array ("laranja", "banana", "melancia", "morango"); $fruta = array_pop ($cesta);
Depois disso, $cesta terá 3 elementos:
Array ([0] = laranja [1] = banana [2] = melancia)
Atenção
Esta função pode retornar o booleano FALSE, mas também pode retornar um valor não-booleano que pode ser avaliado como FALSE, como 0 ou "".
Leia a seção em Booleanos para maiores informações.
Utilize o operador === para testar o valor retornado por esta função.
Veja também array_push(), array_shift(), e array_unshift().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_push() trata array como uma pilha, e adiciona as variáveis passadas como argumentos no final de array.
O comprimento de array aumenta de acordo com o número de variáveis adicionadas.
Tem o mesmo efeito de:
Retorna o novo número de elementos do array.
Exemplo de array_push()
$cesta = array ("laranja", "morango"); array_push ($cesta, "melancia", "batata");
Neste caso $stack teria os seguintes elementos:
Array ([0] = laranja [1] = morango [2] = melancia [3] = batata)
Veja também: array_pop(), array_shift(), e array_unshift().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_rand() é bastante útil quando se quer conseguir aleatoriamente um ou mais elementos de um array.
Ela recebe o array input e outro argumento opcional num_req o qual especifica quantos elementos se quer conseguir - se não for especificado, o padrão é 1.
Se estiver pegando apenas um elemento, array_rand() retorna a chave para este elemento aleatório.
De outra forma, ele retorna um array com as chaves desses elementos aleatórios.
Assim é possível conseguir chaves e valores aleatórios a partir da mesma função.
Não esqueça de chamar a função srand() para disparar o gerador de números aleatórios.
Exemplo de array_rand()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_reduce() aplica iterativamente a função definida em callback nos elementos de input, de forma a reduzi-lo a um único valor.
Se o argumento opcional initial for passado, ele será utilizado no início do processo, ou como um resultado final se o array estiver vazio.
Exemplo de array_reduce()
function soma( $v, $w) {$v += $w; return $v;} function multiplicacao($v, $w) {$v *= $w; return $v;} $a = array(1, 2, 3, 4, 5); $x = array(); $b = array_reduce($a, "soma"); $c = array_reduce($a, "multiplicacao", 10); $d = array_reduce($x, "soma", 1);
Isso resultará em $b contendo 15, $c contendo 1200 (= 1*2*3*4*5*10), e $d contendo 1.
Veja também array_filter(), array_map().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_reverse() recebe o argumento array e retorna um novo array com a ordem dos elementos invertida, preservando as chaves se o argumento preserve_keys for TRUE.
Exemplo de array_reverse()
$input = array ("php", 4.0, array ("verde", "vermelho")); $result = array_reverse ($input); $result_keyed = array_reverse ($input, TRUE);
O programa acima fará com que $result e $result_keyed tenham os mesmos elementos, mas note a diferença entre as chaves.
A saída de $result e $result_keyed será:
Array ([0] = Array ([0] = verde [1] = vermelho) [1] = 4 [2] = php) Array ([2] = Array ([0] = verde [1] = vermelho) [1] = 4 [0] = php)
Nota:
O segundo argumento foi adicionado no PHP 4.0.3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Procura em haystack pelo valor needle e retorna sua chave se for encontrado no array, e FALSE em caso contrário.
Nota:
A partir do PHP 4.2.0, array_search() retorna NULL em caso de falha ao invés de FALSE.
Se o terceiro parâmetro opcional strict for passado como TRUE então array_search() também fará uma checagem de tipos de needle em haystack.
Atenção
Esta função pode retornar o booleano FALSE, mas também pode retornar um valor não-booleano que pode ser avaliado como FALSE, como 0 ou "".
Leia a seção em Booleanos para maiores informações.
Utilize o operador === para testar o valor retornado por esta função.
Veja também array_keys() e in_array().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_shift() retira o primeiro elemento de array e o retorna, diminuindo array em um elemento e movendo todos os outros elementos para trás.
Todas as chaves numéricas alteradas para começar a contar a de 0 (zero), enquanto chaves string permanecerão inalteradas.
Se array estiver vazio (ou se não for um array), o valor NULL é retornado.
Exemplo de array_shift()
$cesta = array ("laranja", "banana", "melancia", "morango"); $fruta = array_shift ($cesta);
O programa acima resultaria em $stack tendo 3 elementos:
Array ([0] = banana [1] = melancia [2] = morango)
Veja também array_unshift(), array_push() e array_pop().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_slice() retorna a sequência de elementos de array especificada pelos parâmetros offset e length.
Se offset for positivo, a sequência começará do início de array.
Se offset for negativo, a sequência começará dessa distância do final de array.
Se length for especificado e positivo, então a sequência terá essa quantidade de elementos.
Se length for especificado e negativo então a sequência pará dessa quantidade elementos a partir do final do array.
Se for omitido, então a sequência terá todos os elementos a partir de offset até o final de array.
Note que array_slice() ignorará chaves e irá calcular os inícios e comprimentos dos intervalos baseada na posição absoluta dos elementos no array.
Exemplos de array_slice()
$input = array ("a", "b", "c", "d", "e"); $output = array_slice ($input, 2); / / retorna "c", "d", e "e "$output = array_slice ($input, 2, -1); / / retorna "c", "d" $output = array_slice ($input, -2, 1); / / retorna "d "$output = array_slice ($input, 0, 3); / / retorna "a", "b", e "c"
Veja também array_splice().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_splice() remove a sequência de elementos do array input especificados por offset e length, e os substitui com os elementos do array replacement, se for especificado.
Se offset for positivo então o começo da região a ser removida será nessa posição a partir do início do array input.
Se offset for negativo então o ínicio será dessa distância do final de input.
Se length for omitido, todos os elementos a partir de offset até o final do array serão removidos.
Se length for especificado e positivo, então essa quantidade de elementos será removida.
Se length for especificado e negativo então o final da região a ser removida será dessa quantidade de elementos a partir do final do array.
Dica: para remover todos elementos a partir de offset até o final do array quando replacement também é especificado, use count( $input) para o argumento length.
Se o array replacement Se o array replacement for especificado, então os elementos removidos serão substituidos pelo elementos desse array.
Se offset e length são dados de forma que nada será removido, então os elementos de replacement serão inseridos no lugar especificado por offset.
Dica: se a substituição for de apenas um elemento então não será necessário colocar array() para ele, a não ser que elementos seja um array.
As seguintes equivalências abaixo são válidas:
Retorna um array contendo os elementos removidos.
Exemplos de array_splice()
$input = array ("vermelho", "verde", "azul", "amarelo"); array_splice ($input, 2); / / $input será agora array ("vermelho", "verde") $input = array ("vermelho", "verde", "azul", "amarelo"); array_splice ($input, 1, -1); / / $input será agora array ("vermelho", "amarelo") $input = array ("vermelho", "verde", "azul", "amarelo"); array_splice ($input, 1, count($input), "laranja"); / / $input será agora array ("vermelho", "laranja") $input = array ("vermelho", "verde", "azul", "amarelo"); array_splice ($input, -1, 1, array("preto", "marrom")); / / $input será agora array ("vermelho", "verde", "azul", "preto", "marrom")
Veja também array_slice().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_sum() retorna a soma dos valores de um array como inteiro ou real.
Exemplos de array_sum()
$a = array( 2, 4, 6, 8); echo "soma(a) = ".array_sum($a) ."\n"; $b = array("a "= 1.2, "b" = 2.3, "c "= 3.4); echo "soma(b) = ".array_sum($b) ."\n";
A saída do programa acima seria:
soma( a) = 20 soma(b) = 6.9
Nota:
Até a versão 4.0.6 do PHP, o array em si é modificado e converte strings para valores numéricos (as quais na maioria das vezes é convertida para zero a depender dos seus valores).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_unique() recebe o argumento array e retorna um novo array sem valores duplicados.
Note que as chaves são preservadas. array_unique() ordena inicialmente os valores como strings mantendo a primeira chave encontrada para cada valor, e ignorando as chaves encontradas posteriormente.
Isso não significa que a chave do primeiro valor do array ainda desordenado será mantido.
Nota:
Dois elementos são considerados iguais se, e somente se, (string) $elem1 === (string) $elem2.
Em palavras: quando a represetação em string é a mesma.
O primeiro será usado.
Atenção
Essa função não funcionava no PHP 4.0.4!
Exemplo de array_unique()
$input = array ("a "= "verde", "vermelho", "b" = "verde", "azul", "vermelho"); $result = array_unique ($input); print_r($result);
A saída seria:
Array ([b] = verde [1] = azul [2] = vermelho)
Exemplo 2. array_unique() e tipos
$input = array (4, "4", "3", 4, 3, "3"); $result = array_unique ($input); var_dump($result);
A saída do programa acima seria (PHP 4.0.6):
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_unshift() adiciona os elementos passados como argumentos no início de array.
Note que a lista de elementos é adicionada como um todo, de forma que eles ficam na mesma ordem.
Todas as chaves numéricas serão modificadas para começar a contar de 0 (zero) enquanto chaves strings permanecerão inalteradas.
Retorna o novo número de elementos de array.
Exemplo de array_unshift()
$cesta = array ("laranja", "banana"); array_unshift ($cesta, "melancia", "morango");
O programa acima resultaria em $queue contendo os seguintes elementos:
Array ([0] = melancia [1] = morango [2] = laranja [3] = banana)
Veja também array_shift(), array_push() e array_pop().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_values() retorna todos os valores do array input.
Exemplo de array_values()
$array = array ("tamanho "= "G", "cor" = "dourado"); print_r(array_values ($array));
A saída seria:
Array ([0] = G [1] = dourado)
Nota:
Essa função foi adicionada no PHP 4, abaixo segue uma implementação para aqueles que ainda usam PHP 3.
Exemplo 2.
Implementação de array_values() para PHP 3 users
Veja também array_keys().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
array_walk
Descrição
Aplica uma função definida pelo usuário nomeada pelo argumento func em cada elemento de arr.
Normalmente, func recebe dois argumentos: o primeiro é o valor do elemento e o segundo, sua chave.
Se userdata for especificado, ele será usado como terceiro argumento da função do usuário.
Se func necessita de mais argumentos do que o que está sendo passado para ela, um erro do nível E_WARNING será gerado a cada vez que array_walk() executar func.
Esses avisos podem ser suprimidos adicionando o operador @ à chamada da função array_walk(), ou usando error_reporting().
Nota:
Se func precisar alterar realmente os valores do array, especifique que o primeiro parâmetro de func deve ser passado por referência.
Então qualquer mudança feita nesses elementos serão feitas no próprio array também.
Nota:
A passagem das chaves e do terceiro argumento para func foi adicionada no PHP 4.0.0.
array_walk() não é afetada pelo ponteiro interno do array arr. array_walk() irá percorrer todo o array independente da posição atual do ponteiro interno.
Para reiniciar o ponteiro, use reset().
No PHP 3, array_walk() reinicia o ponteiro.
Usuários não podem alterar o array a partir da função definida para ser usada.
Por exemplo, adicionar / remover elementos, removerá o array no qual array_walk() está sendo aplicada.
Exemplo 1.
Exemplo de array_walk()
?php $frutas = array ("d "= "limao", "a" = "laranja", "b "= "banana", "c" = "melancia"); function test_alter ($item1, $key, $prefix) {$item1 = "$prefix: $item1";} function test_print ($item2, $key) {echo "$key. $item2 br \n";} echo "Antes ...:\n"; array_walk ($frutas, 'test_print'); array_walk ($frutas, 'test_alter', 'fruta'); echo "... e depois:\n"; array_walk ($frutas, 'test_print');?
A saída do programa acima seria:
Antes...: d. limao a. laranja b. banana c. melancia... e depois: d. fruit: limao a. fruit: laranja b. fruit: banana c. fruit: melancia
Veja também array_map(), list(), foreach, each() e call_user_func_array().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função ordena um array de forma que a correlação entre índices e valores é mantida.
É usada principalmente para ordenar arrays associativos onde a ordem dos elementos é um fator importante.
Exemplo de arsort()
$frutas = array ("d "= "limao", "a" = "laranja", "b "= "banana", "c" = "melancia"); arsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "$chave = $valor\n";}
A saída deste exemplo seria:
c = melancia d = limao a = laranja b = banana
As frutas foram ordenadas na ordem alfabética inversa, e os índices associados a cada valor foram mantidos.
Você pode modificar o comportamento da ordenação usando o parâmetro opcional sort_flags, para mais detalhes veja sort().
Veja também: asort(), rsort(), ksort() e sort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ascii2ebcdic() é uma função específica do Apache, somente disponível em sistemas operacionais baseados no EBCDIC (OS / 390, BS2000).
Ela converte a string codificada em ASCII ascii_str em sua representação equivalente em EBCDIC (binary safe), retornando o resultado.
Veja também a função inversa ebcdic2ascii()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o inverso do seno hiperbólico de arg, isto é, o valor cujo seno hiperbólico é arg.
Nota: esta função não é implementada na plataforma Windows
Veja também asin(), acosh() e atanh().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o inverso do seno de arg em radianos. asin() é a função complementar de sin(), o que significa que a==sin(asin(a)) para qualquer valor de var que esteja dentro dos limites de asin().
Veja também asinh(), acos() e atan().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função ordena um array de forma que a correlação entre índices e valores é mantida.
É usada principalmente para ordenar arrays associativos onde a ordem dos elementos é um fator importante.
Exemplo de asort()
$frutas = array ("d "= "limao", "a" = "laranja", "b "= "banana", "c" = "melancia"); asort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "$chave = $valor\n";}
A saída desse programa seria:
b = banana a = laranja d = limao c = melancia
As frutas foram ordenadas na ordem alfabética, e os índices associados a cada valor foram mantidos.
Você pode modificar o comportamento da ordenação usando o parâmetro opcional sort_flags, para mais detalhes veja sort().
veja também arsort(), rsort(), ksort() e sort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. aspell_check()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. aspell_check_raw()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. aspell_new()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. aspell_suggest()
Anterior
Principal
Próxima
Acima
BCMath Funções Matemáticas de Precisão Arbitrária
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função calcula a tangente inversa de duas variaveis x e y.
Esta função é o equivalente a calcular a tangente inversa de y / x, exceto que os sinais de ambos os argumentos são usados para determinar o quadrante do resultado.
Esta função retorna o resultado em radianos, estando entre -PI e PI (inclusive).
Veja também acos() e atan().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a tangente hiperbólica inversa de arg, isto é, o valor cuja tangente hiperbólica é arg.
Nota: esta função não é implementada na plataforma Windows
Veja também atan(), asinh() e acosh().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o inverso da tangente de arg em radianos. atan() é a função complementar de tan(), o que significa que var == tan(atan(var)) para qualquer valor de a que esteja dentro dos limites de atan().
Veja também atanh(), asin() e acos().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
base64_decode() decodes encoded_data e retorna o dado original.
O retorno pode ser binário.
Veja também: base64_encode(), RFC-2045 seção 6.8.
Anterior
Principal
Próxima
Funções URL
Acima
Manual do PHP
Anterior
Próxima
base64_encode
Descrição
Esta codificação é designada para que dados binários durem no transporte sobre camadas de transorte que não são 8-bit clean, como mensagens de e-mail.
Dados codificados na Base-64 tem aproximadamente 33% mais espaço que dos dados originais.
Veja também: base64_decode(), chunk_split(), RFC-2045 seção 6.8.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
base_convert
Descrição
Retorna uma string contendo number representado na base tobase.
Tanto frombase quanto tobase tem que estar entre 2 e 36, inclusive.
Digitos em números com base maior do que 10 serão representados com letras a-z, com a significando 10, b significando 11 e z significando 35.
Exemplo 1. base_convert()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dado uma string contendo um caminho para um arquivo, essa função irá retornar o nome base do arquivo.
Se o nome do arquivo termina com o sufixo, este também será retirado.
No Windows, tanto a barra (/) quanto a barra invertida (\) são usadas como caracter de separacao do caminho.
Em outros ambientes, somente a barra (/).
Exemplo 1. exemplo do basename()
$caminho = "/ home / httpd / html / index.php"; $arquivo = basename ($caminho); / / $arquivo = "index.php" $arquivo = basename ($caminho ,".php"); / / $arquivo = "index "
Nota:
O parametro sufixo foi adicionado no PHP 4.1.0.
Veja também: dirname()
Anterior
Principal
Próxima
Filesystem (Sistema de arquivos)
Acima
Manual do PHP
Anterior
Próxima
Adiciona o operador_da_esquerda ao operador_da_direita e retorna a soma em uma string.
O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal a ser usados no resultado.
Veja também bcsub().
Anterior
Principal
Próxima
BCMath Funções Matemáticas de Precisão Arbitrária
Acima
Manual do PHP
Anterior
Próxima
Compara o operador_da_esquerda com o operador_da_direita e retorna o resultado como um inteiro.
O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal que serão utilizados na comparação.
O valor retornado será 0 se os operadores são iguais.
Se o operador_da_esquerda for maior do que o operador_da_direita o valor a ser retornado será +1 e se o operador_da_esquerda é menor do que o operador_da_direita o valor retornado é -1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Divide o operador_da_esquerda pelo operador_da_direita e retorna o resultado.
O parametro opcional escala é usado para configurar o número de dígitos depois do ponto decimal que serão mostrados no resultado.
Veja também bcmul().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Obter o módulo do operador_da_esquerda usando modulo.
Veja também bcdiv().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Multipica o operador_da_esquerda pelo operador_da_direita e retorna o resultado.
O parametro opcional escala configura o número de dígitos depois do ponto decimal que serão mostrados no resultado.
Veja também bcdiv().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bcpow
Description
O parametro opcional escala configura o número de dígitos depois do ponto decimal que serão mostrados no resultado.
Veja também bcsqrt().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Este valor será utilizado caso o parametro escala não seja especificado em chamadas as bcmath subsequentes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bcsqrt
Descrição
O parametro opcional escala configura o número de digitos depois do ponto decimal que serão mostrados no resultado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Subtrair o operador_da_direita do operador_da_esquerda e retorna o resultado em uma string.
O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal que serão mostrados no resultado.
Veja também bcadd().
Anterior
Principal
Próxima
Acima
Funções de compactação com Bzip2
Manual do PHP
Anterior
Próxima
Retorna uma string ASCII uma representação hexadecimal de str.
A conversão é feita byte-wise com o high-nibble primeiro.
Veja também pack() e unpack().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o equivalente decimal do número binário representado pelo argumento binary_string.
bindec() converte um número binário em um integer.
O maior número que pode ser convertido é 31 bits de ums (1) ou 2147483647 em decimal.
Veja também a função decbin().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bind_textdomain_codeset
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Fecha o arquivo bzip2 referenciado pelo ponteiro bz.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
O ponteiro de arquivo deve ser válido, e deve apontar para um arquivo aberto com sucesso com bzopen().
Veja também bzopen().
Anterior
Principal
Próxima
Funções de compactação com Bzip2
Acima
Manual do PHP
Anterior
Próxima
bzcompress() comprime a string source e a retorna no formato de dados codificados com bzip2.
O valor padrão de blocksize é 4.
O parâmetro opcional workfactor controla como a fase de compressão irá se comportar quando ocorrer o pior caso: a entrada de dados muito repetitivos.
O seu valor pode ser de 0 até 250, com 0 sendo um caso especial, e 30 o valor padrão.
Independente do valor de workfactor, a saída gerada será a mesma.
Exemplo de bzcompress()
?php $str = "demonstracao de dados comprimidos"; $bzstr = bzcompress($str, 9); print($bzstr);?
Veja também bzdecompress().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bzdecompress() descomprime a string source string contendo dados no formato bzip2 e retorna o seu valor.
Se o parâmetro opcional small for TRUE, um algoritmo alternativo de descompressão, com a utilização de menos memória (a máxima quantidade de memória requerida é em torno de 2300K), será usado mas funciona com a metade da velocidade.
Veja a documentação do bzip2 para mais informações sobre essa característica.
Exemplo 1. bzdecompress()
?php $start_str = "Esse cara é legal ?"; $bzstr = bzcompress($start_str); print ("String comprimida:"); print ($bzstr); print ("\n br \n "); $str = bzdecompress($bzstr); print ("String descomprimida:"); print ($str); print ("\n br \n ");?
Veja também bzcompress().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o número do erro de qualquer erro do bzip2 retornado pelo ponteiro de arquivo bz.
Veja também bzerror() e bzerrstr().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o número e string do erro, em um array associativo, de qualquer erro retornado pelo ponteiro de arquivo bz.
Exemplo de bzerror()
Veja também bzerrno() e bzerrstr().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a string de erro de qualquer erro retornado pelo ponteiro de arquivo bz.
Veja também bzerrno() e bzerror().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Força a escrita de todos os dados do bzip2 que estão em buffer para o ponteiro de arquivo bz.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também bzread() e bzwrite().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
O parâmetro filename é o nome do arquivo a ser aberto. mode é similar ao da função fopen() (`r 'para leitura, `w' para escrita, etc.).
Se esta função falhar, retorna FALSE, do contrário retorna um ponteiro de arquivo aberto.
Exemplo de bzopen()
?php $bz = bzopen( "/ tmp / foo.bz2", "r"); $arquivo_descomprimido = bzread($bz, filesize(" / tmp / foo.bz2")); bzclose($bz); print ("O conteúdo de / tmp / foo.bz2 é:"); print ("\n br \n "); print ($arquivo_descomprimido);?
Veja também bzclose().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bzread() lê o número de bytes equivalente a length do ponteiro de arquivo bzip2 referenciado por bz.
A leitura pára quando a a quantidade de bytes referenciados por length (descomprimidos) foram lidos ou EOF foi alcançado, o que acontecer primeiro.
Se o parâmetro opcional length não for especificado, bzread() irá ler 1024 bytes (descomprimidos) de cada vez.
Exemplo de bzread()
Veja também bzwrite() e bzopen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
bzwrite() escreve o conteúdo da string data no arquivo referenciado pelo ponteiro de arquivo bzip2 bz.
Se o parâmetro opcional length for passado, a escrita irá parar depois deste número de bytes (descomprimidos) foram escritos ou se o final da string foi alcançado, o que acontecer primeiro.
Exemplo de bzwrite()
?php $str = "dados descomprimidos"; $bz = bzopen(" / tmp / foo.bz2", "w"); bzwrite($bz, $str, strlen($str)); bzclose($bz);?
Veja também bzread() e bzopen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Object methods may also be invoked statically using this function by passing array( $objectname, $methodname) to the function parameter.
?php class myclass {function say_hello() {print "Hello!\n";}} $classname = "myclass"; call_user_func(array($classname ,'say_hello'));?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Utilize a variante call_user_func_array() com a sintaxe array ($obj, "method_name").
Chama o método method_name do objeto de usuáro obj, usando os parâmetros em paramarr.
Veja também call_user_func_array(), call_user_func() e call_user_method().
Nota:
Esta função foi adicionada no código CVS antes da liberaçao do PHP 4.0.4pl1
Anterior
Principal
Próxima
Classes e Objetos
Acima
Manual do PHP
Anterior
Próxima
Descrição
A função call_user_method() é obsoleta desde o PHP 4.1.0, portanto utilize a variante call_user_func() com a sintaxe array ($obj, "method_name").
Chama o método method_name do objeto de usuário obj.
Um exemplo de seu uso segue abaixo, onde nós definimos uma classe, instanciamos um objeto e usamos call_user_method() para chamar indiretamente seu método print_info.
?php class Country {var $NAME; var $TLD; function Country($name, $tld) {$this - NAME = $name; $this - TLD = $tld;} function print_info($prestr="") {echo $prestr ."Country: ".$this - NAME ."\n"; echo $prestr ."Top Level Domain: ".$this - TLD ."\n";}} $cntry = new Country("Peru" ,"pe"); echo "* Chamando o método diretamente\n"; $cntry - print_info(); echo "\n* Chamando o método indiretamente\n"; call_user_method ("print_info", $cntry, "\t");?
Veja também call_user_func_array(), call_user_func() e call_user_method_array().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o próximo maior valor inteiro arredondando para cima do valor, se fracionário.
O valor retornado de ceil() é do tipo float porque a dimensão dos valores suportados por float é normalmente maior do que o do tipo int.
Exemplo 1. exemplos ceil()
Veja também floor() e round().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Muda o diretório atual do PHP para diretorio.
Retorna FALSE se não for possível mudar de diretório ou TRUE em sucesso.
Veja também: getcwd().
Anterior
Principal
Próxima
Diretórios
Acima
Manual do PHP
Anterior
Próxima
checkdate
Descrição
Retorna TRUE se a data dada é válida; caso contrário retorna FALSE.
Checa a validade da data formada pelos argumentos.
Uma data é considerada válida se:
o year está entre 1 e 32767
Day deve está dentro do número de dias permitidos para o dado month. year s são levados em consideração.
Veja também mktime() e strtotime().
Anterior
Principal
Próxima
Funções data e hora
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tenta modificar o grupo do arquivo para o grupo (nome ou número).
Somente o superusuário pode mudar o grupo de um arquivo arbitrário; outros usuários somente podem mudar o grupo de um arquivo para qualquer grupo qual o usuário pertença.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também chown() e chmod().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
chmod
Descrição
Tenta mudar as permissões do arquivo especificado por arquivo para o dado em modo.
Note que modo não é necessariamente um número octal, então strings (como "g+w") não funcionarão.
Para garantir que a operação seja bem sucedida é necessário prefixar modo com zero (0):
chmod ("/ arquivo / diretorio", 755); / / decimal; provavelmente incorreto chmod (" / arquivo / diretorio", "u+rwx,go+rx"); / / string; incorreto chmod (" / arquivo / diretorio", 0755); / / octal; representação correta do modo
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também chown() e chgrp().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função é um alias de rtrim().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tenta modificar o dono do arquivo para o usuario (nome ou número).
Somente o superusuário pode modificar o dono de um arquivo.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também chmod().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string de um único caractere contendo o caracter especificado pelo ascii.
Exemplo 1. chr() exemplo
Você pode encontrar uma tabela ASCII-table aqui: http: / /www.asciitable.com.
Esta função complementa ord().
Veja também sprintf() com uma string no formato de %c.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Muda o diretório raiz (root) do processo atual para o diretorio.
Retorna FALSE se não for possível mudar o diretório raiz, retorna TRUE caso contrário.
Nota:
Não é sensato usar esta função quando rodando em um ambiente de um webserver, porque não é possível reiniciar o diretório raiz (root) para / novamente no fim do pedido (request).
Esta função somente irá funcionar desta forma quando rodando num ambiente CGI.
Nota: esta função não é implementada na plataforma Windows
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Pode dividir uma string em pequenos pedaços que são úteis para e.g. converter base64_encode output para compatibilizar com semânticas RFC 2045.
Ela insere end (padrão para "\r\n") cada caracater chunklen (padrão para 76).
Ela retorna uma nova string deixando a string original intocada.
Exemplo 1. chunk_split() exemplo
Veja também explode(), split() wordwrap() e RFC 2045.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
class_exists
Descrição
Esta função retorna TRUE se a classe dada por class_name foi definida, caso contrário retorna FALSE.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Quando você chama stat(), lstat() ou qualquer uma das funções afetadas (listadas abaixo), o PHP mantém em cache as informações que essas funções retornam para melhoria de performance.
Entretanto, em certos casos você pode precisar limpar as informações cacheadas.
Por exemplo, se um mesmo arquivo é verificado várias vezes em um único script, e esse arquivo corre o risco de ser apagado ou modificado durante a operação do script, você precisa limpar os dados do cache.
Nesses casos, você pode utilizar a função clearstatcache() para limpar todas as informações que o PHP mantém sobre um arquivo.
Nota:
Esta função guarda infomações sobre arquivos específicos, de forma que você somente precisa chamar clearstatcache() se você estiver realizando várias operações sobre o mesmo arquivo e necessita que a informação sobre esse arquivo em particular não seja cacheada.
As funções afetadas são stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), e fileperms().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Fecha o stream do diretório indicado por dir_handle.
O stream deve ter sido previamente aberto por opendir().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
compact
Descrição
Cada parâmetro pode ser tanto uma string contendo o nome da variável, como um array com nomes de variáveis.
Sendo um array, ele pode conter outros arrays de nomes de variáveis; compact() trata isso recursivamente.
Para cada um dos parâmetros passados, compact() procura uma variável com o nome especificado na tabela de símbolos e a adiciona no array de saída de forma que o nome da variável será a chave e o seu conteúdo será o valor para esta chave.
Em resumo, ela faz o oposto de extract().
Retorna um array de saída com todas as variáveis adicionadas a ele.
Qualquer string com nome de uma variável que não exista será simplesmente ignorada.
Exemplo de compact()
$cidade = "Sao Paulo"; $estado = "SP"; $evento = "SIGGRAPH"; $localidade = array ("cidade", "estado"); $result = compact ("evento", "nada_aqui", $localidade);
Depois disso, $result será:
Array ([evento] = SIGGRAPH [cidade] = Sao Paulo [estado] = SP)
Veja também extract().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Classes e Objetos
Manual do PHP
Anterior
Próxima
connection_aborted
Descrição
Veja a descrição de Connection Handling no capitulo Features para uma explicação completa.
Anterior
Principal
Próxima
Funções de Miscelânea
Acima
Manual do PHP
Anterior
Próxima
connection_status
Descrição
Veja a descrição de Connection Handling no capitulo Features para uma explicação completa.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
connection_timeout
Descrição
Obsoleta
Veja a descrição de Connection Handling no capitulo Features para uma explicação completa.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função constant() irá retornar o valor de uma constante indicada pelo parâmetro name.
A função constant() é útil se você precisa pegar o valor de uma constante, mas não sabe o seu nome.
Ex: esta guardada em uma variável ou é retornada por uma função.
Exemplo constant()
?php define ("MAXSIZE", 100); echo MAXSIZE; echo constant("MAXSIZE"); / / mesma coisa que a linha anterior?
Veja também define(), defined() e a seção sobre Constantes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna a string dada convertida de um caracter cirílico para outro.
Os argumentos from e to são caracteres simples que representam o original e o caractere Cirílico de destino.
Os tipos suportados são:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Faz uma cópia de um arquivo.
Retorna TRUE se a copia é obtida com sucesso, caso contrário FALSE.
Exemplo 1. exemplo do copy()
if (!copy($arquivo, $arquivo .'.bak')) {print ("erro copiando arquivo $arquivo... br \n");}
Nota:
A partir do PHP 4.0.3, ambos origem e destino podem ser URLs se "fopen wrappers" estiver ativo.
Veja fopen() para mais detalhes.
Se dest é uma URL, a operação de cópia pode falhar se o wrapper não suportar a sobrescrita de arquivos existentes.
Atenção
Se o arquivo destino já existir, ele será sobrescrito.
See also move_uploaded_file(), rename(), e a seção do manual sobre manipulação de uploads de arquivos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o coseno hiperbólico de arg, definido por (exp(arg) + exp(-arg)) / 2.
Veja também cos(), acosh(), sin() e tan().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cos() retorna o coseno de arg.
O parametro arg deve estar em radianos.
Veja também acos(), sin() tan() e deg2rad().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
count_chars
Descrição
O parâmetro original Mode por definição 0.
0 - Uma matriz com um byte-value como chave e a freqüência de cada byte como valor.
1 - mesmo que o 0 mas apenas byte-values com freqüência maior do que 0 são listadas.
2 - mesmo que 0 mas apenas byte-values com freqüência igual a 0 são listadas.
3 - uma string contendo todos os byte-values usados.
4 - uma string contendo todos os byte-values que não foram usados.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o número de elementos de var, que normalmente é um array (uma vez que qualquer outra coisa terá apenas um elemento).
Se var não for um array, 1 será retornado (excessão: count (NULL) retorna 0).
Atenção
count() pode retornar 0 para uma variável que não existe, mas também pode retornar 0 para uma variável que tenha sido inicializada como um array vazio.
Use isset() para checar se a variável existe.
Por favor, veja a sessão Arrays do manual para uma explicação mais detalhada sobre como os arrays são implementados e utilizados no PHP.
Exemplo de count()
Nota:
A função sizeof() é um alias para count().
Veja também is_array(), isset() e strlen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_begin_text
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_open
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_save
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_set_font_directories
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_set_font_map_file
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_set_text_rendering
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cpdf_set_viewer_preferences
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
crack_getlastmessage
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
crc32
Descrição
Gera o polinômio cyclic redundancy checksum de 32-bit de comprimento do str.
É usado geralmente para validar a integridade de um dado sendo transferido.
Veja também md5()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
crypt() retornará uma string criptografada usando o algoritmo de encriptação Unix Standard DES -based ou ou algoritmos alternativos disponíveis no sistema.
Os argumentos são uma string para ser criptografada e uma string opcional para basear em qual encriptação está.
Veja a página de encriptação Unix para mais informação.
Se o argumento salt não é fornecido, um argumento aleatório será gerado pelo PHP.
Alguns SO suportam mais de um tipo de codificação.
De fato, algumas vezes a codificação Standard DES-based é substituído por MD5-based.
O tipo de codificação é definido pelo argumento salt.
Na instalação, o PHP determina as possíveis funções de codificação e aceitará salts para outros tipos.
Se nenhum salt é fornecido, o PHP auto-gera um salt padrão de 2 caracateres por definição, a menos que o tipo de codificação padrão do sistema seja MD5, nesse caso um salt MD5-compatible aleatório será gerado.
O PHP define uma constante com nome CRYPT_SALT_LENGTH que dirá se um salt de 2 caracteres aplica-se ao seu sistema ou se o salt mais comprido de 12 caracteres é aplicavél.
Se você está usando um salt fornecido, você está ciente que o salt é gerado uma vez.
Se você está chamando essa função repetidamente, isto pode afetar a aparência e a segurança.
O Standard DES-based crypt() O Standard DES-based crypt() retorna o salt como o primeiro two characters da saída.
Ele também usa apenas os oito primeiros caracteres da str, então strings longas que começam com os mesmos oito caracteres gerarão o mesmo resultado (quando o mesmo salt é usado).
Em sistemas onde a função crypt() suporta variados tipos de codificação, as seguintes funções são definidas para 0 ou 1 a depender se um dado tipo está disponível:
CRYPT_STD_DES - Codificação Standard DES-based com um salt de 2 caracteres
CRYPT_EXT_DES - Codificação Extended DES-based com um salt de 9 caracateres
CRYPT_MD5 - Codificação MD5 com um salt de 12 caracteres começando com $1$
CRYPT_BLOWFISH - Codificação Blowfish com um salt de 16 caracteres começando com $2$
Nota:
Não há função de decodificação, desde que crypt() utiliza uma algorimo de um só caminho.
Exemplo 1. crypt() exemplos
Veja também md5() e the Mcrypt extension.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dica:
Como toda saída é normalmente enviada direto para o browser, você pode usar as Funções de Controle de Output para capturar o resultado e guardá-lo em uma string (por exemplo).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Todo array tem um ponteiro interno para o elemento "atual", o qual é inicializado para apontar para o primeiro elemento inserido em um array.
A função current() simplesmente retorna o elemento do array para o qual esse ponteiro interno está apontando.
Não move o ponteiro de forma alguma.
Se o ponteiro interno estiver apontando para além do final da lista de elementos, current() retorna FALSE.
Atenção
Se o array contêm elementos vazios (0 ou "", uma string vazia) então esta função retorna FALSE para esses elementos.
Isso faz com que seja impossível determinar se você está realmente no final da lista de elementos de um array usando current().
Para percorrer devidamente um array que pode conter elementos vazios, use a função each().
Veja também end(), next(), prev() e reset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
cyrus_authenticate
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
date
Descrição
Retorna uma string de acordo com o formato da string usando o inteiro dado timestamp ou a a hora corrente local se nenhum timestamp é dado.
Nota:
A linha válida de um timestamp é tipicamente de Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estas são as datas que correspodem aos mínimos e máximos valores para um inteiro de 32-bit definido).
No windows esta linha é limitada de 01-01-1970 para 19-01-2038.
Para gerar um timestamp de uma string para representação de data, você deve estar capaz de usar strtotime().
Adicionalmente, alguns bancos de dados têm para converter suas datas em timestamps (tais como a função MySQL's UNIX_TIMESTAMP).
Os seguintes caracteres são reconhecidos na estrutura da string:
a - "am" ou "pm "
A - "AM" ou "PM "
B - Swatch Internet time
d - dia do mês, 2 digitos com zeros zeros à esquerda; i.e. "01 "até "31"
D - dia da semana, texto, 3 letras; e.g. "Fri "
F - mês, texto, longo; e.g. "January "
g - hora, Forma com 12-horas sem zeros à esquerda; i.e. "1 "até "12"
G - hora, Forma com 24-horas sem zeros à esquerda; i.e. "0 "até "23"
h - hora, Forma com 12-horas; i.e. "01 "até "12"
H - hora, Forma com 24-horas; i.e. "00 "até "23"
i - minutos; i.e. "00 "até "59"
I (capital i) - "1 "Se no horário de verão, senão "0".
j - Dia do mês sem zeros à esquerda; i.e. "1 "até "31"
l (minúscula 'L') - dia da semana, texo, longo; e.g. "Friday "
L - booleano se é um ano bissexto; i.e. "0 "ou "1"
m - mês; i.e. "01 "até "12"
M - mês, texto, 3 letras; e.g. "Jan "
n - mês sem zeros à esquerda; i.e. "1 "até "12"
O - Diferença entre o horário de Greenwich em horas; e.g. "+0200 "
r - RFC 822 formatted date; e.g. "Thu, 21 Dec 2000 16:01:07 +0200 "(adicionda no PHP 4.0.4)
s - segundos; i.e. "00 "até "59"
S - Sufixo ordinal para o dia do mês, 2 characteres; i.e. "st", "nd", "rd "or "th"
t - número de dias do dado mês; i.e. "28 "até "31"
T - Timezone setting desta máquina; e.g. "EST "or "MDT"
U - segundos desde a época Unix (January 1 1970 00:00:00 GMT)
w - dia da semana, numérico, i.e. "0" (domingo) até "6 "(Sábado)
W - ISO-8601 números de semanas do ano, semana começa na segunda-feira (adicionado no PHP 4.1.0)
Y - ano, 4 dígitos; e.g. "1999 "
y - ano, 2 dígitos; e.g. "99 "
z - dia do ano; i.e. "0 "até "365"
Z - timezone offset em segundos (i.e. "-43200 "to "43200").
O offset para as timezones oeste de UTC é sempre negativa, e para as leste de UTC é sempre positiva.
Exemplo 1. date() exemplo
echo date ("l dS of F Y h:i:s A"); echo "July 1, 2000 is on a ". date ("l", mktime(0,0,0,7,1,2000));
Você pode prevenir um caracter conhecido no formato de string de um existente por escape com uma barra invertida precedendo-o.
Se o caracter com a barra invertida já é uma sequência especial, você pode precisar também de escape para a barra invertida.
Exemplo 2.
Caracteres de escape em date()
echo date( "l \\t\h\e jS"); / / prints something like 'Saturday the 8th '
é possível usar date() e mktime() juntos para encontrar datas no futuro ou no passado.
Exemplo 3. date() e mktime() exemplo
$tomorrow = mktime (0,0,0,date("m") ,date("d")+1,date("Y")); $lastmonth = mktime (0,0,0,date("m")-1,date("d"), date("Y")); $nextyear = mktime (0,0,0,date("m"), date("d"), date("Y")+1);
Nota:
Esta pode ser mais confiável do que simplesmente adicionar ou subtrair o número de segundos em um dia ou mês para um timestamp devido ao horário de verão.
Alguns exemplos de date() Alguns exemplos de date() formatação.
Note que você poderia escapar qualquer outro caracter, qualquer um que correntemente tenha um significado especial produziria resultados indesejáveis, e outros caracteres poderiam assumir significados em futuras versões do PHP.
Quando usar escape, certifique o uso de aspas simples para evitar caracteres como \n próprio para novas linhas.
Exemplo 4. date() Formatação
/* Today is March 10th, 2001, 5:16:18 pm * / $today = date( "F j, Y, g:i a"); / / March 10, 2001, 5:16 pm $today = date("m.d.y"); / / 03.10.01 $today = date("j, n, Y"); / / 10, 3, 2001 $today = date("Ymd"); / / 20010310 $today = date('h-i-s, j-m-y, it is w Day z '); / / 05-16-17, 10-03-01, 1631 1618 6 Fripm01 $today = date('\i\t \i\s \t\h\e jS \d\a\y .'); / / It is the 10th day. $today = date("D M j G:i:s T Y"); / / Sat Mar 10 15:16:08 MST 2001 $today = date('H:m:s \m \i\s\ \m\o\n\t\h'); / / 17:03:17 m is month $today = date("H:i:s"); / / 17:16:17
Para formatar datas em outras línguas, você usaria as funções setlocale() e strftime().
Veja também getlastmod(), gmdate(), mktime(), strftime() e time().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Tabela 1.
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbase_add_record
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbase_delete_record
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbase_get_record
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbase_get_record_with_names
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbase_open
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Funções data e hora
Manual do PHP
Anterior
Próxima
dblist
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbmdelete
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbmfirstkey
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbminsert
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbmnextkey
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Quando o safe-mode está ativo, o PHP verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_add
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_aql
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_chdir
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_close
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_curr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_errcode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_errno
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_find
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_first
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_flush
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_freealllocks
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_freelock
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_freerlocks
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_getlock
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_getunique
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_info
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_last
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_next
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_open
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_prev
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rchperm
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rcreate
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rcrtexact
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rcrtlike
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_resolve
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_restorepos
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rkeys
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_ropen
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rquery
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rrename
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rsecindex
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_runlink
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_rzap
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_savepos
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_setindexbynumber
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_setindex
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_sql
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_tcl
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_tremove
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_undo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_undoprepare
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_unlockrel
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_unselect
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_update
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_xlockrel
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbplus_xunlockrel
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
dbx_close
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. dbx_close() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. dbx_compare() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. dbx_connect() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. dbx_error() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. dbx_escape_string() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2. lists each field 's name and type
Exemplo 3. outputs the content of data property into HTML table
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Exemplo 1. dbx_sort() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Exemplo 1. debug_backtrace() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
debugger_off
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string contendo a representação binária do parâmetro numero.
O maior número que pode ser convertido é 4294967295 em decimal, resultando em uma strings de 32 números 1.
Veja também a função bindec().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string contendo a representação hexadecimal do argumento numero.
O maior número que pode ser convertido é 2147483647 em decimal, resultando em "7fffffff".
Veja também hexdec().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string contendo a representação octal do parâmetro numero.
O maior número que pode ser convertido é 2147483647 em decimal, resultando em "17777777777".
Veja também octdec().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se a constante dada pelo parâmetro name já foi definida, em outro caso FALSE.
Exemplo 1.
Conferindo Constantes
?php if (defined("CONSTANT")) {/ /Note que deve estar entre aspas echo CONSTANT; / /}?
Veja também define(), constant(), get_defined_constants() e a seção sobre Constants.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
define
Descrição
Veja a seção sobre constantes para maiores detalhes.
O nome da constante é dado pelo parâmetro name; o valor é dado por value.
O terceiro parâmetro, que é opcional, case_insensitive também esta disponível.
Se é dado o valor TRUE, então a constante será definida como case-insensitive.
O padrão é case-sensitive; ex.
CONSTANTE e Constante representam valores diferentes.
Exemplo 1.
Definindo Constantes
?php define ("CONSTANTE", "Alô Mundo ."); echo CONSTANTE; / / mostra "Alô Mundo. "echo Constante; / / mostra "Constante" e dá um aviso. define ("GREETING", "Alô Você .",TRUE); echo GREETING; / / mostra "Alô você. "echo Greeting; / / mostra "Alô você."?
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Vejá também defined(), constant() e a seção sobre Constantes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função converte numero de graus ao equivalente em radianos.
Veja também rad2deg().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta é uma seção falsa do manual, criada para satisfazer as pessoas que estão procurando por unlink() ou unset() no lugar errado.
Veja também: unlink() para deletar arquivos, unset() para apagar váriaveis.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função é um apelido para exit().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Diretórios
Manual do PHP
Anterior
Próxima
Dada uma string contendo um caminho para um arquivo, esta função irá retornar o nome do diretório.
No Windows, tanto barra (/) quanto a barra invertida (\) são usadas como caracter separador no path.
Em outros ambientes é utilizado a barra (/).
Exemplo 1. exemplo do dirname()
$path = "/ etc / passwd"; $file = dirname ($path); / / $file =" / etc "
Nota:
A partir do PHP 4.0.3, dirname() foi modificada para ser conformante com o POSIX.
Essencialemente, isto significa que se não há barras no path, um ponto ('.') é retornado, indicando o diretório atual.
Antes, a string retornada era o path com todos os / componente Antes, a string retornada era o path com todos os / componente removidos.
Ou seja, você receberá uma barra ou ponto de dirname() em situações onde a funcionalidade anterior devolveria uma string vazia.
Veja também: basename(), pathinfo() e realpath().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dado uma string contendo um diretório, esta função retornará o numero de bytes disponíveis no sistema de arquivos ou partição de disco.
Exemplo 1. exemplo de disk_free_space()
$df = disk_free_space( "/ "); / / $df contém o número de bytes. / / disponível em" / "
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Este é um sinônimo obsoleto para a função disk_free_space().
Ultilize aquela função ao invez.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dado uma string contendo um diretório, esta função retornará o numero total de bytes do sistema de arquivos ou a partição de disco.
Exemplo 1. disk_total_space() example
$df = disk_total_space( "/ "); / / $df contém o numero total de / / bytes disponíveis em" / "
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
PrÃ³xima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Nota:
Tabela 1.
Nota:
Tabela 2.
Nota:
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - add_root [deprecated]
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_attribute
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_cdata_section
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_comment
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_element
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_element_ns
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_entity_reference
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_processing_instruction
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - create_text_node
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - doctype
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - document_element
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - dump_file
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocument - html_dump_mem
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocumentType - public_id
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomDocumentType - system_id
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomElement - get_attribute
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomElement - set_attribute
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - append_sibling
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - first_child
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - insert_before
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - last_child
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - owner_document
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - previous_sibling
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - remove_child
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - replace_child
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - replace_node
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomNode - set_namespace
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
domxml_new_doc
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
domxml_xmltree
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
domxml_xslt_stylesheet_doc
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
domxml_xslt_stylesheet_file
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
domxml_xslt_stylesheet
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomXsltStylesheet - process
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomXsltStylesheet - result_dump_file
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DomXsltStylesheet - result_dump_mem
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
doubleval - - Alias of floatval()
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o par chave / valor corrente de array e avança o seu cursor.
Esse par é retornado num array de quatro elementos, com as chaves 0, 1, key, e value.
Os elementos 0 e key contêm o nome da chave do elemento do array, e 1 e value contêm o valor.
Se o cursor interno do array estiver apontando para além do final do array, each() retorna FALSE.
Exemplos de each()
$bar agora contém os seguintes pares de chaves e valores:
$bar agora contém os seguintes pares de chaves e valores:
each() é tipicamente usada em conjunto com list() para percorrer um array; por exemplo, $_POST:
Exemplo 2.
Percorrendo $HTTP_POST_VARS usando each()
echo "Valores submetidos pelo método POST: br"; reset ($_POST); while (list ($chave, $valor) = each ($_POST)) {echo "$chave = $valor br ";}
Depois da execução de each(), o cursor interno do array vai apontar para o prócimo elemento do array, ou no último elemento se ele chegar ao final do array.
Você deve usar reset() se quiser percorrer o array novamente.
Veja também key(), list(), current(), reset(), next(), prev() e foreach.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. easter_date() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. easter_days() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ebcdic2ascii() é uma função específica do Apache, somente disponível em sistemas operacionais baseados no EBCDIC (OS / 390, BS2000).
Ela converte a string codificada em EBCDIC ebcdic_str em sua representação equivalente em ASCII (binary safe), retornando o resultado.
Veja também a função inversa ascii2ebcdic()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
echo
Descrição
echo() não é uma função atualmente (construtor da linguagem) então não é obrigatório usar parênteses.
De fato, se você quer passar mais do que um parâmetro para echo, você não deve fechar os parênteses dentro de parênteses.
Não é possível usar echo() num contexto de variable function, mas você pode usar print() no lugar dela.
Exemplo 1. echo() exemplos
echo() também tem uma sintaxe curta, onde você pode seguir imediatamente a tag de abertura com um sinal de igual.
Nota:
Está sintaxe curta apenas trabalha se a configuração short_open_tag está habilitada.
Veja também print(), printf(), e flush().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
end() avança o ponteiro interno de array até o seu último elemento, e retorna esse elemento.
Exemplo 1.
Exemplo simples de end()
?php $frutas = array( 'melancia' ,'banana' ,'morango'); print end($frutas); / / morango?
Veja também current(), each(), end(), next() e reset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. ereg() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. eregi() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ereg_replace() Example
Exemplo 2. ereg_replace() Example
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. error_log() log types
Atenção
Exemplo 1. error_log() examples
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. error_reporting() examples
Tabela 1. error_reporting() level constants and bit values
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
eval
Descrição
A função eval() executa a string dada no parâmetro code_str A função eval() executa a string dada no parâmetro code_str como código PHP.
Há alguns fatores para lembrar quando usar eval().
Lembre-se que a string passada deve ser código PHP valido, incluindo coisas como terminar os comandos com ponto-e-vírgula assim o compilador não morre uma linha após eval(), escapar as coisas propriamente em code_str.
Um comando return irá terminar a execução do script imediatamente No PHP 4, eval() retorna NULL a menos que return() seja chamado no código executado, caso no qual o valor passado para return() é retornado.
No PHP 3, eval() não retorna um valor.
Exemplo eval()
?php $string = 'taça'; $name = 'café'; $str = 'Esta é uma $string com o meu $name nela. br'; echo $str; eval ("\$str = \"$str\" ;"); echo $str;?
O exemplo acima irá mostrar
Esta é uma $string com o meu $name nela.
Esta é uma taça com o meu café nela.
Dica:
Como toda saída é normalmente enviada direto para o browser, você pode usar as Funções de Controle de Output para capturar o resultado e guardá-lo em uma string (por exemplo).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. exif_read_data() example
Nota:
Nota:
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. exif_thumbnail() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Esta não é uma função real, mas uma construção da linguagem.
A função exit() termina a execução do script.
Ela mostra o parâmetro status justamente antes de sair.
Se status é um integer, este valor será usado como estado se saída.
Estados de saída deve, estar no intervalo de 1 a 254, o estado de saída 255 é reservado pelo php e não deve ser usado.
Nota:
A versão atual do CVS NÃO mostra status se for um integer.
Nota:
A função die() é um apelido para a função exit().
Exemplo exit()
?php $filename = '/ caminho / para / arquivo'; $file = fopen ($filename, 'r') or exit("Não pude abrir o arquivo ($filename)");?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna e a potência de arg.
Veja também pow().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz de strings, cada uma como substring de string formada pela divisão dela a partir de fronteiras presentes nela separator.
Se limit está definido, a matriz retornada conterá o máximo de limit elementos com o último elemento contendo o resto da string.
Se separator está como uma string vazia (""), explode() retornará FALSE.
Se separator contém um valor que não está contido em string, então explode() retornará uma matriz contendo a string.
Nota:
O parâmetro limit foi adicionado no PHP 4.0.1
Exemplo 1. explode() exemplos
Nota:
Ainda que implode() pode por razões históricas aceitar seus parâmetros em uma das duas ordens, explode() não pode.
Você deve assegurar que o argumento separator vem antes do argumento string.
Veja também preg_split(), spliti(), split(), e implode().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
expm1
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função é usada para importar variáveis a partir de um array para a tabela de símbolos corrente.
Recebe o array associativo var_array e trata as suas chaves como os nomes das variáveis e os valores como valores das variáveis.
Para cada par chave / valor ele criará uma variável na tabela de símbolos corrente, seguindo os parâmetros extract_type e prefix.
Nota:
Desde a versão 4.0.5, essa função retorna o número de variáveis extraídas.
Nota:
EXTR_IF_EXISTS e EXTR_PREFIX_IF_EXISTS foram adicionadas na versão 4.2.0.
Nota:
EXTR_REFS foi adicionada na versão 4.3.0.
extract() checa se cada chave do array constitui um nome de variável válido e por colisões com as variáveis já existentes na tabela de símbolos.
O modo com que chaves inválidas ou númericas e colisões são tratadas é determinado pelo argumento extract_type.
Esse argumento pode receber os seguintes valores:
Se houver uma colisão, sobrescreve a variável existente.
Se houver uma colisão, não sobrescreve a variável existente.
Se houver uma colisão, adiciona um prefixo ao nome da variável definido pelo argumento prefix.
Adiciona um prefixo ao nome de todas as variáveis definido por prefix.
Desde o PHP 4.0.5 estão incluídos nomes numéricos.
Adiciona um prefixo definido por prefix apenas para variáveis como nomes inválidos ou numéricos.
Essa opção foi adicionada no PHP 4.0.5.
Só sobrescreve a variável se ela já existe na tabela de símbolos corrente, caso contrário, não faz nada.
Isso é útil quando se quer definir uma lista de variáveis válidas e então extrair só as que foram definidas em $_REQUEST, por exemplo.
Essa opção foi adicionada no PHP 4.2.0.
Só cria nomes de variáveis usando o prefixo se na tabela de símbolos já existe uma variável com o nome sem esse prefixo.
Essa opção foi adicionada no PHP 4.2.0.
Extrai variáveis como referências, ou seja, os valores das variáveis importadas ainda estarão referenciando os valores do parâmetro var_array.
Essa opção pode ser usada sozinha ou em conjunto com as outras usando o operador 'ou' em extract_type.
Essa opação foi adicionada no PHP 4.3.0.
Se extract_type não for especificado, é assumido o valor EXTR_OVERWRITE por padrão.
Note que prefix só é necessário se extract_type for EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, ou EXTR_PREFIX_INVALID, EXTR_PREFIX_INVALID ou EXTR_IF_EXISTS.
Se o nome com o prefixo não for um nome de variável válido, ela não será importada para a tabela de símbolos.
extract() retorna o número de variáveis importadas com sucesso para a tabela de símbolos.
Uma possível utilização de extract() e na importação de variáveis contidas num array associativo retornado pela função wddx_deserialize().
Exemplo de extract()
?php / * Suponha que $var_array é um array retornado pela função wddx_deserialize * / $tamanho = "grande"; $var_array = array ("cor" = "azul", "tamanho "= "medio", "forma" = "esfera"); extract ($var_array, EXTR_PREFIX_SAME, "wddx"); print "$cor, $tamanho, $forma, $wddx_tamanho\n";?
O exemplo acima produziria:
azul, grande, esfera, medio
O $tamanho não foi sobrescrito, porque nós especificamos EXTR_PREFIX_SAME, o que resultou na criação da variável $wddx_tamanho.
Se EXTR_SKIP fosse utilizado, então $wddx_tamanho não seria criada.
EXTR_OVERWRITE teria feito com que $tamanho tivesse o valor "medio", e EXTR_PREFIX_ALL resultaria em novas variáveis com os nomes $wddx_cor, $wddx_tamanho, e $wddx_forma.
Você deve usar um array associativo, um array indexado numericamente não produzirá resultados.
Veja também compact().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ezmlm_hash() calcula valor do hash necessário quando mantendo listas de email EZMLM num banco de dados MySQL.
Exemplo 1.
Calculando o hash e inscrevendo um usuário
Anterior
Principal
Próxima
Funções de E-Mail
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_close
Exemplo 1. fbsql_close() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_commit
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_connect() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_create_blob
Exemplo 1. fbsql_create_blob() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_create_clob
Exemplo 1. fbsql_create_clob() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_create_db() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_database_password
Exemplo 1. fbsql_create_clob() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_data_seek
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. fbsql_data_seek() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_db_query
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_db_status
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_drop_db
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_fetch_array() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_fetch_assoc() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_fetch_field
Description
Exemplo 1. fbsql_fetch_field() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_fetch_lengths
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_fetch_object() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_fetch_row
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_field_name() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_field_seek
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_field_type() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_get_autostart_info
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_list_dbs() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_list_fields() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_next_result() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_num_rows
Description
Exemplo 1. fbsql_num_rows() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_pconnect
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. fbsql_query() example
Exemplo 2. fbsql_query() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_read_blob
Exemplo 1. fbsql_read_blob() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_read_clob
Exemplo 1. fbsql_read_clob() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_rollback
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_select_db
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_set_lob_mode
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_set_transaction
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_start_db
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fbsql_stop_db
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. fbsql_tablename() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fclose
Descrição
O arquivo apontado por fp é fechado.
O ponteiro para o arquivo tem que ser válido e tem que apontar para um arquivo aberto por fopen() ou fsockopen().
Exemplo 1.
Exemplo fclose()
?php $fp = fopen( 'qualquerarquivo.txt', 'r'); fclose($fp);?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fdf_create
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fdf_open
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fdf_save
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fdf_set_status
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se o ponteiro estiver no fim do arquivo (eof) ou um erro ocorrer.
O ponteiro para o arquivo tem que ser válido e tem que apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função força a escrita de toda saída cacheada no buffer do arquivo apontado pelo recurso fp.
Retorna TRUE se obtiver sucesso e caso contrário FALSE.
O ponteiro de arquivo tem que ser válido e apontar para um arquivo que foi aberto com sucesso por fopen(), popen() ou fsockopen().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
fgetc
Descrição
Retorna FALSE no fim do arquivo (eof).
O ponteiro de arquivo tem que ser válido e apontar para um arquivo aberto com sucesso por fopen(), popen(), ou fsockopen().
Veja também fread(), fopen(), popen(), fsockopen() e fgets().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Similar à fgets() exceto que fgetcsv() interpreta a linha que lê por campos no formato CSV e retorna um vetor (array) contendo os campos lidos.
O terceiro parâmetro delimiter (opcional) tem como padrão a vígula.
A opção enclosure não pode ser null, e está limitada a um caracter.
Se enclosure tiver mais que um carcater, somente o primeiro será utilizado.
Nota:
O parâmetro enclosure foi acrescentado no PHP 4.3.0.
O parâmetro fp tem que ser um ponteiro de arquivo válido para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().
length tem que ser maior do que a maior linha a ser encontrada no arquivo CSV (incluindo caracteres de terminação de linha).
fgetcsv() retorna FALSE ao encontrar um erro, incluindo fim de arquivo (eof).
Nota:
Uma linha em branco em um arquivo CSV será retornada como um array contendo um único campo nulo (null), e não será tratado como um erro.
Exemplo 1.
Lê e imprime todo o conteúdo de um arquivo CSV
?php $row = 1; $fp = fopen ("test.csv" ,"r"); while ($data = fgetcsv ($fp, 1000, ",")) {$num = count ($data); print" p $num campos na linha $row: br "; $row++; for ($c=0; $c $num; $c++) {print $data[$c]." br ";}} fclose ($fp);?
Veja também explode(), file() e pack()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string com até length - 1 bytes lidos do arquivo apontado por fp.
A leitura acaba quando length - 1 bytes foram lidos, encontra-se um fim de linha (newline) (que é incluido no valor retornado) ou no fim de arquivo (eof) (o que acontecer primeiro).
Se nenhum length for informado, o default é 1Kb, ou 1024 bytes.
Se um erro ocorrer, retorna FALSE.
Equívocos comuns:
Pessoas acostumadas a semântica do fgets em 'C' devem notar a diferenca em como o fim do arquivo (EOF) é retornado.
O ponteiro para o arquivo deve ser válido e deve apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().
Um simples exemplo segue:
Exemplo 1.
Lendo um arquivo linha a linha
$fd = fopen ("/ tmp / arquivodeentrada.txt", "r"); while (!feof ($fd)) {$buffer = fgets($fd, 4096); echo $buffer;} fclose ($fd);
Nota:
O parâmetro length se tornou opcional a partir do PHP 4.2.0, e se omitido, tem default para 1024 bytes para o comprimento da linha.
A partir do PHP 4.3, omitindo length fará continuar a leitura a partir do stream até encontrar o fim da linha.
Se a maioria das linhas no arquivo forem todar maiores que 8 Kb, haverá mais eficiência de recursos se seus scripts informarem o comprimento máximo das linhas.
Nota:
Esta função é binary safe a partir do PHP 4.3.
Versões anteriores não são seguras para dados binários.
Nota:
Se você está tendo problemas com o PHP no reconhecimento do final de linha quando criando ou lendo arquivos num computador Macintosh, você pode habilitar a opção auto_detect_line_endings.
Veja também fread(), fopen(), popen(), fgetc(), fsockopen() e socket_set_timeout().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Idêntico a fgets(), exceto que fgetss tenta retirar qualquer tag HTML ou PHP do texto que ele lê.
Você pode utilizar o terceiro parâmetro opcional para especificar quais tags não devem ser retiradas.
Nota:
Se você está tendo problemas com o PHP no reconhecimento do final de linha quando criando ou lendo arquivos num computador Macintosh, você pode habilitar a opção auto_detect_line_endings.
Veja também fgets(), fopen(), fsockopen(), popen() e strip_tags().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a data e hora em que o arquivo foi acessado pela última vez, ou FALSE em caso de erro.
O tempo que é retornado é um timestamp UNIX.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Nota:
O atime do arquivo supostamente deve mudar quando os blocos de informação do arquivo forem lidos.
Isto pode ser caro em termos de performance quando uma aplicação freqüentemente acessa um número muito grande de arquivos ou diretórios.
Alguns filesystems Unix podem ser montados com updates dos atimes desabilitados para aumentar a performance destas aplicações; USENET news spools é um exemplo comum.
Nestes filesystems esta função é inútil.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessível pelo filesystem do servidor.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o tempo em que o arquivo foi modificado pela última vez, ou FALSE em caso de erro.
O tempo é retornado como um timestamp Unix.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Nota:
Na maior parte dos filesystems Unix, um arquivo é considerado modificado quando a informação do inode é modificada; isto é, quando as permissões, dono (owner), grupo (group), ou outra metadata do inode é modificada.
Veja também filemtime() (o que é o que você deseja usar quando criando rodapés com informações sobre última vez que o arquivo foi modificado em web pages) e fileatime().
Note também que em alguns textos Unix o ctime do arquivo é referido como sendo o tempo de criação do tempo do arquivo.
Isto é errado.
Não há tempo de criação de arquivos Unix na maior parte dos filesystems Unix.
Esta função não irá funcionar em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se o arquivo expecificado por nomedoarquivo existe; FALSE caso contrário.
Esta função não irá funcionar em arquivos remotos; o arquivo para ser examinado tem que ser accessivel pelo filesystem do servidor.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Utilizando compartilhamentos Windows:
No Windows, use / /computername / share / filename ou \\\\computername\share\filename para checar arquivos em compartilhamentos de rede.
Exemplo 1.
Testando se um arquivo existe
?php $filename = '/ caminho / para / qualquer.txt'; if (file_exists($filename)) {print "O arquivo $filename existe";} else {print "O arquivo $filename não existe";}?
Veja também is_readable(), is_writable(), is_file() e file().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Idêntico a readfile(), exceto que file_get_contents() retorna o arquivo em uma string.
Nota:
Esta função é compatível com dados binários
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Veja também: fgets(), file(), fread(), include() e readfile().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o group ID do arquivo, ou FALSE no caso de um erro.
Use posix_getgrgid() para resolver para o nome do grupo.
O resultado desta função é guardado em cache.
Veja clearstatcache() para mais detalhes.
Nota:
Esta função não irá funcionar em arquivos remotos; o arquivo a ser examinado tem que ser acessivel através do filesystem do servidor.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
file
Descrição
Idêntico a readfile(), exceto que file() retorna o arquivo em um array.
Em caso de falha, file() retorna FALSE.
Nota:
Cada linha do array resultante terá os caracteres de fim de linha, então você precisa utilizar trim() se não quiser esses caracteres presentes.
Se você está tendo problemas com o PHP no reconhecimento do final de linha quando criando ou lendo arquivos num computador Macintosh, você pode habilitar a opção auto_detect_line_endings.
Você pode usar o parâmetro opcional use_include_path como "1", se você deseja procurar o arquivo no include_path também.
Veja também file_get_contents(). $html = implode ('', file ('http: / /www.exemplo.com / '));?
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Veja também readfile(), fopen(), fsockopen(), and popen(), file_get_contents() e include().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o número do inode do arquivo, ou FALSE em caso de erro.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
filemtime
Descrição
Retorna a data / hora em que o arquivo foi modificado pela última vez, ou FALSE em caso de erro.
O tempo é retornado como um timestamp Unix.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Utilize date() no resultado desta função para obter uma versão imprimível da data (para a utilização em rodapés).
Veja também filectime() e touch().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o ID do usuário( user ID) do dono (owner) do arquivo, ou FALSE caso um erro.
O ID do usuário é retornado no formato numérico, use posix_getpwuid() para obter o username do usuário.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna as permissões do arquivo, ou FALSE em caso de erro.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
filepro
Description
Nota:
Anterior
Principal
Próxima
Acima
Filesystem (Sistema de arquivos)
Manual do PHP
Anterior
Próxima
filepro_retrieve
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
filepro_rowcount
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o tamanho do arquivo, ou FALSE em caso de erro.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
filetype
Retorna o tipo do arquivo( file type).
Retorna FALSE se um erro ocorrer.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Veja também: is_dir(), is_file(), is_link(), file_exists() e stat().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
floatval
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
O PHP suporta uma maneira portável de lock arquivos inteiros em uma advisory way (que significa que todos os programas acessando tem que usar o mesmo tipo de travamento ou não irá funcionar).
flock() opera em fp, que tem que ser um ponteiro de arquivo aberto com sucesso. operacao é um dos seguintes valores:
Para obter um lock compartilhado (leitura), utilize operation como LOCK_SH (ou use 1 se a versão do PHP for anterior a 4.0.1).
Para obter um lock exclusivo (gravação), utilize operacao como LOCK_EX (ou use 2 se a versão do PHP for anterior a 4.0.1).
Para retirar um lock (compartilhado ou exclusivo), uyilize operacao como LOCK_UN (ou use 3 se a versão do PHP for anterior a 4.0.1).
Se você não quer usar flock() para bloquear enquanto travando, adicione LOCK_NB (4 se a versão do PHP for anterior a 4.0.1) a operacao.
flock() permite a você fazer um simples modelo leitura / gravação (reader / writer) que pode ser usado em virtualmente todas as plataformas (incluindo a maior parte dos Unixes e até mesmo Windows).
O terceiro argumento opcional é usado como TRUE se a lock irá bloquear (EWOULDBLOCK errno condition).
flock() retorna TRUE em caso de sucesso e FALSE em caso de erro (por exemplo quando um lock não pode ser obtido).
Nota:
Uma vez que flock() requer um ponteiro de arquivo, você precisa utilizar um lock de arquivo especial para proteger i acessi a um arquivo ao qual você pretende truncar quando abrindo no modo de escrita (com um argumento "w "ou "w+" em fopen()).
Atenção
flock() não funcionará em NFS ou em qualquer outro sistema de arquivos em rede.
Verifique a documentação do seu sistema operacional para mais detalhes.
Na maior parte dos sistemas operacionais flock() é implementada no nível do processo.
Quando utilizando um servidor com uma API de multiprocessamento (como ISAPI), você não pode confiar em flock() para proteger os arquivos contra outros scripts PHP rodando em threads paralelas da mesma instância do servidor!
flock() não é suportado em sistemas de arquivos antiquados como a FAT e seus derivados, e sempre retornará FALSE sob esses ambientes (especialmente para usuários do Windows 98).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o próximo menor valor inteiro ao se arredondar para baixo o valor, se necessário.
O valor retornado de floor() é do tipo float porque o tipo float normalmente abrange mais números possíveis do que integer.
Exemplo 1. exemplos de floor()
Veja também ceil() e round().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fnmatch() checa se a string se encaixa com o pattern.
Isto é especialmente útil para nomes de arquivos, mas também pode ser utilizado em strings.
O usuário comum poderá utilizar curingas shell na sua forma mais simples ('?' e '* ') com fnmatch() em vez de ereg() ou preg_match() para pesquisas realizadas em código, numa forma mais inteligível para usuários não programadores.
Exemplo 1.
Verificando um nome de cor com um padrão shell
if( fnmatch("*gr[ae]y", $color)) {echo "alguma forma da palavra gray.. .";}
Veja também glob(), ereg(), preg_match() e a manpage UNIX de fnmatch(3) para nomes de flags (já que não estão documentadas aqui).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fopen() conecta um recurso nomeado, especificado em filename para um stream.
Se filename está na forma "protocolo: / /.. .", é assumido que seja uma URL e o PHP irá procurar por um manipulador de protocolo (também conhecido como wrapper) conforme o prefixo.
Se nenhum wrapper para o protocolo estiver registrado, o PHP irá emitir um alerta para ajudá-lo a rastrear problemas potenciais em seu script, presumindo que filename é um nome de arquivo comum.
Se o PHP decidir que filename se refere a um arquivo local, então ele tentará abrir o stream para aquele arquivo.
Esse arquivo precisa ser acessível pelo PHP, então você precisa certificar-se que as permissões de acesso que garantam esse acesso.
Se você está com safe_mode ativado ou open_basedir, essas restrições serão aplicadas.
Se o PHP decidir que filename se refere a um protocolo registrado, e que o protocolo está registrado como um URL de rede, o PHP irá verificar se allow_url_fopen Se o PHP decidir que filename se refere a um protocolo registrado, e que o protocolo está registrado como um URL de rede, o PHP irá verificar se allow_url_fopen está ativado.
Se ele estiver desligado, o PHP irá emitir um alerta e a chamada a fopen irá falhar.
Nota:
A lista de protocolos registrados pode ser encontrada em Apêndice I.
mode especifica a tipo de acesso que você requer na stream.
Ele pode ser um dos seguintes:
'r' - Abrir somente para leitura; coloca o ponteiro de arquivo no começo do arquivo.
'r+' - Abrir para leitura e gravação; colocar o ponteiro de arquivo no começo do arquivo.
'w' - Abrir somente para gravação; colocar o ponteiro de arquivo no começo do arquivo e truncar o arquivo para tamanho zero.
Se o arquivo não existir, tentar cria-lo.
'w+' - Abrir para leitura e escrita; colocar o ponteiro de arquivo no início do arquivo e truncar o arquivo para tamanho zero.
Se o arquivo não existir, tentar cria-lo.
'a' - Abrir o arquivo somente para escrita; colocar o ponteiro de arquivo no fim do arquivo.
Se o arquivo não existe, tentar cria-lo.
'a+' - Abrir o arquivo para leitura e gravação; colocar o ponteiro no fim do arquivo.
Se o arquivo não existe, tentar cria-lo.
Nota:
O mode O mode pode conter a letra 'b'.
Isto é útil somente em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows.
É inútil em Unix).
Se não necessário, será ignorado.
Você é encorajado a incluir o modo 'b' de forma a tornar seus scripts mais portáveis.
Você pode usar o terceiro pparâmetro opcional como "1", se você quiser procurar pelo arquivo no include_path também.
O quarto parâmetro zcontext (opcional) é utilizado especificamente para ajuste de parâmetros e callbacks.
Se a abertura falhar, a função retorna FALSE.
Exemplo 1. exemplo do fopen()
?php $fp = fopen ("/ home / rasmus / file.txt", "r"); $fp = fopen (" / home / rasmus / file.gif", "wb"); $fp = fopen ("http: / /www.example.com /", "r"); $fp = fopen ("ftp: / /user:password@example.com / ", "w");?
Se você está tendo problemas com a leitura e gravação para arquivos e você está usando a versão de modulo de servidor do PHP, lembre-se de que os arquivos e diretórios que você está usando precisam ser acessíveis ao processo do servidor HTTP.
Na plataforma Windows, tenha cuidado para usar uma segunda barra invertida (escape) nos caminhos de arquivos, ou usar a barra normal.
?php $fp = fopen ("c:\\data\\info.txt", "r");?
Apêndice I, fclose(), fgets(), fsockopen(), file(), file_exists(), is_readable(), socket_set_timeout() e popen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fpassthru
Descrição
Se um error ocorrer, a função fpassthru() retorna FALSE.
O ponteiro de arquivo tem que ser válido e apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().
Você pode precisar chamar rewind() para reiniciar o ponteiro do arquivo para o início do arquivo caso você já tenha escrito dados no arquivo.
O arquivo é fechado quando fpassthru() acaba de ler (deixando fp sem utilidade).
Se você somente quiser jogar o conteúdo de um arquivo para o buffer de saída, sem primeiro modificar ou procurar por um detalhe qualquer, você pode querer usar a função readfile(), que vai economizar uma chamada a função fopen().
Nota:
Quando utilizando fpassthru() em um arquivo binário em sistemas Windows, você precisa verificar se abriu o arquivo em modo binário, acrescentando um b no modo informado na chamada de fopen().
Você é encorajado a utilizar o modo b quando trabalhando com arquivos binários, mesmo que seu sistema não requira isso, de forma que seus scripts se tornem mais portáveis.
Veja também readfile(), fopen(), popen() e fsockopen()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Examples
Exemplo 1. sprintf(): zero-padded integers
Exemplo 2. sprintf(): formatting currency
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fputs() é uma função sinônima (alias) para fwrite(), e é identica em todas as maneiras.
Note que o parametro comprimento é opcional e se não for especificado a string inteira será escrita.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fread() lê até comprimento bytes.
A leitura é interrompida quando comprimento bytes foram lidos ou o fim do arquivo (eof) foi alcançado, o que ocorrer primeiro.
?php / / ler o conteúdo do arquivo para uma string $nomedoarquivo = "/ usr / local / algo.txt"; $fd = fopen ($nomedoarquivo, "r"); $conteudo = fread ($fd, filesize ($nomedoarquivo)); fclose ($fd);?
Nota:
Em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows) o arquivo tem que ser aberto com 'b 'incluído como parametro na função fopen().
?php $nomedoarquivo = "c:\\arquivos\\algumaimg.gif"; $fd = fopen ($nomedoarquivo, "rb"); $conteudo = fread ($fd, filesize ($nomedoarquivo)); fclose ($fd);?
Veja também fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), fscanf(), file() e fpassthru().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fribidi_log2vis
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
fscanf
Descrição
Se somente dois parametros forem passados para a função, os valores interpretados serão retornados como um array.
Os parametros opcionais tem que ser passados por referência.
Isto significa que qualquer tabulação \t na string formato poderá bater com um caracter de espaço simples no stream de entrada.
Exemplo do fscanf()
$fp = fopen ("users.txt" ,"r"); while ($userinfo = fscanf ($fp, "%s\t%s\t%s\n")) {list ($name, $profission, $countrycode) = $userinfo; / /... fazer algo com os valores} fclose($fp);
Exemplo 2. users.txt
Veja também fread(), fgets(), fgetss(), sscanf(), printf() e sprintf().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A nova posição é obtida, medindo em bytes do início do arquivo, é obtida ao adicionar offset a posição especificada por whence, cujo valor é definido como se segue:
SEEK_SET - Use a posição igual à offset bytes.
SEEK_CUR - Use a posição para a localização atual mais offset.
SEEK_END - Use a posição para o fim do arquivo (eof) mais offset. (Para mover para uma posição anterior ao fim de arquivo, você precisa passar um valor negativo em offset.)
Se whence não é especificado é presumido ser SEEK_SET.
Em caso de sucesso, retorna 0; caso contrário, retorna -1.
Note que fazer um seek depois do fim do arquivo (eof) é considerado um erro.
Não pode ser usado em ponteiros de arquivo retornados por fopen() se for usado o formato "http: / / "ou "ftp: / /".
Nota:
O argumento whence foi adicionado depois do PHP 4.0.0.
Veja também ftell() e rewind().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. fsockopen() Example
Exemplo 2.
Atenção
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Mantém estatísticas do arquivo aberto pelo ponteiro de arquivos fp.
Esta função é similar a função stat() exceto que ela opera em um ponteiro de arquivo aberto ao invéz de um nome de arquivo.
Retorna um array com as estatísticas do arquico com os seguintes elementos:
número de links
user id do dono (owner)
group id (owner)
tipo de device se inode device *
tamanho em bytes
tempo do último acesso
tempo da última modificação( modification)
tempo da última mudança( change)
tamanho do bloco para o filesystem I / O *
número de blocos alocados
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a posição do ponteiro de arquivo referenciado por fp; por exemplo o seu offset no file stream.
Se um error ocorrer, retorna FALSE.
O ponteiro de arquivo tem que ser válidoe apontar para um arquivo aberto com sucesso por fopen() ou popen().
Veja também fopen(), popen(), fseek() e rewind().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
ftp_chmod
Manual do PHP
Anterior
Próxima
ftp_close
Description
Anterior
Principal
Próxima
ftp_chmod
Acima
Manual do PHP
Anterior
Próxima
ftp_connect
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, handle.
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_fput() uploads the data from the file pointer handle ftp_fput() uploads the data from the file pointer handle until the end of the file is reached.
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_get_option
Nota:
Tabela 1.
Exemplo 1. ftp_get_option() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_mkdir
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_nb_continue
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_nb_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, handle.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_nb_fput() uploads the data from the file pointer handle until it reaches the end of the file.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. ftp_nb_get() example
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_nb_put
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. ftp_nb_put() example
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. ftp_put() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_set_option
Nota:
Tabela 1.
Exemplo 1. ftp_set_option() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ftp_ssl_connect
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Pega o ponteiro de arquivo, fp, e corta o arquivo no comprimento especificado.
Esta função retorna TRUE em caso de sucesso e FALSE em caso de falha.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
fwrite() grava os conteúdos de string para o stream de arquivo apontado por fp.
Se o argumento comprimento é dado, a gravação irá parar depois de que comprimento bytes foram escritos ou o fim da string é alcançada, o que ocorrer primeiro.
fwrite() retorna o número de bytes gravados, ou FALSE em caso de erro.
Note que se o argumento comprimento é dado, então a opção de configuração magic_quotes_runtime será ignorada e nenhuma barra será retirada do string.
Nota:
Em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows) o arquivo tem que ser aberto com 'b 'incluído no parametro mode do fopen().
Exemplo 1.
Exemplo fwrite
?php $filename = 'teste.txt'; $somecontent = "Acrescentando isto no arquivo\n"; / / Tendo certeza que o arquivo existe e que há permissão de escrita primeiro. if (is_writable($filename)) {/ / Em nosso exemplo, nós estamos abrindo $filename em modo de append (acréscimo). / / O ponteiro do arquivo estará no final dele desde / / que será aqui que $somecontent será escrito com fwrite(). if (!$fp = fopen($filename, 'a')) {print "Erro abrindo arquivo ($filename)"; exit;} / / Escrevendo $somecontent para o arquivo aberto. if (!fwrite($fp, $somecontent)) {print "Erro escrevendo no arquivo ($filename)"; exit;} print "Sucesso: escrito ($somecontent) no arquivo ($filename)"; fclose($fp);} else {print "The file $filename is not writable";}?
Veja também fread(), fopen(), fsockopen(), popen() e fputs().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
getallheaders() é um sinônimo para apache_request_headers().
Ela retorna um array associativo de todos os headers HTTP da requisição atual.
Veja a documentação de apache_request_headers() para mais detalhes do funcionamento dessa função.
Nota:
No PHP 4.3.0, getallheaders() se tornou um apelido de apache_request_headers().
Essencialmente, ela foi renomeada.
Isto porque a função somente funciona quando o PHP é compilado com um módulo do Apache.
Veja também apache_request_headers().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
get_browser
Descrição
Por padrão, o valor de $HTTP_USER_AGENT é usado; em qualquer caso você pode alterar isto (ex., procurar informação de outro browser) passando o parâmetro opcional user_agent para a função get_browser().
A informação é retornada como um objeto, que contém vários elementos com dados representando, por exemplo, os números de versão maior e menor, a string de ID, valores TRUE / false para coisas como frames, JavaScript, e cookies; e assim em diante.
O formato do arquivo é auto-explicatório.
O exemplo a seguir irá mostrar uma possível lista de toda a informação disponível sobre o browser do usuário.
Exemplo 1.
Exemplo get_browser()
?php function list_array ($array) {while (list ($key, $value) = each ($array)) {$str .= "b $key: / b $value br / \n";} return $str;} echo "$HTTP_USER_AGENT hr / \n"; $browser = get_browser(); echo list_array ((array) $browser);?
A saída do script acima deve ser algo como isto:
Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr / b browser_name_pattern: / b Mozilla / 4\.5.* br / b parent: / b Netscape 4.0 br / b platform: / b Unknown br / b majorver: / b 4 br / b minorver: / b 5 br / b browser: / b Netscape br / b version: / b 4 br / b frames: / b 1 br / b tables: / b 1 br / b cookies: / b 1 br / b backgroundsounds: / b br / b vbscript: / b br / b javascript: / b 1 br / b javaapplets: / b 1 br / b activexcontrols: / b br / b beta: / b br / b crawler: / b br / b authenticodeupdate: / b br / b msn: / b br /
In order for this to work, your browscap configuration file setting must point to the correct location of the browscap.ini file.
For more information (including locations from which you may obtain a browscap.ini file), check the PHP FAQ at http: / /www.php.net / FAQ.php.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna o nome da classe da qual o objeto obj é instância.
Retorna FALSE se obj não é um objeto.
Uma classe definida em uma extensão do PHP é retornada em sua notação original.
Veja também get_parent_class(), gettype() e is_subclass_of().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna uma matriz com nomes dos métodos definidos para a classe especificada por class_name.
Nota:
A partir do PHP 4.0.6, você pode especificar o próprio objeto em vez no nome da classe em class_name.
Por exemplo:
$class_methods = get_class_methods( $my_class); / / veja um exemplo completo abaixo
Exemplo get_class_methods()
Produzirá:
Veja também get_class_vars() e get_object_vars().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retornará uma matriz associativa com as propriedades padrão da classe.
Os elementos resultantes da matriz estão na forma nome_variavel = valor.
Nota:
Variáveis de classe não iniciadas não serão exibidos por get_class_vars().
Exemplo get_class_vars()
?php class myclass {var $var1; / / esta não tem valor default... var $var2 = "xyz"; var $var3 = 100; / / construtor function myclass() {return(TRUE);}} $my_class = new myclass(); $class_vars = get_class_vars(get_class($my_class)); foreach ($class_vars as $name = $value) {echo "$name: $value\n";}?
Produzirá:
var2: xyz var3:
Veja também get_class_methods() e get_object_vars()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
get_current_user
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o diretório atual.
Veja também: chdir().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz contendo a data do timestamp, ou a hora corrente local se se nenhum timestamp é dado, como a seguintes elementos da matriz:
"seconds" - segundos
"minutes" - minutos
"hours" - horas
"mday" - dia do ano
"wday" - dia da semana, numérico: de 0 como Domingo até 6 como Sábado
"mon" - mês, numérico
"year" - ano, numérico
"yday" - dia do ano, numérico; i.e. "299 "
"weekday" - dia da semana, texo, completo; i.e. "Friday "
"month" - mês, texto, completo; i.e. "January "
Exemplo 1. getdate() exemplo
Anterior
Principal
Próxima
Acima
Anterior
Próxima
get_declared_classes
Descrição
Esta função retorna uma matriz com os nomes das classes declaradas no script em execução.
Nota:
A partir do PHP 4.0.1pl2, três classes extras são retornadas no início da matriz: stdClass (definida em Zend / zend.c), OverloadedTestClass (definida em ext / standard / basic_functions.c) e Directory (definida em ext / standard / dir.c).
Isto significa que você não será capaz de distinguir suas próprias classes usando estes nomes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
get_html_translation_table() retornará a tabela de tradução que é usada internamente por htmlspecialchars() e htmlentities().
Há duas novas definidas (HTML_ENTITIES, HTML_SPECIALCHARS) que permite especificar a tabela que você quer.
E como nas funções htmlspecialchars() e htmlentities() você pode opcionalmente especificar a quote_style que você está trabalhando.
O padrão é modo ENT_COMPAT.
Veja a descrição desses modos em htmlspecialchars().
Exemplo 1.
Exemplo de tabela de tradução
Legal é usar array_flip() para mudar a direção da tradução.
Veja também htmlspecialchars(), htmlentities(), strtr(), e array_flip().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. getimagesize (file)
Exemplo 2. getimagesize (URL)
Exemplo 3. getimagesize() and MIME types
Exemplo 4. getimagesize() returning IPTC
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. get_included_files() Example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. getlastmod() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
getmxrr
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
getmyinode
Description
Nota: esta função não é implementada na plataforma Windows
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Anterior
Próxima
get_object_vars
Descrição
Esta função retorna uma matriz associativa com as propriedades definidas do objeto informado em obj.
Se variáveis declaradas na classe de qual obj é uma instância e que não tenham valores assimilados, esses não serão retornados na matriz.
Exemplo 1.
Uso de get_object_vars()
Array ([x] = 1.233 [y] = 3.445) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)
Veja também get_class_methods() e get_class_vars()!
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Se obj é um objeto, retorna o nome da classe pai da classe da qual o obj é uma instância.
Se obj é uma string, retorna o nome da classe pai da classe com aquele nome.
Esta funcionalidade foi adicionada no PHP 4.0.5.
Veja também get_class() e is_subclass_of()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o valor máximo que pode ser gerado em uma chamada a função rand().
Veja também rand(), srand() e mt_getrandmax().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
getrusage
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. gettext() -check
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gettimeofday
Descrição
Esta retorna uma matriz contendo o dado retornado da comunicação com o sistema.
"sec" - segundos
"usec" - microsegundos
"minuteswest" - minutos Leste de Greenwich
"dsttime" - tipo de correção dst
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gettype
Description
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
glob
Descrição
A função glob() procura por todos os caminhos de arquivos que batem com o padrão pattern de acordo com as regras do sistema operacional.
Nenhuma expansão ou substituição de variável é realizada.
Retorna um array contendo os arquivos / diretórios localizados ou FALSE em caso de erro.
Exemplo 1.
Maneira conveniente de como glob() pode substituir opendir() e similares.
foreach (glob("*.txt") as $filename) {echo "Tamanho de $filename ". filesize($filename). "\n";}
Resultado possível do exemplo acima:
Veja também opendir(), readdir(), closedir(), fnmatch() e a manpage UNIX de glob(3) para os nomes das flags (uma vez que elas não estão documentadas aqui).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Idêntico a função date() exceto que o tempo está em Greenwich Mean Time (GMT).
Por exemplo, quando execulta ma Finlândia (GMT +0200), a primeira linha abaixo imprime "Jan 01 1998 00:00:00", enquando a segunda imprime "Dec 31 1997 22:00:00 ".
Exemplo 1. gmdate() exemplo
veja também date(), mktime(), gmmktime() e strftime().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Idêntico ao mktime() exceto que os parâmetros passados representam uma data GMT.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_add
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_div_q
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_gcd
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_invert
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_mod
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_pow
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_prob_prime
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gmp_random
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Mesmo comportamento que strftime() exceto que o tempo retornado é Greenwich Mean Time (GMT).
Por exemplo, quando roda no Padrão de tempo Oriental (GMT -0500), a primeira linha abaixo imprime "Dec 31 1998 20:00:00", enquanto a segunda linha imprime "Jan 01 1999 01:00:00 ".
Exemplo 1. gmstrftime() exemplo
Veja também strftime().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
GregorianToJD
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gzclose
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Funções de Compressão Zlib
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
gzopen
Description
Exemplo 1. gzopen() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
header
Description
Nota:
Nota:
Nota:
Nota:
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
É similar a hebrev() a diferença é que ela converte newlines (\n) para "br \n".
O parâmetro opcional max_chars_per_line indica o número máximo de caracteres por linha que será exibido.
A função evita quebrar palavras.
Veja também hebrev()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
O parâmetro opcional max_chars_per_line indica o número máximo de caracteres por linha que será exibido.
A função tenta evitar palavras quebradas.
Veja também hebrevc()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o decimal equivalente do número hexadecimal representado pelo argumento hex_string. hexdec() Retorna o decimal equivalente do número hexadecimal representado pelo argumento hex_string. hexdec() converte uma string hexadecimal para um número decimal.
O maior número que pode ser convertido é 7fffffff (ou 2147483647 em decimal).
hexdec() substituirá qualquer caracter não hexadecimal que encontrar por 0.
Desta forma, todos os zeros a esqueda são ignorados, mas zeros a direita serão avaliados.
Exemplo 1. exemplos hexdec()
var_dump( hexdec("See")); var_dump(hexdec("ee")); / / ambos exibem "int(238) "var_dump(hexdec("that")); var_dump(hexdec("a0")); / / ambos exibem int(160)
Veja também dechex().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função highlight_file() mostra uma versão do código contido em filename com a sintaxe destacada usando as cores definidas pelo destacador de sintaxe do PHP.
Se o segundo parâmetro return for TRUE então highlight_file() irá retornar o código como uma string ao invés de mostrá-lo.
Se o segundo parâmetro não for TRUE então highlight_file() irá retornar TRUE se funcionar, FALSE em caso de falha.
Nota:
O parâmetro return tornou-se disponível no PHP 4.2.0.
Antes disso é usado como o padrão, que é FALSE.
Nota:
Deve se tomar cuidado quando usar as funções show_source() e highlight_file() para ter certeza que você não irá inadvertidamente revelar informações sensíveis como senhas ou outros tipos de informação que possam criar um risco de segurança em potencial.
Nota:
Desde o PHP 4.2.1 esta função também é afetada por safe_mode e open_basedir.
Exemplo 1.
Criando uma URL para destaque da sintaxe
Para configurar uma url que possa fazer o destaque da sintaxe de qualquer script que você passar para ela, nós iremos fazer uso da diretiva "ForceType" no Apache para gerar um bom modelo de URL, e usar a função highlight_file() para mostrar o código com uma boa aparência.
No seu httpd.conf você pode adicionar o seguinte:
E então faça um arquivo chamado "source" e coloque-o no seu diretório raiz do servidor web.
HTML HEAD TITLE Mostrar Fonte / TITLE / HEAD BODY BGCOLOR=" white "?php $script = getenv ("PATH_TRANSLATED"); if(!$script) {echo" BR B ERRO:
Necessário o nome do script / B BR ";} else {if (ereg("(\.php_BAR_\.inc)$",$script)) {echo" H1 Source of: $PATH_INFO / H1 \n HR \n"; highlight_file($script);} else {echo "H1 ERRO:
Somente PHP ou script de inclusão( .inc) são permitidos / H1 ";}} echo" HR Processado: ".date("Y / M/d H:i:s",time());? / BODY / HTML
Então você pode usar uma URL como a abaixo para mostrar uma versão colorida do script localizado em "/ caminho / para / script.php" no seu site web.
http: / /your.server.com / source / caminnho / para / script.php
Veja também highlight_string(), show_source().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função highlight_string() mostra o destaque da sintaxe para o parâmetro str usando as cores definidas para o destacador de sintaxe do PHP.
Se o segundo parâmetro return for TRUE então a função highlight_string() irá retornar o código com a sintaxe destacada ao invés de mostrá-lo.
Se o segundo parâmetro não for TRUE então highlight_string() irá retornar TRUE se funcionar, FALSE se ocorrer falha.
Nota:
O parâmetro return tornou-se disponível no PHP 4.2.0.
Antes disso é usado como o padrão, que é FALSE
Veja também highlight_file(), e show_source().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
htmlentities
Descrição
Como htmlspecialchars(), ele leva um segundo argumento opcional que indica o que seria feito com aspas simples e dupla.
ENT_QUOTES será convertido ambas aspas simples e dupla, e ENT_NOQUOTES deixará ambas desconvertidas.
No presente momento, o conjunto de caracteres ISO-8859-1 é usado como padrão.
Suporte para o segundo argumento opcional foi adicionado no PHP 3.0.17 e PHP 4.0.3.
Como htmlspecialchars() ,ele leva um terceiro argumento opcional que define o conjunto de caracteres usados na conversão.
Suporte para esse argumento foi adicionado no PHP 4.1.0.
Não há o oposto desta função.
Entretanto, você pode criar uma você próprio.
Aqui está um exemplo de como fazer isso.
Oposto de htmlentities()
Veja também htmlspecialchars() e nl2br().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
html_entity_decode() é o oposto da função htmlentities() no que converte todas as entidades HTML para os seus caracteres de string.
O segundo parâmetro, que é opcional, quote_style permite você definir o que será feito com 'apostrofos' e "aspas ".
Ele recebe uma constante entre três, sendo o padrão ENT_COMPAT:
Tabela 1.
Constantes disponíveis para quote_style
Nome da Constante
Descrição
Irá converter aspas e deixar os apostrofos.
Irá converter ambos.
Irá deixar ambos sem converter.
O conjunto de caracteres ISO-8859-1 é usado como padrão para o terceiro parâmetro, que é opcional, charset.
Este defini o conjunto de caracteres usado na conversão.
Exemplo 1.
Decodificando entidades html
?php $orig = "I'll \"walk\" the b dog / b now"; $a = htmlentities($orig); $b = html_entity_decode($a); echo $a; / / I'll quot;walk quot; the lt;b gt;dog lt; / b gt; now echo $b; / / I'll "walk "the b dog / b now / / Para versões anteriores ao PHP 4.3.0 você deve fazer isto: function unhtmlentities ($string) {$trans_tbl = get_html_translation_table (HTML_ENTITIES); $trans_tbl = array_flip ($trans_tbl); return strtr ($string, $trans_tbl);} $c = unhtmlentities($a); echo $c; / / I'll "walk" the b dog / b now?
Veja também htmlentities(), htmlspecialchars(), get_html_translation_table(), htmlspecialchars() e urldecode().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Certos caracteres tem significado especial em HTML, e seriam representados pela realidade HTML se eles estão preservanado seus significados.
Esta função retorna uma string com algumas destas conversões feitas; As transformações feitas são aquelas mais úteis para programação web.
Se você precisa que sejam transformados todos os caracteres da realidade HTML, use htmlentities() no lugar dela.
Esta função é útil na prevenção de textos fornecidos pelo usuário contendo marcação HTML, tal como um quadro de mensgens ou guest book.
O segundo argumento opcional, quote_style, conta à função o que fazer com os caracteres aspas simples e dupla.
O modo padrão, ENT_COMPAT, é o modo mais compatível com a atualidade, apenas transforma a aspas-dupla e deixa a aspas-simples como está.
Se ENT_QUOTES está definida, ambas transformadas e se ENT_NOQUOTES está definida nenhuma das duas são modificadas.
As traduções executadas são:
'' (ampersand) torna-se 'amp;'
'"' (aspas dupla) torna-se 'quot;' quando ENT_NOQUOTES não está definida.
'' '(aspas simples) torna-se' #039; 'apenas quando ENT_QUOTES está definida.
'' (menor que) torna-se 'lt;'
'' (maior que) torna-se 'gt;'
Exemplo 1. htmlspecialchars() exemplo
Note que esta função não converte nada além do que foi listado acima.
Para completa realidade de conversões, veja htmlentities().
Suporte para o segundo argumento opcional foi adicionado no PHP 3.0.17 e PHP 4.0.3.
O terceiro argumento define o conjunto de caracteres usados na conversão.
O conjunto de caracteres padrão é ISO-8859-1.
Suporte para o terceiro argumento foi adicionado no PHP 4.1.0.
Veja também htmlentities() e nl2br().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api_attribute - value
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - checkin
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - checkout
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - dstanchors
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - dstofsrcanchors
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - insertanchor
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - insertcollection
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - insertdocument
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - objectbyanchor
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - setcommitedversion
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_api - srcanchors
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Array2Objrec
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Children
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_ChildrenObj
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Document_Attributes
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Document_BodyTag
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Document_Content
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Document_SetContent
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Document_Size
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_EditText
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetAndLock
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetChildColl
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetChildCollObj
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetParents
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetRemoteChildren
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetRemote
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_GetText
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Identify
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_insertanchors
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_InsertDocument
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_InsertObject
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. modifying an attribute
Exemplo 2. adding a completely new attribute
Nota:
Exemplo 3. modifying Title attribute
Exemplo 4. modifying Title attribute
Exemplo 5. removing attribute
Nota:
Nota:
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Objrec2Array
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_Output_Document
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hw_PipeDocument
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
hypot
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ibase_connect
Description
Exemplo 1. ibase_connect() example
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ibase_execute
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ibase_field_info
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ibase_num_fields
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ibase_query
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. iconv_get_encoding() example:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. iconv() example:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
iconv_set_encoding
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. iconv_set_encoding() example:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_blobinfile_mode
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_byteasvarchar
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_close
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_connect
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_create_blob
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_htmltbl_result
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_prepare
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifx_textasvarchar
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ifxus_create_slob
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função estabelece se quando o usuário desconectar deve acontecer o fim do script.
Irá retornar o que foi estabelecido anteriormente e pode ser chamado sem argumentos para retornar o que esta estabelecido e não muda-lo.
Veja a seção Connection Handling no capitulo Features para uma completa descrição do manuseio de conexões no PHP.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagecolorclosesthwb
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagecreatefromgd2
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagecreatefromgd2part
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagecreatefromgd
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Nota:
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Nota:
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagedashedline
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagefontwidth
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imageinterlace
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagepsbbox
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imagepstext
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imagesetstyle() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imagettftext() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imagetypes
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. image_type_to_mime_type (file)
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_append
Description
Exemplo 1. imap_append() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_check
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_createmailbox() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_delete
Description
Nota:
Exemplo 1. imap_delete() Beispiel
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_fetch_overview() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Tabela 2.
Tabela 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_getmailboxes
Description
Exemplo 1. imap_getmailboxes() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_get_quota() example
Exemplo 2. imap_get_quota() 4.3 or greater example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_get_quotaroot() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_headerinfo
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_list
Description
Exemplo 1. imap_list() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_mailboxmsginfo
Description
Tabela 1.
Exemplo 1. imap_mailboxmsginfo() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_mail_compose
Description
Exemplo 1. imap_mail_compose() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_mail_copy
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_mail_move
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_mime_header_decode() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_open
Description
Exemplo 1. imap_open() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_ping
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_rfc822_parse_adrlist() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_rfc822_write_address() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_setflag_full() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_set_quota
Description
Exemplo 1. imap_set_quota() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. imap_status() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_subscribe
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_unsubscribe
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_utf7_decode
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
imap_utf7_encode
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string contendo os elementos da matriz na mesma ordem com uma ligação entre cada elemento.
Exemplo 1. implode() exemplo
Para consistência com explode(), entretando, ela pode ser menos confusa por usar a ordem documentada dos argumentos.
Veja também explode(), e split().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
import_request_variables
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
in_array
Descrição
Procura em haystack pelo valor needle e retorna TRUE se este valor for encontrado no array, e FALSE em caso contrário.
Se o terceiro parâmetro strict for TRUE então in_array() também irá checar os tipos de needle em haystack.
Nota:
Exemplo 1.
Exemplo de in_array()
$os = array ("Mac", "NT", "Irix", "Linux"); if (in_array ("Irix", $os)) {print "Tem Irix";} if (in_array ("mac", $os)) {print "Tem mac";}
Então, a saída seria:
Tem Irix
Exemplo 2. in_array() com checagem de tipos
?php $a = array( '1.10', 12.4, 1.13); if (in_array('12.4', $a, TRUE)) echo "'12.4 'encontrado com checagem de tipo\n"; if (in_array(1.13, $a, TRUE)) echo "1.13 encontrado com checagem de tipo\n";?
A saída seria:
1.13 encontrado com checagem de tipo
Exemplo de in_array() passando um array para needle
A saída seria:
Veja também array_search().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
include()
A instrução include() inclui e avalia o arquivo informado.
A documentação a seguir se aplica também a require().
Esses dois construtores são idênticos a exceção de como eles manipulam erros. include() produz um Warning enquanto require() produzirá um Fatal Error.
Em outras palavras, utilize require() se você deseja que um arquivo faltando interrompa o processamento da página. include() não se comporta da mesma maneira, permitindo que o script continue nessas situações.
Em todo caso, vale a pena confirmar a configuração da diretiva include_path.
Quando um arquivo é incluído, seu código entra no escopo de variável Quando um arquivo é incluído, seu código entra no escopo de variável da linha onde a inclusão ocorre.
Qualquer variável disponível da linha onde a chamada da inclusão ocorre estará disponível para o arquivo incluído, daquele ponto em diante.
Exemplo 12-3.
Exemplos de include() s simples
variaveis.php ?php $cor = 'verde'; $fruta = 'maçã';? teste.php ?php echo "Uma $fruta $cor"; / / Uma include 'vars.php'; echo "Uma $fruta $cor"; / / Uma maçã verde?
Se o include ocorre dentro de uma função do arquivo principal, então todo o código incluído será executado como se ele tivesse sido definido dentro daquela função.
Da mesma forma, ele seguirá o escopo de variáveis da função.
Exemplo 12-4.
Incluindo dentro de funções
?php function foo() {global $cor; include 'variaveis.php'; echo "Uma $fruta $cor";} / * variaveis.php está no escopo de foo(), * .* então $fruta NÃO está disponível fora de * .* seu escopo. $cor estará porque ela foi * .* declarada como global * / foo(); / / Uma maçã verde echo "A $fruta $cor"; / / Uma maçã?
Quando um arquivo é incluído, o interpretador sai do modo PHP e entra no modo HTML (no começo do arquivo incluído), e alterna novamente no seu fim.
Por isso, qualquer código dentro do arquivo incluído que precisa ser executado como código PHP tem de ser delimitado por tags válidas de abertura e fechamento.
Se "URL fopen wrappers" estão ativas no PHP (normalmente na configuração default), você pode especificar um arquivo utilizando uma URL (via HTTP ou qualquer outro wrapper suportado -- - veja Apêndice I para uma lista dos protocolos) em vez de uma caminho local.
Se o servidor apontado interpreta o arquivo informado como código PHP, variáveis podem ser passadas ao arquivo incluído na URL de requisição como num HTTP GET.
Isto não é necessariamente a mesma coisa que incluir o arquivo e compartilhar o escopo de variável do arquivo principal: o script será executado no servidor remoto e apenas seu resultado será incluído no script local.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Exemplo 12-5. include() através de HTTP
?php / * Este exemplo assume que www.exemplo.com está configurado para interpretar * * arquivos .php mas não .txt.
Além, 'Funciona' aqui significa que as * * variáveis $foo e $bar estão disponíveis no arquivo incluído * / / / Não funciona: arquivos txt não são manipulados em www.example.com como PHP include 'http: / /www.exemplo.com / arquivo.txt?foo=1 bar=2'; / / Não funciona: procura por um arquivo chamado 'arquivo.php?foo=1 bar=2 'no / / sistemas de arquivo local. include 'arquivo.php?foo=1 bar=2'; / / Funciona. include 'http: / /www.exemplo.com / arquivo.php?foo=1 bar=2'; $foo = 1; $bar = 2; include 'arquivo.txt'; / / Funciona. include 'arquivo.php'; / / Funciona.?
Por serem include() e require() dois construtores de linguagem especiais, você precisa delimitá-los como um bloco de instruções quando utilizados dentro de instruções condicionais.
Exemplo 12-6. include() e instruções condicionais
?php / / Isto está errado e não funcionará como desejado if ($condition) include $arquivo; else include $outro; / / E este está correto if ($condition) {include $arquivo;} else {include $outro;}?
Também é possível executar uma instrução return() Também é possível executar uma instrução return() dentro de um arquivo incluído de maneira a finalizar o processamento daquele arquivo e retornar para o script que o chamou.
Também é possível retornar valores de arquivos incluídos.
Você pode pegar o valor de retorno de um include como faria com uma função normal.
Nota:
No PHP 3, o return não pode aparecer dento de um bloco a não ser que ele seja um bloco de função, e nesse caso return() se aplica apenas para a função e não para todo o arquivo.
Instruções include() e return()
return.php ?php $var = 'PHP'; return $var;? noreturn.php ?php $var = 'PHP';? testreturns.php ?php $foo = include 'return.php'; echo $foo; / / imprime 'PHP' $bar = include 'noreturn.php'; echo $bar; / / imprime 1?
$bar assimila o valor 1 porque a inclusão foi realizada com sucesso.
Verifique a diferença entre os exemplo.
O primeiro utiliza return() dentro do arquivo incluído enquanto que o outro não.
Há outras maneiras de "incluir" arquivos dentro de variáveis, com fopen(), file() ou utilizando include() através das Funções de Controle de Output.
Veja também: require(), require_once(), include_once(), readfile(), virtual() e include_path.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
include_once()
A instrução include_once() inclui e avalia o arquivo especificado durante a execução de um script.
Seu comportamento é similar a instrução include(), a não ser que o arquivo informado já tenha sido incluído, não refazendo a operação novamente.
Como o nome sugere, ele será incluído apenas uma vez.
include_once() pode ser utilizado nos casos em que o mesmo arquivo pode acabar sendo incluído mais de uma vez durante a execução de um script em particular, quando na verdade ele só pode ser incluído apenas uma para evitar problemas com redefinições de funções, alterações nos valores de variáveis, etc.
Para maiores informações utilizando require_once() e include_once(), veja o código do PEAR incluído nas últimas distribuições do código fonte do PHP.
Nota:
Esteja avisado que o comportamento de include_once() e require_once() pode não ser o que você espera em um sistema operacional insensitivo ao caso (como o Windows).
Exemplo 12-9. include_once() é sensitivo ao caso
include_once( "a.php"); / / isto irá incluir a.php include_once("A.php"); / / isto irá incluir a.php de novo no Windows!
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Veja também: include(), require(), require_once(), get_required_files(), get_included_files(), readfile() e virtual().
Anterior
Principal
Próxima
Acima
Funções
Manual do PHP
Anterior
Próxima
ingres_autocommit
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_close
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_commit
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_connect
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ingres_connect() example
Exemplo 2. ingres_connect() example using default link
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_fetch_array
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ingres_fetch_array() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_fetch_object
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ingres_fetch_object() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_fetch_row
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ingres_fetch_row() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_length
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_name
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_nullable
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_precision
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_scale
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_field_type
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_num_fields
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_num_rows
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_pconnect
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_query
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ingres_query() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ingres_rollback
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ini_set
Description
Tabela 1.
Tabela 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ip2long() Example
Nota:
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. ircg_fetch_error_msg() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ircg_html_encode
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ircg_lookup_format_messages
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna TRUE se o objeto é desta classe ou tem esta classe como uma de suas classes pai, caso contrário retorna FALSE.
Veja também get_class(), get_parent_class(), e is_subclass_of().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_array
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_bool
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_dir
Descrição
Se filename for um caminho relativo, o mesmo será checado relativo ao diretório atual.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
O diretório a ser examinado tem que ser acessível pelo filesystem do servidor.
Veja também chdir(), dir, opendir(), is_file() and is_link().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_double - - Alias of is_float()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_executable
Descrição
Retorna TRUE se no nomedoarquivo existe e é executável.
Os resultados desta função são guardados em cache.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Nota:
Esta função não está disponível no Win32.
Veja também is_file() e is_link().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se o nome do nomedoarquivo existe e é um arquivo comum.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funciona em arquivos remotos O arquivo a ser examinado precisa ser acessível pelo sistema de arquivos do servidor.
Veja também is_dir() e is_link().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se val é número finito legal dentro dos limites permitidos para um número float PHP nesta plataforma.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se val é infinito (positivo ou negativo), como por exemplo o resultado de log(0) ou qualquer outro valor muito grande para caber num float desta plataforma.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_integer - - Alias of is_int()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se o nomedoarquivo existe e é um link simbólico (symbolic link).
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Veja também is_dir(), is_file() e readlink().
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_long - - Alias of is_int()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retona TRUE se val 'não for um número', como o resultado de acos(1.01).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_null
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_object
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_readable
Descrição
Lembre-se que o PHP deve estar acessando o arquivo como o mesmo usuário que o servidor de web roda (frequentemente 'nobody').
Limitações do safemode não são levadas em consideração.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.
Veja também is_writable().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_real - - Alias of is_float()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
isset
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_string
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna TRUE se o objeto object, pertence a uma classe que é uma sub-classe de class_name, caso contrário retorna FALSE.
Veja também get_class(), get_parent_class() e is_a().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
is_uploaded_file
Descrição
Isto é útil para ter certeza que um usuário malicioso, não está tentando confundir o script em trabalhar em arquivos que não deve estar trabalhando -- - por exemplo, / etc / passwd.
Este tipo de confirmação é importante principalmente se existe alguma chance que qualquer coisa feita com os arquivos carregados poderiam revelar o seu conteúdo para o usuário, ou mesmo para outros usuários no mesmo sistema.
is_uploaded_file() está disponível somente em versões do PHP 3 depois da 3.0.16 e em versões do PHP 4 posteriores a 4.0.2.
Se você ainda está utilizando uma versão anterior, você pode utilizar o seguinte código para se proteger:
Nota:
O exemplo seguinte não funcionará em versões do PHP posteriores a 4.0.2.
Isto depende de uma funcionalidade interna do PHP que mudou depois dessa versão.
?php / * Teste de arquivo carregado pelo usuário * / function is_uploaded_file( $filename) {if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {$tmp_file = dirname(tempnam('', ''));} $tmp_file .= '/'. basename($filename); / * Pode haver uma barra no final do php.ini... * / return (ereg_replace(' / +', '/', $tmp_file) == $filename);} / * Utilize isto se por acaso você não tiver * move_uploaded_file() em versões antigas: * / if (is_uploaded_file($HTTP_POST_FILES['userfile'])) {copy($HTTP_POST_FILES['userfile'], "/ place / to / put / uploaded / file");} else {echo "Possível ataque de carregamento de arquivo: filename '$HTTP_POST_FILES[userfile]' .";}?
Veja também move_uploaded_file() e a seção Manipulando upload de arquivos para um exemplo de utilização desta função.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE se o nomedoarquivo existe e pode ser escrito para.
O argumento nomedoarquivo pode ser um nome de diretório, deixando você saber se o diretório pode ser escrito para (writeable).
Lembre-se que o PHP deve estar acessando o arquivo como o mesmo usuário que o servidor de web roda (frequentemente 'nobody').
Limitações do safemode não são levadas em consideração.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessível pelo filesystem do servidor.
Veja também is_readable().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta é uma função sinônima (alias) para is_writable()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
java_last_exception_clear
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
java_last_exception_get
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
JDDayOfWeek
Description
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
join() é um alias para implode(), e é indêntica em tudo.
Veja também explode(), implode(), e split().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
JulianToJD
Description
Cuidado
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
key() retorna a chave da posição corrente de um array.
Veja também current() e next().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ordena um array pelas chaves em ordem descrescente, mantendo a correlação entre entre as chaves e os valores.
Essa função é bastante útil em arrays associativos.
Exemplo de krsort()
$frutas = array ("d "= "limao", "a" = "laranja", "b "= "banana", "c" = "melancia"); krsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "$chave = $valor\n";}
A saída deste programa seria:
d = limao c = melancia b = banana a = laranja
Você pode alterar o comportamento da ordenação utilizando o parâmetro opcional sort_flags, para mais detalhes veja sort().
Veja também asort(), arsort(), ksort() sort(), natsort() e rsort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ordena um array pelas chaves, mantendo a correlação entre as chaves e os valores.
Essa função é bastante útil principalmente para arrays associativos.
Exemplo de ksort()
$frutas = array ("d "= "limao", "a" = "laranja", "b "= "banana", "c" = "melancia"); ksort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "$chave = $valor\n";}
O programa acima mostraria:
a = laranja b = banana c = melancia d = limao
Você pode modificar o comportamento da ordenação através do parâmetro opcional sort_flags, para mais detalhes veja sort().
Veja também asort(), arsort(), krsort(), uksort(), sort(), natsort() e rsort().
Nota:
O segundo parâmetro foi adicionado a partir do PHP 4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
lcg_value() retorna um pseudo número aleatório nos limites de (0, 1).
A função combina duas congruências geradas, com períodos de 2^31 - 85 e 2^31 - 249.
O período desta função é igual ao produto de ambos os primos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_8859_to_t61
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_add
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_close
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_compare
Description
Exemplo 1.
Atenção
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_count_entries
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_delete
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_err2str
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_error
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_first_attribute
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_first_reference
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_free_result
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_get_dn
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_get_option
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_get_values_len
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_list
Description
Nota:
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_mod_add
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_mod_del
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_modify
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_mod_replace
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_next_reference
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_parse_reference
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_parse_result
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_read
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_rename
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_search
Description
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_set_option
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas. on error.
Nota:
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_set_rebind_proc
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_t61_to_8859
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ldap_unbind
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Funções de E-Mail
Manual do PHP
Anterior
Próxima
Retorna a Levenshtein-Distance entre duas strings argumentos ou -1, se nenhuma das strings argumentos é mais longa que o o limite de 255 caracteres (255 seria mais do que o bastante para o nome ou comparação de dicionário, e ninguém sério estaria fazendo análises genéticas com PHP).
A distância Levenshtein é definida como o número mínimo de caracteres que você tem para substituir, inserir ou apagar para transformar str1 dentro de str2.
A complexidade do algoritmo é O( m*n), onde n e m são o comprimento da str1 e str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).
Na sua forma mais simples a função pegará apenas as duas strings como parâmetros e calculará apenas o número de operações de inserção, substituição e deletação necessárias para transformar str1 em str2.
Uma segunda variante pegará três parâmetros adicionais que definem o custo das operações de inserção, substituição e deletação.
Esta é a mais geral e adapatável do que a variante um, mas não tão eficiente.
A terceira variante (que ainda não é implementada) será a mais geral e adaptável, mas também a alternativa mais lenta.
Ela chamará uma função de usuário fornecida que determinará o custo para cada possível operação.
A função de usuário fornecida( The user-supplied function) será chamada com os seguintes argumentos:
operation to apply: 'I', 'R' ou 'D '
Veja também soundex(), similar_text(), e metaphone().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
link
Descrição
Veja também symlink() para criar soft links, e readlink() assim como linkinfo().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
linkinfo() retorna o campo st_dev da structure em C do UNIX retornado pela chamada do sistema (system call) lstat.
Esta função é usada para verificar se um link (apontado por path) realmente existe (usando o mesmo metodo que a macro S_ISLNK definida em stat.h).
Retorna 0 ou FALSE em caso de erro.
Veja também symlink(), link(), e readlink().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Assim como array(), não é exatamente uma função, e sim uma construção da própria linguagem. list() é usada para criar uma lista de variáveis em apenas um operação.
Exemplo de list()
?php $info = array( 'Café', 'marrom', 'cafeína'); / / Listando todas as variáveis list($bebida, $cor, $substancia) = $info; print "$bebida is $cor e $substancia a faz especial.\n"; / / Listando apenas alguns deles list($bebida,, $substanciar) = $info; print "$bebida tem $substancia.\n"; / / Ou ignoramos os primeiros valores para conseguir apenas o último list (,, $substancia) = $info; print "I need $substancia!\n";?
Exemplo 2.
Exemplo de list()
table tr th Lista de empregados / th th Salário / th / tr ?php $result = mysql_query ("SELECT id, nome, salario FROM empregados", $conn); while (list ($id, $nome, $salario) = mysql_fetch_row ($result)) {print ("tr \n"." td a href=\"info.php?id=$id\ "$nome / a / td \n"." td $salario / td \n". "/ tr \n");}? / table
Atenção
A função list() assinala os valores começando pelos parâmetros da direita.
Se você está usando variáveis normais, então não precisa se preocupar com esse detalhe.
Mas se você está usando arrays com índices você normalmente iria esperar que a ordem dos índices no array fosse da esquerda para a direita, mas não é isso que acontece.
O índice é criado na ordem reversa.
Exemplo 3.
Usando list() com índices de array
?php $info = array( 'café', 'marrom', 'cafeína'); list($a[0], $a[1], $a[2]) = $info; var_dump($a);?
array( 3) {[2]= string(8) "cafeína "[1]= string(5) "marrom" [0]= string(6) "café "}
Veja também each(), array() e extract().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz associativa contendo numérico localizado e informação de formatação monetária.
localeconv() retorna dados baseados na localidade corrente definida por setlocale().
A matriz associativa que é retornada contém os seguintes campos:
Descrição
Caracter de ponto decimal
Matriz contendo agrupamentos numéricos
Simbolo da moeda local symbol (i.e. $)
Caractere monetário de ponto decimal
Separador monetário de mil
Matriz contendo agrupamentos monetários
Sinal para valores positivos
Sinal para valores negativos
Dígitos de fração Internacionais
Dígitos de fração locais
TRUE Se o simbolo da moeda precede um valor positivo, FALSE se eles sucede um.
TRUE Se um espaço separa o simbolo da moeda de um valor positivo, FALSE caso contrário
TRUE Se o simbolo de moeda precede um valor negativo, FALSE se ele sucede
TRUE se um espaço separa o simbolo da moeda de um valor negativo, FALSE caso contrário
Parênteses na quantidade e simbolo da moeda
A string sinal precede a quantidade e o simbolo da moeda
A string sinal sucede a quantidade e o simbolo da moeda
A string sinal precede imediatamente o simbolo da moeda
A string sinal sucede imediatamente o simbolo da moeda
Parentêses na quantidade e simbolo da moeda
A string sinal precede a quantidade e o simbolo da moeda
A string sinal sucede a quantidade e o simbolo da moeda
A string sinal precede imediatamente o simbolo da moeda
A string sinal sucede imediatamente o simbolo da moeda
Os campos de agrupamento contém matrizes que definem o modo de como os números seriam agrupados.
Por exemplo, o campo de agrupamento para a localidade en_US, conteria uma matriz de 2 itens com os valores 3 e 3.
O mais alto índice na matriz, mais distante da esquerda do agrupamento está.
Se um elemento da matriz é igual a CHAR_MAX, até aqui nenhum agrupamento é feito.
Se um elemento de matriz é igual a 0, o prévio elemento seria usado.
Exemplo 1. localeconv() exemplo
A constante CHAR_MAX também está definida para o uso mencionado acima.
Veja também setlocale().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função localtime() retorna uma matriz idêntica àquela da estrutura retornada pela chamada de uma função em C.
O primeiro argumento para localtime() é o timestamp, se este não é dado, a hora atual é usada.
O segundo argumento para localtime() é o is_associative, se este é definido como 0 ou não fornecido então a matriz é retornada como uma matriz normal, matriz com indices numéricos.
Se o argumento é definido como 1 então localtime() é uma matriz associativa contendo todos os diferentes elementos da estrutura retornados pela chamada da função C para o localtime.
Os nomes das diferentes chaves da matriz associativa são as seguintes:
"tm_sec" - segundos
"tm_min" - minutos
"tm_hour" - hora
"tm_mday" - dia do mês
"tm_mon" - mês do ano, começa com 0 para Janeiro
"tm_year" - Anos desde 1900
"tm_wday" - Dia da semana
"tm_yday" - Dia do ano
"tm_isdst" - Está em horário de verão
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o logaritmo na base 10 de arg.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
log1p
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
log
Descrição
Retorna o logaritmo natural de arg.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
lstat
Descrição
Esta função é identica a stat() exceto que se o parametro nomedoarquivo é um link simbólico o status do link simbólico é retornado e não o status do arquivo apontando pelo link simbólico.
Retorna um array com as estatísticas do arquivo com os seguintes elementos:
lstat() não pode ser utilizado em arquivos remotos.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ltrim
Nota:
O segundo parâmetro foi adicionado no PHP 4.1.0
Esta função retorna uma string com whitespace retirados do início de str.
Sem o segundo parâmetro, ltrim() retirará estes caracters:
"" (ASCII 32 (0x20)), um espaço normal.
"\t" (ASCII 9 (0x09)), uma tabela.
"\0" (ASCII 0 (0x00)), O NUL -byte.
Você pode também especificar os caracteres que você quer retirar, por meio do parâmetro charlist.
Simplesmente lista todos os caracteres que você quer que sejam retirados.
Com.. você pode especificar um ordem de caracteres.
Exemplo 1.
Exemplo do uso de ltrim()
Veja também trim() e rtrim().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mail() automaticamente envia a mensagem especificada em message para o destinatário especificado em to.
Destinatários múltiplos podem podem ser especificados colocando uma vírgula entre cada endereço em to.
Email com anexos e tipos de conteúdo especiais podem ser enviados usando esta função.
Esta é completada via MIME-encoding - para mais informações, veja Zend article or the PEAR Mime Classes.
Os seguintes RFC 's pode ser úteis:
mail() retorna TRUE se o email enviado foi aceito para entrega, do contrário FALSE.
Atenção
A implentação do Windows de mail() difere bastante da implentação Unix.
Primeiro, ele não usa um binary local para compor mensagens mas apenas opera com sockets diretos o que significa que uma MTA é necessária prestando atenção num socket de rede (que pode ser ou o localhost ou uma máquina remota).
Segundo, os cabeçalhos personalizados como From:, Cc:, Bcc: e Date: são not interpretados por MTA em primeiro lugar, mas são analizados pelo PHP.
PHP 4.3 somente elementos suportados Cc: elemento de cabeçalho (e foi caso-sensitivo).
PHP = 4.3 suporta todos os elementos de cabeçalho suportados e não distante caso-sensitivo.
Exemplo 1.
Enviando email.
Se uma string como quarto argumento é passada, esta string é insrida no fim do cabeçalho.
É usado tipicamente para adicionar cabeçalhos extras.
Cabeçalhos extras múltiplos são separados com sinal de retorno e novalinha.
Nota:
Você deve utilizar \r\n para separar headers, embora alguns agentes de transferência de email Unix mail podem trabalhar com uma simples linha somente (\n).
Exemplo 2.
Enviando email com cabeçalhos extras.
Por exemplo, isto pode ser usado para definir o endereço do envelope remetente quando usar sendmail.
Você pode precisar adicionar o usuário que seu servidor web executa como para sua configuração de sendmail para evitar que um cabeçalho 'X-Warning' seja adicionado á mensagem quando você define o envelope remetente usando este método.
Exemplo 3.
Enviando email com cabeçalhos extras e definindo um parâmetro de uma linha de comando adicional.
Nota:
O quinto parâmetro foi adicionado no PHP 4.0.5.
Você pode utilizar strings simples utilizando técnicas para construir mensagens complexas.
Exemplo 4.
Enviando email complexo.
/* recipients * / $to = "Mary mary@example.com". ","; / /note the comma $to .= "Kelly kelly@example.com "; / * subject * / $subject = "Birthday Reminders for August"; / * message * / $message = 'html head title Birthday Reminders for August / title / head body p Here are the birthdays upcoming in August! / p table tr th Person / th th Day / th th Month / th th Year / th / tr tr td Joe / td td 3rd / td td August / td td 1970 / td / tr tr td Sally / td td 17th / td td August / td td 1973 / td / tr / table / body / html'; / * To send HTML mail, you can set the Content-type header. * / $headers = "MIME-Version:
Nota:
Certifique-se que você não tem nenhum caractere novalinha em to ou subject, ou o email não será enviado corretamente.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_determine_best_xfer_encoding
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_create
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_extract_part_file
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_extract_part
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_free
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_get_part_data
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_get_part
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_get_structure
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_parse_file
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_msg_parse
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_rfc822_parse_addresses
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_stream_encode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mailparse_uudecode_all
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Matemática e Trigonometria
Anterior
Próxima
max
Descrição
max() retorna o maior número dos parâmetros.
Se o primeiro parâmetro é um array, max() retorna o maior valor do array.
Você pode comparar uma quantidade ilimitada de números.
Se nenhum dos valores for float, todos serão tratados como inteiros, e um inteiro é retornado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_convert_case() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_convert_encoding() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_convert_kana() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_convert_variables() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. convmap example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_detect_encoding() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1.
Exemplo 2. mb_detect_order() examples
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_convert_kana() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. convmap example
Exemplo 2. mb_encode_numericentity() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_eregi
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_eregi_replace
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_match
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_replace
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_getpos
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_getregs
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_init
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_pos
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_regs
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_ereg_search_setpos
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_get_info
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_internal_encoding() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_language
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_output_handler() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_preferred_mime_string() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_regex_encoding
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_regex_set_options
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_send_mail
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_split
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_strimwidth() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_strtolower() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_strtoupper() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mb_strwidth
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_substitute_character() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mb_substr_count() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcal_open
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcal_popen
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcal_reopen
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_create_iv
Description
Exemplo 1. mcrypt_create_iv() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_enc_get_algorithms_name
Description
Exemplo 1. mcrypt_enc_get_algorithms_name() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_enc_get_modes_name
Description
Exemplo 1. mcrypt_enc_get_modes_name() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_enc_get_supported_key_sizes() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_encrypt() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_generic
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_get_block_size() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_get_cipher_name
Description
Exemplo 1. mcrypt_get_cipher_name() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_create_iv() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_get_block_size() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_list_algorithms() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_list_modes() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. mcrypt_module_open() Example
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcrypt_module_self_test
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_checkstatus
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_completeauthorizations
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_connectionerror
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_deleteresponse
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_deletetrans
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_deleteusersetup
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_destroyconn
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_destroyengine
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_disableuser
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_getcellbynum
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_getcommadelimited
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_getuserparam
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_initusersetup
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_iscommadelimited
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_maxconntimeout
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_parsecommadelimited
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_preauthcompletion
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_responseparam
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_returnstatus
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_setblocking
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_setdropfile
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionauth
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionavs
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionbatch
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactioncv
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionid
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionitem
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactionssent
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transactiontext
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_transinqueue
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_verifyconnection
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mcve_verifysslcert
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Mhash - Funções de hash
Manual do PHP
Anterior
Próxima
Calcula o hash MD5 de um filename especificado usando o RSA Data Security, Inc. MD5 Message-Digest Algorithm
Esta função tem o mesmo propósito da linha de comando md5sum.
Veja também md5() e crc32()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Calcula o hash MD5 de str usando o RSA Data Security, Inc. MD5 Message-Digest Algorithm
O hash é um número hexadecimal caracter-32.
Veja também crc32() e md5_file()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mdecrypt_generic
Description
Exemplo 1. mdecrypt_generic() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
metaphone
Descrição
Similar a soundex() metaphone cria a mesma key para palavras sonoras similares.
Ela é mais precisa do que soundex() por ela conhecer as regras básicas da pronunciação inglesa.
As metaphone keys geradas são de comprimentos variados.
Metaphone foi desenvolvido por Lawrence Philips lphilips@verity.com.
Ela é descrita em ["Practical Algorithms for Programmers", Binstock Rex, Addison Wesley, 1995].
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorma TRUE se o método dado pelo method_name foi definido para o dado object, caso contrário FALSE.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mhash_count() retorna a mais alta hash id disponível.
As hashes são numeradas de 0 até esta hash id.
Exemplo 1.
Listando todas as hashes
?php $nr = mhash_count(); for ($i = 0; $i = $nr; $i++) {echo sprintf ("O tamanho do bloco de %s é %d\n", mhash_get_hash_name ($i), mhash_get_block_size ($i));}?
Anterior
Principal
Próxima
Mhash - Funções de hash
Acima
Manual do PHP
Anterior
Próxima
mhash_get_block_size() é usada para obter o tamanho de um blobo da hash específicada.
mhash_get_block_size() recebe um argumento, a hash e retorna o tamanho em bytes ou FALSE, se o parametro hash não existe.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mhash_get_hash_name
Descrição
mhash_get_hash_name() recebe a id da hash como um argumento e retorna o nome da hash ou FALSE, se a hash não existe.
Exemplo do mhash_get_hash_name()
O exemplo acima irá imprimir:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mhash() applica a função hash especificada por hash para o parametro data e retorna a hash resultante (também chamada de digest).
Se a key for especificada a função irá retornar o HMAC resultante.
HMAC é o hashing com chave (keyed) para autenticações de mensagens, ou simplesmente um digest de mensagens que depende na chave (key) específicada.
Nem todos os algorítmos suportados em mhash podem ser usados em modo HMAC.
Em caso de erro retorna FALSE.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
mhash_keygen_s2k
Descrição
Este é o algoritmo Salted S2K como especificado no documento OpenPGP (RFC 2440).
Este salt tem que ser sabido quando você checar as suas chaves (keys), logo é uma boa ideia que a chave siga o salt.
Tenha em mente que as senhas fornecidas pelos usuários não são boas para serem usadas como chaves em algoritmos criptográficos, pois usuários normalmente escolhem chaves que eles podem escrever no teclado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string "msec sec" onde sec é o tempo atual medido no número de segundos desde a Era Unix (0:00:00 January 1, 1970 GMT), e msec é a parte em microsegundos.
Esta função está disponível unicamente em sistemas operacionais que suportam a chamada gettimeofday().
Ambas porções de string são retornadas em segundos.
Exemplo 1. microtime() exemplo
Veja também time().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Funções Microsoft SQL Server
Manual do PHP
Anterior
Próxima
ming_setcubicthreshold
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ming_useswfversion
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
min() retorna o menor número dos parâmetros.
Na primeira variante, você precisa pelo menos dois parâmetros, e min() retornará o menor desses valores.
Você pode comparar um número ilimitado de valores.
Se uma das variáveis é indefinida, min() falhará.
Na segunda variante, min() retorna o menor dos valores em numbers.
Se um ou mais dos valores for um float, todos os valores serão tratados como floats, e um float será retornado.
Se nenhum dos valores é um float, todos eles serão tratados como inteiros, e um inteiro será retornado.
Em caso de falha, min() retorna NULL e um erro nível E_WARNING é registrado
?php $a = 4; $b = 9; $c = 3; $arr = array(99, 34, 11); / / Você pode querer implementar sua própria checagem / / no caso de falha (uma variável pode não existir) if (!$min_value = @min($a, $b, $c)) {echo "Não pude obter o menor valor, tente novamente .";} else {echo "O menor valor é $min_value";} print min($arr); / / Exibe 11?
Veja também max().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mkdir
Tenta criar o diretório pathname.
Note que você provavelmente quer especificar o mode como um número octal, o que significa que ele deve ter o zero inicial.
O mode é também modificado pela umaks atual, o que você pode mudar usando umask().
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também rmdir().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Note a estranha ordem dos argumentos, que diferem da ordem dos argumentos em um chamada regular da UNIX mktime() e que não combina bem com si mesma para a omissão dos parâmetros da direita para a esquerda (veja abaixo). é um erro comum misturar estes valores acima em um script.
Retorna o timestamp Unix correspondente para os argumentos dados.
Este timestamp é um longo inteiro contendo o número de segundos entre a Era Unix (January 1 1970) e o tempo especificado.
Argumentos podem ser omitidos da direita para esquerda; quaisquer argumentos assim omitidos serão definidos para o valor atual de acordo com a data e a hora local.
is_dst pode ser definido para 1 se está durante o horário de verão, 0 se não estiver, ou -1 (o padrão) se não se sabe se está em horário de verão ou não.
Se é desconhecido, o PHP tenta calcular.
Isto pode causar resultados inesperados (mas não incorretos).
mktime() é útil para fazer data aritimética e validação, ela calculará automaticamente o valor correto para um receptor fora de linha.
Por exemplo, cada uma das seguintes linhas produz a string "Jan-01-1998".
Exemplo 1. mktime() exemplo
O último dia de qualquer mês pode ser expresso como o dia "0" do próximo mês, não o dia -1.
Os seguintes exemplos produzirão a string "The last day in Feb 2000 is:
Exemplo 2.
Ultimo dia do próximo mês
Data com ano, mês e dia igual a zero é considerado ilegal (senão ele é considerado como 30.11.1999, que poderia ser um comportamento estranho).
Veja também date() e time().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
money_format
Description
Nota:
Exemplo 1. money_format() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função primeiro checa o arquivo informado nomedoarquivo é um arquivo válido uploadeado (significando que ele foi carregado pelo mecanismo do PHP de HTTP POST).
Se o arquivo é válido, ele será movido para o nomedoarquivo dado pelo destino.
Se nomedoarquivo não é um arquivo carregado válido, então não haverá nenhuma ação e move_uploaded_file() irá retornar FALSE.
Se nomedoarquivo é um arquivo uploadeado válido e não pode ser movido por alguma razão, nenhuma ação irá ocorrer, e move_uploaded_file() irá retornar FALSE.
Adicionalmente, um aviso será emitido.
Este tipo de confirmação é importante principalmente se existe alguma chance que qualquer coisa feita com os arquivos carregados poderem revelar o seu conteúdo para o usuário, ou mesmo para outros usuários no mesmo sistema.
Nota:
Quando o safe-mode está ativo, o PHP verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Isto não é inseguro porque move_uploaded_file() somente opera sobre arquivos carregados pelo PHP.
Atenção
Se o arquivo destino já existir, então ele será sobrescrito.
Veja também is_uploaded_file() e a seção Manipulando o upload de arquivos para um exemplo de utilização desta função.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_connect
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_destroy
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_disconnect
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_get_array
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_randstr
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_set_array
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msession_timeout
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_data_seek
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_drop_db
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_dropdb - - Drop (delete) mSQL database
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_fetch_field
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_field_seek
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_free_result
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_freeresult - - Free result memory
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
MySQL
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_listdbs - - List mSQL databases on server
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_listfields - - List result fields
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_listtables - - List tables in an mSQL database
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. msql_query()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_regcase - - Make regular expression for case insensitive match
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_select_db
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
msql_selectdb - - Select mSQL database
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. msql_tablename() example
Anterior
Principal
Próxima
Acima
Anterior
Próxima
mssql_bind
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Funções Microsoft SQL Server
Acima
Manual do PHP
Anterior
Próxima
mssql_close
Retorna:
mssql_close() fecha a conexão com o MS SQL Server que esta associado ao identificador de conexão(link_identifier) indicado.
Se o identificador de conexão não é especificado, a ultima conexão aberta é usada.
Note que isto não é usualmente necessário, já que conexões não persistentes são automaticamente fechadas ao final da execução do script.
mssql_close() não irá fechar conexões persistentes geradas por mssql_pconnect().
Veja também: mssql_connect(), mssql_pconnect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_connect
Retorna: um identificador de link positivo com o servidor MS SQL se funcionar, ou FALSE se houver erro.
mssql_connect() estabelece uma conexão com um servidor MS SQL.
O argumento nomedoservidor tem que ser um nome de servidor que esteja definido no arquivo 'interfaces'.
No caso de uma segunda chamada for feita para mssql_connect() com os mesmos argumentos, não será criada uma nova conexão, mas ao invés, o identificador de conexão da conexão que já esta aberta será retornado.
A conexão com o servidor será fechada assim que a execução do script terminar, a menos que seja fechada antes explicitamente por mssql_close().
Veja também mssql_pconnect(), mssql_close().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_data_seek
Retorna:
mssql_data_seek() move o ponteiro interno da linha do resultado indicado por result_identifier para o numero da linha especificado.
A próxima chamada a mssql_fetch_row() irá retornar esta linha.
Veja também: mssql_data_seek().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_execute
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_array
Retorna: uma array que corresponde a linha, ou FALSE se não houver mais linhas.
mssql_fetch_array() é uma versão estendida de mssql_fetch_row().
Alem de guardar os dados em uma matriz com índices numéricos, também guarda os dados em uma matriz associativa, usando os nomes dos campos como chave.
Uma coisa importante para notar é que usar mssql_fetch_array() NÃO é significativamente mais lento do que usar mssql_fetch_row(), enquanto que é mais fácil de usar.
Para maiores detalhes veja também mssql_fetch_row().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_assoc
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_batch
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_field
Descrição
mssql_fetch_field() pode ser usada para obter informações sobre os campos do resultado de uma query.
Se o índice do campo não for especificado, o próximo campo que ainda não foi recuperado por mssql_fetch_field() é retornado.
As propriedades do objeto são:
Se a coluna é resultado de alguma função, esta propriedade é estabelecida como computed#N, aonde #N é um número de série.
column_source - a tabela de onde a coluna veio
max_length - o limite de tamanho da coluna
numeric - 1 se a coluna é numérica
Veja também mssql_field_seek().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_object
Descrição
Um objeto com propriedades que correspondem a linha, ou FALSE se não houver mais linhas.
mssql_fetch_object() é similar a mssql_fetch_array(), com uma diferença - um objeto é retornado, ao invés de uma matriz.
Indiretamente, isto indica que você só pode acessar os dados pelo nome dos campos, e não por seus índices (números são nomes de propriedades ilegais).
Em velocidade, esta função é idêntica a mssql_fetch_array(), e quase tão rápida quanto mssql_fetch_row() (a diferença é insignificante).
Veja também: mssql_fetch-array() e mssql_fetch-row().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_fetch_row
Retorna: uma matriz que corresponde a linha, ou FALSE se não houver mais linhas.
mssql_fetch_row() retorna uma linha do resultado identificado por result.
A linha é retornada como uma matriz.
Cada coluna do resultado é guardada com um índice numérico, começando no 0.
A próxima chamada para mssql_fetch_rows() deve retornar a próxima linha do conjunto de resultados, ou FALSE se não houver mais linhas.
Veja também: mssql_fetch_array(), mssql_fetch_object(), mssql_data_seek(), mssql_fetch_lengths(), e mssql_result().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_field_seek
Descrição
Se a próxima chamada a mssql_fetch_field() não incluir um índice do campo, este campo será retornado.
Veja também: mssql_fetch_field().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_free_result() somente precisa ser chamado se você esta preocupado com a quantidade de memória usada enquanto o seu script esta sendo executado.
Toda a memória do resultado é liberada automaticamente quando o script acaba.
Você deve chamar mssql_free_result() com o identificador do resultado que você quer liberar da memória.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_guid_string
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
mssql_init
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Quando se envia mais de uma sql para o servidor ou executando uma stored procedure com múltiplos resultados, irá causar que o servidor retorne múltiplos conjuntos de resultados.
Esta função irá testar se há resultados adicionais do servidor.
Se existir um conjunto adicional de resultados, irá liberar o conjunto atual de resultados e preparar para usar o novo conjunto de resultados.
A função irá retornar TRUE se um conjunto adicional de resultados estiver disponível ou FALSE em outro caso.
Exemplo mssql_next_result()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_num_fields() retorna o número de campos em um conjunto de resultados.
Veja também: mssql_db_query(), mssql_query(), mssql_fetch_field(), e mssql_num_rows().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_num_rows() retorna o número de linhas em um conjunto de resultados.
Veja também: mssql_db_query(), mssql_query(), e mssql_fetch_row().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_pconnect
Retorna: um identificador de link persistente com MS SQL se funcionar, ou FALSE se houver erro.
mssql_pconnect() funciona muito parecido com mssql_connect() com duas diferenças maiores.
Primeiro, ao conectar, a função irá primeiro tentar achar uma conexão (persistente) que já esteja aberta com o mesmo host, username e password.
Se uma é encontrada, um identificador para ela será retornada ao invés de abrir uma nova conexão.
Segundo, a conexão ao servidor SQL não será fechada quando a execução do script terminar.
Ao invés, a conexão permanecerá aberta para uso futuro (mssql_close() não irá fechar conexões criadas com mssql_pconnect()).
Este tipo de conexão é chamado 'Persistente'.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_query
Retorna: um identificador de resultado do MS SQL se funcionar, ou FALSE se houver um erro.
mssql_query() envia uma query para o banco de dados atual no servidor que esta associado a conexão especificada em link_identifier.
Se link_identifier não for especificado, a ultima conexão aberta é usada.
Se nenhuma conexão estiver aberta, a função tenta criar um como se mssql_connect() fosse chamada, e irá usa-la.
Veja também: mssql_db_query(), mssql_select_db() ,e mssql_connect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_result() retorna o conteúdo de uma célula de um conjunto de resultados do MS SQL.
O argumento field pode ser o índice do campo, o nome do campo ou a tabela do campo ponto o nome do campo (tabela.campo).
Se um nome da coluna tem apelido ('select foo as bar from.. .'), use o apelido ao invés do nome da coluna.
Quando estiver trabalhando com grandes conjuntos de resultados, você deve considerar o uso de funções que retornam toda a linha (especificadas abaixo).
Como estas funções retornam múltiplas células em uma chamada de função, elas são MUITO mais rápidas do que mssql_result().
Também note que especificar um índice numérico para o argumento field é muito mais rápido do que especificar um nome de campo ou tabela.campo.
Alternativas mais rápidas recomendadas: mssql_fetch_row(), mssql_fetch_array(), e mssql_fetch_object().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_rows_affected
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mssql_select_db
Retorna:
mssql_select_db() estabelece o banco de dados ativo para a conexão especificada por link_identifier.
Se nenhum identificador de conexão for especificado, a ultima conexão aberta é usada.
Se nenhuma conexão estiver aberta a função tentará estabelecer uma como se mssql_connect() fosse chamada, e irá usa-la.
Todas as próximas chamadas a mssql_query() serão feitas no banco de dados ativo.
Veja também: mssql_connect(), mssql_pconnect(), e mssql_query()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o maior valor que pode ser obtido numa chamada a mt_rand().
Veja também mt_rand(), mt_srand() e getrandmax().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mt_rand
Descrição
Por default, o PHP utiliza o gerador de números aleatórios da libc para a função rand().
A função mt_rand() é um bom substituto para a primeira.
Ela utiliza um gerador de números aleatórios com características conhecidas, o Mersenne Twister, que produzirá números randômicos que podem ser utilizados como sementes em alguns tipos de criptografia e é em média quatro vezes mais rápido do que o fornecido pela libc.
Se chamada sem os argumentos opcionais min e max, mt_rand() retorna um pseudo número aletório enrte 0 e RAND_MAX. se você precisa de um número randômico entre 5 e 15 (inclusive), por exemplo, utilize mt_rand (5, 15).
Em versões anteriores do PHP, você tem que semear o gerador de números randômicos primerio com mt_srand().
Desde o PHP 4.2.0, isto não é mais necessário.
Nota:
Em versões anteriores a 3.0.7, o significado do parâmetro max era range.
Assim, para obter os mesmos resultados do exemplo acima, você precisaria utilizar rand (5, 11) para obter um número aleatório entre 5 e 15.
Veja também mt_srand(), mt_getrandmax() e rand().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mt_srand
Deszcrição
/ / semente de microsegundos function make_seed() {list($usec, $sec) = explode( '', microtime()); return (float) $sec + ((float) $usec * 100000);} mt_srand(make_seed()); $randval = mt_rand();
Nota:
Desde o PHP 4.2.0 não é mais necessário semear o gerador de números aleatórios antes de usá-lo.
Veja também mt_rand(), mt_getrandmax() e srand().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
muscat_close
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
muscat_get
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
muscat_give
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
muscat_setup
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
muscat_setup_net
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_affected_rows() retorna o número de linhas afetadas pela ultima query INSERT, UPDATE ou DELETE associada a link_identifier.
Se o identificador de link não é especificado, o ultimo link aberto por mysql_connect() é utilizado.
Nota:
Se você esta usando transações, você deve chamar mysql_affected_rows() após sua query INSERT, UPDATE, ou DELETE, não depois de commit.
Se a ultima query foi um DELETE sem a cláusula WHERE, todos os registros foram apagados da tabela, mas esta função retornará zero.
Nota:
Quando usando UPDATE, o MySQL não atualizará as colunas onde o novo valor é o mesmo que o valor anterior.
Isto cria a possibilidade de que a função mysql_affected_rows() não seja atualmente igual ao número de linhas encontradas, somente o número de linhas que literalmente foram afetadas pela query.
A função mysql_affected_rows() A função mysql_affected_rows() não funciona com os comandos SELECT; somente comandos que modificam os registros.
Para pegar o número de linhas retornados por SELECT, use mysql_num_rows().
Se a ultima query falhou, esta função irá retornar -1.
Exemplo 1.
?php / * Conecta com o banco de dados * / mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die ("Não pude conectar: ". mysql_error()); / * Este deve retornar o número coreto de registros excluídos * / mysql_query("DELETE FROM mytable WHERE id 10"); printf ("Registros excluídos: %d\n", mysql_affected_rows()); / * Sem a clausula where no comando delete, deve retornar 0 * / mysql_query("DELETE FROM mytable"); printf ("Registros excluídos: %d\n", mysql_affected_rows());?
O exemplo acima deve produzir a seguinte saída:
Registros excluídos:
10 Registros excluídos:
Exemplo 2.
?php / * conecta com o banco de dados * / mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die ("Não pude conectar: ". mysql_error()); / * Atualiza os registros * / mysql_query("UPDATE mytable SET used=1 WHERE id 10"); printf ("Registros atualizados: %d\n", mysql_affected_rows()); mysql_query("COMMIT");?
O exemplo acima deve produzir a seguinte saída:
Registros atualizados:
Veja também: mysql_num_rows(), mysql_info().
Anterior
Principal
Próxima
MySQL
Acima
Manual do PHP
Anterior
Próxima
A função mysql_change_user() muda o usuário logado da conexão ativa atual, ou da conexão dada pelo parâmetro opcional link_identifier.
Se um banco de dados é especificado, este será o banco de dados atual depois que mudar de usuário.
Se houver erro na troca de usuário o que esta atualmente conectado permanece como o usuário ativo.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Esta função foi introduzida no PHP 3.0.13 e requer MySQL 3.23.3 ou superior.
Ela não esta disponível no PHP 4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função mysql_client_encoding() retorna o conjunto de caracteres padrão para a conexão atual.
Exemplo mysql_client_encoding()
?php $link = mysql_connect( 'localhost', 'mysql_user', 'mysql_password'); $charset = mysql_client_encoding($link); printf ("Conjunto atual de caracteres é %s\n", $charset);?
O exemplo acima deve produzir a seguinte saida:
Conjunto atual de caracteres é latin1
Veja também: mysql_real_escape_string()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_close
Descrição
A função mysql_close() fecha a conexão com o servidor MySQL que você referir com o link_identifier.
Se o parâmetro link_identifier não é especificado a ultima conexão aberta é usada.
Usar a função mysql_close() não é atualmente necessário, porque conexões não persistentes são automaticamente fechadas ao final da execução do script.
Veja também freeing resources.
Exemplo 1.
Exemplo MySQL close
?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); print ("Conectado !"); mysql_close($link);?
Veja também: mysql_connect(), e mysql_pconnect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_connect
Descrição
Retorna um identificador de link (link_identifier) com o MySQL se der certo, ou FALSE se falhar.
Os seguintes padrões são assumidos para os argumentos opcionais que estiverem faltando: server = 'localhost:3306', username = nome do usuário dono do processo do servidor, password = senha vazia.
Exemplo: "hostname:port" ou um caminho para um socket, exemplo. ": / path / to / socket" para o servidor local (localhost).
Nota:
Suporte para ":port" foi adicionado no PHP 3.0B4.
Suporte para ": / path / to / socket" foi adicionado no PHP 3.0.10.
Você pode suprimir a mensagem de erro em caso de falha colocando um @ antes do nome da função.
Se uma segunda chamada é feita para mysql_connect() com os mesmos argumentos, um novo link não será estabelecido, mas ao invés disto o identificador da conexão já aberta será retornado.
O parâmetro new_link modifica esta opção e faz com que a função mysql_connect() sempre abra um novo link, mesmo que mysql_connect() seja chamada com os mesmos parâmetros.
O parâmetro client_flags pode ser uma combinação das constantes MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE ou MYSQL_CLIENT_INTERACTIVE.
Nota:
O parâmetro new_link tornou-se disponível no PHP 4.2.0
O parâmetro client_flags tornou-se disponível no PHP 4.3.0
O link com o servidor será fechado tão logo a execução do script termine, se não tiver sido fechado anteriormente por chamar explicita à mysql_close().
Exemplo 1.
Exemplo de conexão MySQL
?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); print ("Conectado"); mysql_close($link);?
Veja também mysql_pconnect() e mysql_close().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_create_db() tenta criar um novo banco de dados no servidor especificado pelo identificador de link (link_identifier) indicado.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Exemplo MySQL create database
?php $link = mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); if (mysql_create_db("my_db")) {print ("Banco de dados criado\n");} else {printf ("Erro criando o banco de dados: %s\n", mysql_error());}?
Para compatibilidade com versões anteriores mysql_createdb() também pode ser usada.
Em todo o caso ela esta obsoleta.
Nota:
A função mysql_create_db() está obsoleta.
É preferível usar mysql_query() para fazer o comando SQL CREATE DATABASE.
Veja também: mysql_drop_db(), mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_data_seek
Descrição
mysql_data_seek() move o ponteiro interno do resultado MySQL associado ao identificador de resultado (result_identifier) especificado para apontar a linha identificada.
A próxima chamada a mysql_fetch_row() irá retornar esta linha.
O parâmetro row_number O parâmetro row_number (número de linha) começa no 0.
O row_number deve ser um valor entre 0 e mysql_num_rows - 1.
Nota:
A função mysql_data_seek() pode ser usada somente em conjunto com mysql_query(), não com mysql_unbuffered_query().
Exemplo 1.
Exemplo MySQL data seek
?php $link = mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); mysql_select_db("samp_db") or die("Não pude selecionar o banco de dados:". mysql_error()); $query = "SELECT last_name, first_name FROM friends"; $result = mysql_query($query) or die("Query falhou: ". mysql_error()); / * fetch rows in reverse order * / for ($i = mysql_num_rows($result) - 1; $i = 0; $i- -) {if (!mysql_data_seek($result, $i)) {echo "Não pude ir para a linha $i:". mysql_error(). "\n"; continue;} if( !($row = mysql_fetch_object($result))) continue; echo "$row - last_name $row - first_name br / \n";} mysql_free_result($result);?
Veja também: mysql_query() e mysql_num_rows().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_db_name() tem como primeiro parâmetro o resultado de uma chamada a mysql_list_dbs().
O parâmetro row é o índice no conjunto de respostas.
Se houver um erro é retornado FALSE.
Use mysql_errno() e mysql_error() para determinar a natureza do erro.
Exemplo mysql_db_name()
Para compatibilidade com versões anteriores, mysql_dbname() também é aceito.
Seu uso está obsoleto.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna um recurso com o resultado de uma query, ou FALSE se houver erro.
A função também retorna TRUE / FALSE para as query INSERT / UPDATE / DELETE para indicar sucesso ou falha.
mysql_db_query() seleciona um banco de dados e executa uma query nele.
Se o link_identifier não for especificado (é opcional), a função tenterá achar um link aberto para o servidor MySQL, e se nenhum for encontrado, a função tenterá criar um como se a função mysql_connect() fosse chamada sem argumentos.
Tenha cuidado pois esta função NÃO seleciona de volta o banco de dados que você estava conectado antes.
Em outras palavras, você não pode usar esta função para executar uma query temporariamente em outro banco de dados, você deve manualmente trocar de volta o banco de dados.
É fortemente recomendado usar a sintaxe database.table nas suas queries ao invés desta função.
Veja também mysql_connect() e mysql_query().
Nota:
Esta função é obsoleta desde PHP 4.0.6.
Não use esta função.
Ao invés utilize mysql_select_db() e mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_drop_db
Descrição
mysql_drop_db() tenta remover todo um banco de dados do servidor especificado em link_identifier.
Para compatibilidade com as versãoes anteriores, mysql_dropdb() pode ser usada também.
Esta função é obsoleta.
Nota:
A função mysql_drop_db() é obsoleta.
É preferivel usar mysql_query() ao invés um comando SQL DROP DATABASE.
Veja também: mysql_create_db() e mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_errno
Descrição
Retorna o número do erro da ultima função do MySQL, ou 0 (zero) se não houve erro.
Erros vindos do MySQL não causam avisos.
Note que esta função somente retorna o código de erro da ultima função do MySQL que foi executada( não incluindo mysql_error() e mysql_errno()), assim se você quer usa-la, tenha certeza de utiliza-la antes de chamar outra função do MySQL.
Exemplo mysql_errno
?php mysql_connect( "localhost", "mysql_user", "mysql_password"); mysql_select_db("arquivonaoexistente"); echo mysql_errno(). ":". mysql_error(). "\n"; mysql_select_db("kossu"); mysql_query("SELECT * FROM tabelanaoexistente"); echo mysql_errno(). ":". mysql_error(). "\n";?
O exemplo acima deve produzir a seguinte saida:
Unknown database 'arquivonaoexistente' 1146:
Table 'kossu.tabelanaoexistente' doesn 't exist
Nota:
Se o argumento opcional é especificado, a conexão indicada é usada para obter o código de erro.
Se não, a ultima conexão aberta é usada.
Veja também: mysql_error()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o texto do erro da ultima função do MySQL, ou '' (Uma string vazia) se não houve erro.
Erros vindo do MySQL não causam avisos.
Ao invés, use mysql_error() para obter o texto do erro.
Note que esta função somente retorna o texto de erro da ultima função do MySQL que foi executada( não incluindo mysql_error() e mysql_errno()), assim se você quer usa-la, tenha certeza de utiliza-la antes de chamar outra função do MySQL.
Exemplo mysql_error
?php mysql_connect( "localhost", "mysql_user", "mysql_password"); mysql_select_db("arquivonaoexistente"); echo mysql_errno(). ":". mysql_error(). "\n"; mysql_select_db("kossu"); mysql_query("SELECT * FROM tabelanaoexistente"); echo mysql_errno(). ":". mysql_error(). "\n";?
O exemplo acima deve produzir a seguinte saida:
Unknown database 'arquivonaoexistente' 1146:
Table 'kossu.tabelanaoexistente' doesn 't exist
Nota:
Se o argumento opcional é especificado, a conexão indicada é usada para obter o código de erro.
Se não, a ultima conexão aberta é usada.
Veja também: mysql_errno()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função irá escapar o unescaped_string, assim será seguro coloca-la na função mysql_query().
Esta função é identica a mysql_real_escape_string() exceto que mysql_real_escape_string() precisa de um identificador de conexão e escapa a string de acordo com o conjunto atual de caracteres atual. mysql_escape_string() não precisa de um identificador de conexão e não respeita o conjunto atual de caracteres.
Exemplo mysql_escape_string()
?php $item = "Zak's Laptop"; $escaped_item = mysql_escape_string($item); printf ("String escapada: %s\n", $escaped_item);?
O exemplo acima deve produzir a seguinte saida:
Veja também: mysql_real_escape_string(), addslashes(), e a diretiva magic_quotes_gpc.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz que corresponde a linha buscada, ou FALSE se não houverem mais linhas.
mysql_fetch_array() é uma versão estendida de mysql_fetch_row().
Além de guardar os dados em um índice numérico na matriz, também guarda os dados em índices associativos, usando o nome do campo como chave.
Se duas ou mais colunas do resultado tiverem o mesmo nome do campo, a ultima coluna terá precedência.
Para acessar as outras coluna( s) com o mesmo nome, você deve usar o índice numérico da coluna ou fazer um apelido para a coluna.
Para colunas com apelido, você não pode acessar os conteúdos com o nome original da coluna (usando 'field 'neste exemplo).
Exemplo 1.
Query com nomes de campo duplicados
Uma coisa importante para notar é que usar mysql_fetch_array() não é significativamente mais lenta do que usar mysql_fetch_row(), enquanto que produz um resultado melhor de se usar.
O segundo argumento, que é opcional, result_type em mysql_fetch_array() é uma constante que pode ter os seguintes valores:
MYSQL_ASSOC, MYSQL_NUM, e MYSQL_BOTH.
Isto foi adicionado no PHP 3.0.7.
MYSQL_BOTH é o padrão para este argumento.
Usando MYSQL_BOTH, você terá uma matriz com os índices associativos e numéricos.
Usando MYSQL_ASSOC, você terá apenas os índices associativos (como funciona mysql_fetch_assoc()), usando MYSQL_NUM, você terá apenas os índices numéricos (como funciona mysql_fetch_row()).
Exemplo 2. mysql_fetch_array com MYSQL_NUM
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_NUM)) {printf ("ID: %s Name: %s", $row[0], $row[1]);} mysql_free_result($result);?
Exemplo 3. mysql_fetch_array com MYSQL_ASSOC
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {printf ("ID: %s Name: %s", $row["id"], $row["name"]);} mysql_free_result($result);?
Exemplo 4. mysql_fetch_array com MYSQL_BOTH
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {printf ("ID: %s Name: %s", $row[0], $row["name"]);} mysql_free_result($result);?
Para maiores detalhes, veja também mysql_fetch_row() e mysql_fetch_assoc().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz associativa que corresponde a linha ou FALSE se não houverem mais linhas.
mysql_fetch_assoc() é equivalente a chamar mysql_fetch_array() com MYSQL_ASSOC para o segundo parâmetro, que é opcional.
Somente retorna uma matriz associativa.
Este é o jeito que mysql_fetch_array() funcionava originalmente.
Se você precisa dos índices numéricos assim como o associativo, use mysql_fetch_array().
Se duas ou mais colunas do resultado tiverem o mesmo nome do campo, a ultima coluna terá precedência.
Para acessar as outras coluna( s) com o mesmo nome, você deve usar o índice numérico da coluna usando mysql_fetch_row() ou fazer um apelido para a coluna.
Veja o exemplo em mysql_fetch_array() uma descrição para apelidos.
Uma coisa importante para notar é que usar mysql_fetch_assoc() não é significativamente mais lenta do que usar mysql_fetch_row(), enquanto produz um resultado melhor de usar.
Exemplo 1. mysql_fetch_assoc()
?php $conn = mysql_connect( "localhost", "mysql_user", "mysql_password"); if (!$conn) {echo "Não foi possível conectar: ". mysql_error(); exit;} if (!mysql_select_db("mydbname")) {echo "Não foi possível selecionar mydbname:". mysql_error(); exit;} $sql = "SELECT id as userid, fullname, userstatus FROM sometable WHERE userstatus = 1"; $result = mysql_query($sql); if (!$result) {echo "Não foi possível executar a query ($sql): ". mysql_error(); exit;} if (mysql_num_rows($result) == 0) {echo "Nenhuma linha encontrada, nada para mostrar, então estou saindo"; exit;} / / Enquanto uma linha com dados existir, coloca esta linha em $row como uma matriz associativa / / Nota:
Se você esta esperando somente uma linha, não é necessário usar o loop / / Note:
Se você colocar extract( $row); dentro o loop a seguir, / / então você irá criar $userid, $fullname, and $userstatus while ($row = mysql_fetch_assoc($result)) {echo $row["userid"]; echo $row["fullname"]; echo $row["userstatus"];} mysql_free_result($result);?
Para maiores detalhes, veja também mysql_fetch_row(), mysql_fetch_array() e mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_fetch_field
Descrição
mysql_fetch_field() pode ser usado para obter informações sobre os campos num certo resultado de uma query.
Se o índice do campo não é especificado, o próximo campo que não foi ainda retornado por mysql_fetch_field() é retornado.
As propriedades do objeto são:
name - nome da coluna
table - nome da tabela onde esta o campo
max_length - o limite de tamanho para a coluna
not_null - 1 se a coluna não pode ser NULL
primary_key - 1 se a coluna é a chave primária
unique_key - 1 se a coluna é a chave única
multiple_key - 1 se a coluna é uma chave não única
numeric - 1 se a coluna é numérica
blob - 1 se a coluna é BLOB
type - o tipo da coluna
unsigned - 1 se a coluna é unsigned( sem sinal)
zerofill - 1 se a coluna é preenchida com zero
Exemplo 1. mysql_fetch_field()
?php mysql_connect( 'localhost:3306', $user, $password) or die ("Não pude conectar: ". mysql_error()); mysql_select_db("database"); $result = mysql_query("select * from table") or die("A query falhou:". mysql_error()); / * get column metadata * / $i = 0; while ($i mysql_num_fields($result)) {echo "Informação para a coluna $i: br / \n"; $meta = mysql_fetch_field($result); if (!$meta) {echo "Informação não disponivel br / \n";} echo "pre blob: $meta - blob max_length: $meta - max_length multiple_key: $meta - multiple_key name: $meta - name not_null: $meta - not_null numeric: $meta - numeric primary_key: $meta - primary_key table: $meta - table type: $meta - type unique_key: $meta - unique_key unsigned: $meta - unsigned zerofill: $meta - zerofill / pre"; $i++;} mysql_free_result($result);?
Veja também mysql_field_seek().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz que corresponte ao tamanho de cada campo na ultima coluna retornada por mysql_fetch_row(), ou FALSE se houver erro.
mysql_fetch_lengths() guarda o tamanho de cada coluna do resultado retornado por mysql_fetch_row(), mysql_fetch_array(), e mysql_fetch_object() numa matriz, com o índice começando em 0.
Veja também: mysql_fetch_row().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna um objeto com propriedades que correspondem a linha, ou FALSE se não houverem mais linhas.
mysql_fetch_object() é similar a mysql_fetch_array(), com uma diferença - um objeto é retornado ao invés de uma matriz.
Indiretamente, isto indica que você só pode acessar os dados pelo nome do campo, e não pelos seus índices (números como nomes de propriedades são inválidos).
?php / * Isto é válido * / echo $row - field; / * Isto é inválido * / echo $row - 0;?
Em velocidade, a função é identica a mysql_fetch_array(), e quase tão rapida quanto mysql_fetch_row() (a diferença é insignificante).
Exemplo mysql_fetch_object()
Veja também: mysql_fetch_array() e mysql_fetch_row().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma matriz numérica que corresponde a linha, ou FALSE se não houverem mais linhas.
mysql_fetch_row() retorna os dados de uma linha do resultado identificado por result(resultado de uma query).
A linha é retornada como uma matriz.
Cada coluna é um índice da matriz, começando em 0.
A próxima chamada a mysql_fetch_row() irá retornar a próxima linha do conjunto de resultados, ou FALSE se não houverem mais linhas.
Veja também: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), e mysql_result().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_field_flags() retorna as flags do campo especificado.
As flags são retornadas como uma única palavra separadas por um único espaço, assim você pode separar o valor retornado com explode().
As seguintes flags são retornadas, se a sua versão do MySQL é atual o suficiente para reporta-las: "not_null", "primary_key", "unique_key", "multiple_key", "blob", "unsigned", "zerofill", "binary", "enum", "auto_increment", "timestamp".
Para compatibilidade com as versões anteriores mysql_fieldflags() também pode ser usada.
Esta função esta depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_field_len() retorna o tamanho do campo especificado.
Para compatibilidade com versões anteriores mysql_fieldlen() pode também ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_field_name() retorna o nome do campo do índice especificado. result deve ser um identificador de resultado(de uma query) valido e field_index é o índice do campo.
Dica.
O índice do terceiro campo deve ser 2, o índice do quarto campo deve ser 3 e assim em diante.
Exemplo mysql_field_name()
/* A tabela users consiste de três campos: * user_id * username * password. * / $link = mysql_connect( 'localhost', "mysql_user", "mysql_password"); mysql_select_db($dbname, $link) or die("Could not set $dbname: ". mysql_error()); $res = mysql_query("select * from users", $link); echo mysql_field_name($res, 0). "\n"; echo mysql_field_name($res, 2);
O exemplo acima deve produzir a seguinte saída:
Para compatibilidade com versões anteriores mysql_fieldname() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_field_seek
Descrição
Se a próxima chamada a mysql_fetch_field() não incluir um índice do campo, o índice especificado em mysql_field_seek() será retornado.
Veja também: mysql_fetch_field().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o nome da tabela onde esta o campo especificado.
Para compatibilidade com versões anteriores mysql_fieldtable() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_field_type() é similar a mysql_field_name().
Os argumentos são identicos, mas ao invés é retornado o tipo do campo.
O tipo do campo será um de "int", "real", "string", "blob", e outros detalhados na documentação do MySQL.
Exemplo 1.
Tipos de campo do MySQL
A tabela acima irá produzir a seguinte saída:
Para compatibilidade com versões anteriores mysql_fieldtype() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_free_result() irá liberar toda a memória usada com o identificador de resultado result.
mysql_free_result() somente precisa ser chamado se você esta preocupado em quanta memória esta sendo usada para query num grande conjunto de resultados.
Toda a memória usada do resultado é liberada automaticamente ao final da execução do script.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Para compatibilidade com versões anteriores mysql_freeresult() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_get_client_info() retorna uma string que representa a versão da biblioteca do cliente.
Exemplo mysql_get_client_info
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_get_host_info(), mysql_get_proto_info() e mysql_get_server_info().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_get_host_info() retorna uma string descrevendo o tipo de conexão em uso para a conexão link_identifier, incluindo o nome de host do servidor.
Se o parâmetro link_identifier é omitido, a ultima conexão aberta é usada.
Exemplo mysql_get_host_info
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); printf ("MySQL host info: %s\n", mysql_get_host_info());?
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_get_client_info(), mysql_get_proto_info() e mysql_get_server_info().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_get_proto_info() retorna a versão do protocolo usada pela conexão link_identifier.
Se link_identifier é omitido, a última conexão aberta é usada.
Exemplo mysql_get_proto_info
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); printf ("MySQL protocol version: %s\n", mysql_get_proto_info());?
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_get_client_info(), mysql_get_host_info() and mysql_get_server_info().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_get_server_info() retorna a versão do servidor usado para a conexão link_identifier.
Se link_identifier é omitido, a última conexão aberta é usada.
Exemplo mysql_get_server_info
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); printf ("MySQL server version: %s\n", mysql_get_server_info());?
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_get_client_info(), mysql_get_host_info() e mysql_get_proto_info().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_info() retorna informação detalhada sobre a última query usando o link_identifier dado.
Se link_identifier não é especificado, a última conexão aberta é usada.
mysql_info() retorna uma string para todos os itens listados abaixo.
Para todos os outros FALSE.
O formato da string depende do comando dado.
Exemplo 1.
Comandos Importantes do MySQL
VALUES somente se multiplas listas de valores são especificadas no comando.
Veja também: mysql_affected_rows()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_insert_id() returna o ID gerado para um campo AUTO_INCREMENT pela ultima query INSERT usando o link_identifier mysql_insert_id() returna o ID gerado para um campo AUTO_INCREMENT pela ultima query INSERT usando o link_identifier dado.
Se link_identifier não é especificado, a ultima conexão aberta é usada.
mysql_insert_id() retorna 0 se a query anterior não gerou um valor AUTO_INCREMENT.
Se você precisa salvar o valor para depois, tenha certeza de chamar mysql_insert_id() imediatamente depois da query que gerou o valor.
Nota:
O valor da função SQL do MySQL LAST_INSERT_ID() sempre contém o mais recente valor AUTO_INCREMENT gerado, e não é reiniciado entre as query.
Atenção
mysql_insert_id() converte o tipo de retorno nativo do MySQL C API mysql_insert_id() para o tipo long (nomeado int no PHP).
Se a sua coluna AUTO_INCREMENT tem um tipo BIGINT, o valor retornado por mysql_insert_id() será incorreto.
Ao invés, use a função interna SQL do MySQL LAST_INSERT_ID() numa query SQL.
Exemplo mysql_insert_id
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Não pude conectar: ". mysql_error()); mysql_select_db("mydb"); mysql_query("INSERT INTO mytable (product) values ('kossu')"); printf ("O ultimo registro incluído tem id %d\n", mysql_insert_id());?
Veja também: mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_list_dbs() irá retorna um ponteiro de resultado contendo os bancos de dados disponiveis do servidor MySQL atual.
Use a função mysql_tablename() para atravessar este ponteiro de resultado, ou qualquer função para o resultado das tabelas.
Exemplo mysql_list_dbs()
O exemplo acima deve produzir a seguinte saída:
Nota:
O codigo acima trabalha facil com mysql_fetch_row() ou outras funções similares.
Para compatibilidade com as versões anteriores mysql_listdbs() também pode ser usada.
Esta função esta depreciada.
Veja também mysql_db_name().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_list_fields() retorna informação sobre a tabela dada.
Os argumentos são o nome do banco de dados e da tabela.
Um ponteiro de resultado é retornado o qual pode ser usado com mysql_field_flags(), mysql_field_len(), mysql_field_name(), e mysql_field_type().
Exemplo mysql_list_fields()
O exemplo acima deve produzir a seguinte saída:
Para compatibilidade com versões anteriores mysql_listfields() também pode ser usada.
Esta função esta depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_list_processes() retorna um ponteiro de resultado descrevendo as threads atuais do servidor.
Exemplo mysql_list_processes()
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_thread_id()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_list_tables() leva o nome de um banco de dados e retorna um ponteiro de resultado muito parecido com a função mysql_query().
Você pode usar a função mysql_tablename() para extrair os nomes atuais das tabela do ponteiro do resultado, ou qualquer outra função com o resultado de tabela como mysql_fetch_assoc().
O parametro database é o nome do banco de dados de onde obter a lista de tabelas.
Se a função mysql_list_tables() falhar, retorna FALSE.
Para compatibilidade com versões anteriores, o apelido chamado mysql_listtables() pode ser usado.
Esta depreciada e seu uso não é recomendado.
Exemplo mysql_list_tables
?php $dbname = 'mysql_dbname'; if (!mysql_connect('mysql_host', 'mysql_user', 'mysql_password')) {print 'Não pude conectar com o MySQL'; exit;} $result = mysql_list_tables($dbname); if (!$result) {print "DB Error, não pude listar as tabelas\n"; print 'MySQL Error:'. mysql_error(); exit;} while ($row = mysql_fetch_row($result)) {print "Table: $row[0]\n";} mysql_free_result($result);?
Veja também: mysql_list_dbs(), e mysql_tablename().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_num_fields() retorna o número de campos em um conjunto de resultado.
Veja também: mysql_select_db(), mysql_query(), mysql_fetch_field(), mysql_num_rows().
Para compatibilidade com versões anteriores mysql_numfields() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_num_rows
Descrição
mysql_num_rows() retorna o número de linhas em um resultado.
Para obter o número de linhas afetadas por INSERT, UPDATE ou DELETE, use mysql_affected_rows().
Exemplo mysql_num_rows()
Nota:
Se você usar mysql_unbuffered_query(), mysql_num_rows() não irá retornar o valor correto até que todas as linhas do resultado sejam obtidas.
Veja também: mysql_affected_rows(), mysql_connect(), mysql_data_seek(), mysql_select_db(), e mysql_query().
Para compatibilidade com versões anteriores mysql_numrows() também pode ser usada.
Esta função está depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna um identificador de link persistente ao MySQL em caso de sucesso, ou FALSE se houver erro.
mysql_pconnect() estabelece uma conexão com o servidor MySQL.
Os seguintes padrões são assumidos para os parametros opcionais que estiverem faltando: server = 'localhost:3306', username = nome do usuário que for dono do processo do servidor e password = password vazio.
O parametro client_flags pode ser uma combinação das constantes MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE ou MYSQL_CLIENT_INTERACTIVE.
Ex: "hostname:port" ou um caminho para um socket ex: ": / path / to / socket" para o localhost.
Nota:
Suporte a ":port" foi adicionado em 3.0B4.
Suporte a ": / path / to / socket" foi adicionado em 3.0.10.
mysql_pconnect() aje muito parecido com mysql_connect() com duas maiores diferenças.
Primeira,ao conectar, a função primeiro irá tentar encontrar um conexão persistente que já esteja aberta com o mesmo servidor, nome de usuário e senha.
Se uma é encontrada, um identificador para ela será retornada ao invés de abrir uma nova conexão.
Segundo, a conexão com o servidor SQL não será fechada quando termina a execução do script.
Ao invés, a conexão continuará aberta para uso futuro( mysql_close() não irá fechar conexões abertas por mysql_pconnect()).
O parametro opcional client_flags tornou-se disponivel no PHP 4.3.0.
Este tipo de conexão é portanto chamada 'persistente'.
Nota:
Note que este tipo de conexão funciona somente se você esta usando o PHP como módulo.
Veja a seção Persistent Database Connections para maiores informações.
Atenção
Usar conexões persistentes pode requerer alguns ajustes na sua configuração do Apache e MySQL para assegurar que você não ultrapasse o limite de conexões permitidos pelo MySQL.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_ping
Descrição
mysql_ping() confere se uma conexão com o servidor esta ou não funcionando.
Esta função pode ser usada por scripts que permanecem ociosos por um grande tempo, para conferir uqando o servidor fechou ou não a conexão e reconectar se necessário. mysql_ping() returna TRUE se a conexão com o servidor esta funcionando, em outro caso FALSE.
Veja também: mysql_thread_id(), mysql_list_processes().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_query() envia uma query para o banco de dados ativo no servidor da conexão informada em link_identifier.
Se o parâmetro link_identifier não é especificado, a ultima conexão aberta é usada.
Se nenhuma conexão esta aberta, a função tenta estabelecer uma conexão como mysql_connect() seja chamada sem argumentos e usa-a.
O parâmetro opcional result_mode pode ser MYSQL_USE_RESULT e MYSQL_STORE_RESULT.
O seu padrão MYSQL_STORE_RESULT, assim seu resultado é colocado no buffer.
Veja também mysql_unbuffered_query() para a sua contrapartida.
Nota:
A string da query não deve terminar com ponto e virgula(;).
Somente para os comandos SELECT, SHOW, EXPLAIN ou DESCRIBE mysql_query() retorna um identificador de recurso ou FALSE se a query não foi executada corretamente.
Para outros tipos de comandos SQL, mysql_query() retorna TRUE em caso de sucesso e FALSE em erro.
Um valor não FALSE indica que a query foi legal e pode ser executada pelo servidor.
Não indica nada sobre o número de linhas afetadas ou retornadas.
É perfeitamente possível para uma query ser bem sucedida, mas não afetar linhas ou retornar linhas.
A seguinte query é sintaticamente invalida, assim mysql_query() falha e retorna FALSE:
Exemplo 1. mysql_query()
php $result = mysql_query( "SELECT * WHERE 1=1") or die("Query invalida: ". mysql_error());?
A seguinte query é semanticamente invalida se my_col não é uma coluna da tabela my_tbl, assim mysql_query() falha e retorna FALSE:
Exemplo 2. mysql_query()
?php $result = mysql_query( "SELECT my_col FROM my_tbl") or die ("Query invalida: ". mysql_error());?
mysql_query() irá também falhar e retornar FALSE se você não tiver permissão para acessar a tabela(s) referida(s) pela query.
Assumindo que a query seja bem sucedida, você pode chamar mysql_num_rows() para achar quantas linhas foram retornadas para um comando SELECT ou mysql_affected_rows() para achar quantas linhas foram afetadas por um comando DELETE, INSERT, REPLACE, ou UPDATE.
Somente para os comandos SELECT,SHOW,DESCRIBE ou EXPLAIN, mysql_query() retorna um novo identificador de resultado que você pode passar para mysql_fetch_array() e outras funções que lidam com resultados de tabelas.
Quando você terminou de usar o resultado você pode liberar os recursos usados chamando mysql_free_result().
Embora a memória será automaticamente liberada ao final da execução do script.
Veja também: mysql_num_rows(), mysql_affected_rows(), mysql_unbuffered_query(), mysql_free_result(), mysql_fetch_array(), mysql_fetch_row(), mysql_fetch_assoc(), mysql_result(), mysql_select_db(), and mysql_connect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função irá escapar os caracteres especiais em unescaped_string, levando em conta o atual conjunto de caracteres da conexão, assim é seguro coloca-la em mysql_query().
Exemplo mysql_real_escape_string()
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_escape_string(), mysql_character_set_name().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_result() retorna o conteúdo de uma célula do resultado MySQL.
O argumento field( campo) pode ser o índice do campo, o nome do campo, o a tabela ponto o nome do campo(tabela.campo).
Se o nome da coluna usa apelido ('select foo as bar from.. .'), use o apelido ao invés do nome da coluna.
Quando trabalhando com um grande conjunto de resultado, você deve considerar o uso de uma das funções que retornam toda a linha( especificadas abaixo).
Estas funções retornam o conteúdo de multiplas células em uma chamada de função, elas são MUITO mais rapidas do que mysql_result().
Também note que especificar um índice do campo é muito mais rapido do que especificar o nome do campo ou tabela.campo.
Chamadas a mysql_result() não devem ser misturadas com chamadas a outras funções que lidam com o conjunto de resultados.
Alternativas de alta performance recomendadas: mysql_fetch_row(), mysql_fetch_array(), e mysql_fetch_object().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_select_db
Descrição
mysql_select_db() define o banco de dados ativo no servidor que é associado ao identificador de conexão(link_identifier) especificado.
Se nenhum identificador de conexão é especificado, a ultima conexão aberta é assumida.
Se nenhuma conexão esta aberta, a função irá tentar abrir uma conexão como se mysql_connect() fosse chamada sem argumentos e usa-la.
todas as próximas chamadas a mysql_query() serão feitas no banco de dados ativo.
Veja também: mysql_connect(), mysql_pconnect(), e mysql_query().
Para compatibilidade com versões anteriores mysql_selectdb() também pode ser usada.
Esta função esta depreciada.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_stat
Descrição
Para uma lista completa de outras variáveis de staus você tem que usar o comando SQL SHOW STATUS.
Exemplo mysql_stat()
?php $link = mysql_connect( 'localhost', "mysql_user", "mysql_password"); $status = explode( '',mysql_stat($link)); print_r($status);?
O exemplo acima deve produzir a seguinte saída:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_tablename() usa um ponteiro de resultado retornado por mysql_list_tables() ou um índice inteiro e retorna o nome da tabela A função mysql_num_rows() pode ser usada para determinar o número de tabelas no ponteiro do resultado.
Exemplo mysql_tablename()
Veja também: mysql_list_tables().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_thread_id
Descrição
Se a conexão for perdida e você reconectar com mysql_ping(), o ID da thread irá muda.
Isto indica que você não deve guardar o pegar ID e guarda-lo para depois.
Você deve pega-lo quando você precisar dele.
Exemplo mysql_thread_id()
O exemplo acima deve produzir a seguinte saída:
Veja também: mysql_ping(), mysql_list_processes().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
mysql_unbuffered_query
Descrição
mysql_unbuffered_query() envia uma query SQL para MySQL, sem retornar e colocar em buffer as linhas do resultado automaticamente, como mysql_query() faz. por um lado, isto salva uma quantidade considerável de memória em query que produzem um resultado grandes. por outro lado, você pode começãr a trbalhar com o resultado imediatamente após a primeira linha ser retornada: você não tem que esperar que toda a query SQL seja realizada.
Quando usar multiplas conexões com o banco de dados, você deve especificar o parametro opcional link_identifier.
O parametro opcional result_mode pode ser MYSQL_USE_RESULT e MYSQL_STORE_RESULT.
O padrão é MYSQL_USE_RESULT, assim o resultado não é colocado no buffer.
Veja também mysql_query() para a contraparte desta função.
Nota:
Os beneficios de mysql_unbuffered_query() vem com um custo: você não pode usar mysql_num_rows() no resultado retornado por mysql_unbuffered_query().
Você tmbém tem que pegar todas as linhas de uma query SQL sem buffer antes de poder enviar uma nova query SQL para o MySQL.
Veja também: mysql_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função implementa o algoritmo de ordenação que ordena strings alfanuméricas da forma que os humanos fariam.
Essa forma de ordenação é denominada "ordenação natural".
natcasesort() é uma versão de natsort() que não diferencia letras maiúsculas e minúsculas.
Veja natsort() para saber a diferença entre esse algoritmo e os algoritmos utlizados normalmente para ordenação de strings.
Para mais informações veja:
Veja também sort(), natsort(), strnatcmp() e strnatcasecmp().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função é um implementação do algoritmo que ordena strings alfanuméricas da forma como um ser humano faria.
Isso é chamado de "ordenação natural".
Um exemplo da diferença entre esse algoritmo e o algoritmo com o qual o computador classifica strings (usado em sort()) pode ser visto abaixo:
Exemplo de natsort()
$array1 = $array2 = array ("img12.png", "img10.png", "img2.png", "img1.png"); sort($array1); echo "Classificação normal\n"; print_r($array1); natsort($array2); echo "\nClassificação da \"ordem natural\"\n"; print_r($array2);
O código acima geraria a seguinte saída:
Classificação normal Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Classificação da "ordem natural "Array ([3] = img1.png [2] = img2.png [1] = img10.png [0] = img12.png)
Nota:
Se quiser manter a correlação entre chaves e valores, considere a possibilidade de utilizar usort( $arr, 'strnatcmp').
Veja também natcasesort(), strnatcmp() e strnatcasecmp().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_addch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_addchnstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_addchstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_addnstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_addstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_assume_default_colors
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_attroff
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_attron
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_attrset
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_baudrate
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_beep
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_bkgd
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_bkgdset
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_border
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_can_change_color
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_cbreak
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_clear
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_clrtobot
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_clrtoeol
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_color_set
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_curs_set
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_define_key
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_def_prog_mode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_def_shell_mode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_delay_output
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_delch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_deleteln
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_delwin
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_doupdate
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_echochar
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_echo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_end
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_erasechar
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_erase
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_filter
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_flash
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_flushinp
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_getch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_getmouse
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ncurses_getmouse() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_halfdelay
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_has_colors
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_has_ic
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_has_il
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_has_key
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_hline
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_inch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_init_color
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_init
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_init_pair
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_insch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_insdelln
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_insertln
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_insstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_instr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_isendwin
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_keyok
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_killchar
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_longname
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mouseinterval
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mousemask
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. ncurses_mousemask() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_move
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvaddch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvaddchnstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvaddchstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvaddnstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvaddstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvcur
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvdelch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvgetch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvhline
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvinch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_mvwaddstr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_napms
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_newwin
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_nl
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_nocbreak
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_noecho
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_nonl
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_noqiflush
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_noraw
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_putp
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_qiflush
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_raw
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_refresh
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_resetty
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_savetty
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_scr_dump
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_scr_init
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_scrl
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_scr_restore
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_scr_set
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_attr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_attroff
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_attron
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_attrset
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_clear
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_color
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_init
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_noutrefresh
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_refresh
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_restore
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_slk_touch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_standend
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_standout
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_start_color
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_termattrs
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_termname
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_timeout
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_typeahead
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_ungetch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_ungetmouse
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_use_default_colors
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_use_env
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_use_extended_names
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_vidattr
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_vline
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ncurses_wrefresh
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o elemento do array que está na próxima posição que é apontada pelo ponteiro interno do array, ou FALSE caso não existam mais elementos.
next() funciona de forma semelhante a current(), com uma diferença.
Ele avança o ponteiro interno do array em uma posição antes de retornar o elemento.
Isso significa que ela retorna o próximo elemento do array avançando o ponteiro interno em uma posição.
Se o ponteiro interno apontar para além do final da lista de elementos, next() retorna FALSE.
Atenção
Se o array contiver elementos vazios, ou se elementos tiverem chaves com 0 como valor então essa função retorna FALSE Se o array contiver elementos vazios, ou se elementos tiverem chaves com 0 como valor então essa função retorna FALSE para esses elementos.
Para percorrer um array que pode conter elementos vazios ou elementos que tenham chaves com 0 como valor veja a função each().
Veja também current(), end(), prev() e reset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna string com 'br /' inserido antes de todas as newlines.
Nota:
Começa no PHP 4.0.5, nl2br() está agora em XHTML complacente.
Todas as versões anteriores a 4.0.5 retornarão string com 'br' inserido antes das newlines ao invés de 'br /'.
Veja também htmlspecialchars(), htmlentities() e wordwrap().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_body
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_copy_db
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_create_db
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_create_note
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_drop_db
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_find_note
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_header_info
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_list_msgs
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_mark_read
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_mark_unread
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_nav_create
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_search
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_unread
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
notes_version
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
number_format
Descrição
number_format() retorna uma versão formatada de number.
Se apenas um parâmetro é dado, number será formatado sem decimais, mas com uma virgula (",") entre cada grupo de milhar.
Se dois parâmetros são dados, number será formatado com o número de casas decimais especificadas em decimals com um ponto (".") na frente, e uma vírgula (" ,") entre cada grupo de milhar.
Se todos os quatro parâmetros forem dados, number será formatado com o número de casas decimais em decimals, dec_point ao invés do ponto (".") antes das casas decimais e thousands_sep ao invés de uma vírgula (" ,") entre os grupos de milhares.
Nota:
Somente o primeiro caractere de thousands_sep é usado.
Por exemplo, se você usar foo como o parâmetro thousands_sep no número 1000, number_format() irá retornar 1f000.
Exemplo number_format()
Por exemplo, a notação Francesa usa duas casas decimais, vírgula (',') como separador decimal, e espaço (' ') como separador de milhar.
Isto é feito com a linha:
?php $number = 1234.56; / / Notação Inglesa (padrão) $english_format_number = number_format($number); / / 1,234 / / Notação Francesa $nombre_format_francais = number_format($number, 2, ',',' '); / / 1 234,56 $number = 1234.5678; / / Notação Inglesa com separador de milhar $english_format_number = number_format($number, 2, '.', ''); / / 1234.57?
Veja também: sprintf(), printf() e sscanf().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ob_get_status
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. ob_gzhandler() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ob_iconv_handler() example:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ob_start
Description
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Sobrecarga de propriedades e métodos de objetos
Manual do PHP
Anterior
Próxima
Exemplo 1.
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCICollAssignElem
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIColumnPrecision
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIColumnScale
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIColumnTypeRaw
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIError
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIFreeCollection
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIInternalDebug
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCILoadLob
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCILogOff
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCINewCollection
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIParse
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCISaveLobFile
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCISaveLob
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
OCIWriteLobToFile
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retornar o decimal equivalente do número octal representado pelo argumento octal_string.
O maior número que pode ser convertido é 17777777777 ou 2147483647 em decimal.
Veja também decoct().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_binmode
Description
Tabela 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_columns
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
odbc_commit() commits all pending transactions on the connection_id connexion.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_connect
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_data_source
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_exec
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Executes a statement prepared with odbc_prepare() .Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_fetch_array
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. odbc_fetch_into() pre 4.0.6 example
Exemplo 2. odbc_fetch_into() 4.0.6 example
Exemplo 3. odbc_fetch_into() 4.2.0 example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_fetch_object
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_free_result
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_longreadlen
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_next_result
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_pconnect
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_prepare
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_procedures
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_result_all
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_result
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
odbc_tables
Description
Anterior
Principal
Próxima
Acima
Anterior
Próxima
opendir
Descrição
Retorna um handle de diretório para ser usado em chamadas subsequentes a closedir(), readdir(), e rewinddir().
Você pode suprimir o erro na saída de opendir() no seu script ao se inserir `@ 'na frente do nome da função.
Exemplo 1. exemplo de opendir()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. openlog() Options
Tabela 2. openlog() Facilities
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Tabela 1.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. openssl_csr_new() example - creating a self-signed-certificate
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. openssl_error_string() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_open
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. openssl_open() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. openssl_pkcs7_decrypt() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. openssl_pkcs7_encrypt() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. openssl_pkcs7_sign() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_private_encrypt
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_public_decrypt
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_public_encrypt
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. openssl_seal() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_sign
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. openssl_sign() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_verify
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. openssl_verify() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. openssl_x509_checkpurpose() purposes
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
openssl_x509_parse
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Bind
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Commit
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_CommitOff
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
PrÃ³xima
Acima
Manual do PHP
Anterior
Próxima
Ora_Exec
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Fetch_Into
Description
Exemplo 1. ora_fetch_into()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_GetColumn
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Logoff
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ora_Open
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o valor ASCII do primeiro caractere de string.
Esta função complementa chr().
Exemplo ord()
if (ord($str) == 10) {echo "O primeiro caractere de \$str é uma nova linha.\n";}
Você pode achar a tabela ASCII aqui: http: / /www.asciitable.com.
Veja também chr().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função overload() ativa a chamada sobrecarregada de propriedades e métodos para a classe identificada por class_name.
Veja o exemplo na seção introdutória desse módulo.
Anterior
Principal
Próxima
Sobrecarga de propriedades e métodos de objetos
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ovrimos_connect() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_exec
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_execute
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_fetch_row
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_free_result
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_num_fields
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_prepare
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Exemplo 3. ovrimos_result_all example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ovrimos_result
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pack() format string
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
parse_ini_file() carrega o arquivo INI informado no nomedoarquivo, e retorna as configurações dele em um array associativo.
Ao usar processar_secoes como TRUE, você receberá um array multidimensional, com os nomes das seções e os parametros incluidos.
O padrão (default) para processar_secoes é FALSE.
Nota:
Esta função não tem nada a ver com o arquivo php.ini.
Este já é processado na hora que você executa o script.
Esta função pode ser usada para ler os arquivos de configuração de sua própria aplicação.
Nota:
Se o arquivo INI tem qualquer caracter não alfanumérico, eles precisam estar delimitados por aspas (").
Nota:
Desde o PHP 4.2.1, esta função é afetada por safe_mode e open_basedir.
A estrutura do arquivo ini é similar a do php.ini.
Se o arquivo INI que você está tentando interpretar estiver mal formado, o PHP pára.
Exemplo 1.
Conteúdo de exemplo.ini
; Este é um arquivo de configuração de exemplo; Comentário começam com ';', como no php.ini [primeira_secao] um = 1 cinco = 5 [segunda_secao] path = / usr / local / bin URL = "http: / /www.example.com / ~username "
Exemplo 2. exemplo de parse_ini_file()
?php / / Parse sem as seções $ini_array = parse_ini_file( "exemplo.ini"); print_r($ini_array); / / Parse com as seções $ini_array = parse_ini_file("exemplo.ini", TRUE); print_r($ini_array);?
Irá produzir:
Array ([um] = 1 [cinco] = 5 [path] = / usr / local / bin [URL] = http: / /www.example.com / ~username) Array ([primeira_secao] = Array ([um] = 1 [cinco] = 5) [segunda_secao] = Array ([path] = / usr / local / bin [URL] = http: / /www.example.com / ~username))
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Converte str como se ela tivesse sido passada via URL e define o valor das variáveis.
Se o segundo parâmetro arr estiver presente, as variáveis são colocadas nesta variável como uma matriz de elementos.
Nota:
Suporte para o segundo parâmetro, que é opcional, foi adicionado no PHP 4.0.3.
Nota:
Para pegar a QUERY_STRING atual, você deve usar a variável $_SERVER[ 'QUERY_STRING']. também você deve querer ler a seção sobre variáveis de fora do PHP.
Exemplo 1.
Usando parse_str()
Veja também parse_url(), pathinfo(), set_magic_quotes_runtime(), e urldecode().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
parse_url
Descrição
Esta função retorna um array associativo qualquer um dos vários componentes de uma URL que estão presentes.
Isto inclui "scheme", "host", "port", "user", "pass", "path", "query", e "fragment".
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pathinfo() retorna um array associatico contendo informações sobre o path.
O seguinte elementos do array são retornados: dirname, basename e extension.
Exemplo de pathinfo()
?php $partes_do_path = pathinfo( "/ www / htdocs / index.html"); echo $partes_do_path["dirname"]. "\n"; echo $partes_do_path["basename"]. "\n"; echo $partes_do_path["extension"]. "\n";?
Produzirá:
Nota:
Para informações na recuperação da informação do diretório atual, leia a seção variáveis predefinidas reservadas.
Veja também dirname(), basename(), parse_url() e realpath().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Fecha um ponteiro de arquivo a uma pipe aberta por popen().
O ponteiro de arquivo tem que ser válido e tem que ser retornado por uma chamada bem sucedida a função popen().
Retorna o status da finalização do processo que estava rodando.
Veja também popen().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pcntl_fork() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Nota:
Exemplo 1. pcntl_signal() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. possible values for pid
Tabela 2. possible values for options
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pcntl_wexitstatus
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_add_annotation - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_add_outline - - Deprecated:
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_begin_page
Description
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_continue_text
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_findfont
Description
Exemplo 1. pdf_findfont() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_get_buffer
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_get_font - - Deprecated: font handling
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_get_fontname - - Deprecated: font handling
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_get_fontsize - - Deprecated: font handling
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_moveto
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_file
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_gif - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Open a new pdf object
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_image_file
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_image
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_jpeg - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_png - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_open_tiff
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_char_spacing - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_setcolor
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_duration - - Deprecated:
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_font - - Deprecated:
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_horiz_scaling
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_leading - - Deprecated:
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_text_matrix - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_text_rendering - - Deprecated:
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_text_rise - - Deprecated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pdf_set_word_spacing - - Depriciated:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pfpro_init
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pfpro_process
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pfpro_process_raw
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_affected_rows() retorna o número de linhas (instâncias / registros / linhas) afetados por consultas (queries) INSERT, UPDATE e DELETE executados por pg_query().
Se nenhuma linha foi afetada, ela retornará 0.
Exemplo 1. pg_affected_rows()
?php $result = pg_query ($conn, "INSERT INTO publisher VALUES ('Author')"); $cmdtuples = pg_affected_rows ($result); echo $cmdtuples. "linhas foram afetadas .";?
Nota:
Esta função costumava ser chamada de pg_cmdtuples().
Veja também pg_query() e pg_num_rows().
Anterior
Principal
Próxima
Funções para PostgreSQL
Acima
Manual do PHP
Anterior
Próxima
pg_cancel_query() cancela uma consulta (query) assíncrona enviada por pg_send_query().
Você não pode cancelar uma consulta executada por pg_query().
Veja também pg_send_query() e pg_connection_busy()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_client_encoding
Descrição
pg_client_encoding() retorna a codificação do cliente como uma string.
A string de retorno pode ser SQL_ASCII, EUC_JP, EUC_CN, EUC_KR, EUC_TW, UNICODE, MULE_INTERNAL, LATINX (X=1...9), KOI8, WIN, ALT, SJIS, BIG5, WIN1250.
Nota:
Esta função requer PHP 4.0.3 ou maior e PostgreSQL 7.0 ou maior Se a libpq foi compilada sem suporte a codificação multibyte, pg_set_client_encoding() sempre retornará "SQL_ASCII ".
As codificações suportadas dependem da versão do PostgreSQL.
Vide o manual do PostgreSQL para mais detalhes sobre como habilitar o suporte a multibyte e outras codificações.
Esta função costumava ser chamada pg_clientencoding().
Veja também pg_set_client_encoding().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_close() fecha a conexão não persistente com servidor de banco de dados PostgreSQL associado ao recurso (resource) connection dado.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Normalmente, o uso de pg_close() não é necessário já que conexões não persistentes abertas são automaticamente fechadas ao final do processamento do script.
Se existem recursos (resource) de objetos grandes (large objects) abertos na conexão, não feche a conexão antes de fechar todos os recursos relacionados com estes objetos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_connect() retorna um recurso (resource) de conexão que é necessário para outras funções para PostgreSQL.
pg_connect() abre uma conexão com um servidor de banco de dados PostgreSQL especificado por connection_string.
Retorna um recurso (resource) de conexão em caso de sucesso.
Retorna FALSE se a conexão não pôde ser estabelecida. connection_string deve ser uma string entre aspas duplas.
Exemplo 1.
Usando pg_connect
?php $bdcon = pg_connect ("dbname=flavia"); / /conecta a um banco de dados chamado "flavia "$bdcon2 = pg_connect ("host=localhost port=5432 dbname=flavia"); / / conecta a um banco de dados chamado "flavia" em "localhost "na porta "5432" $bdcon3 = pg_connect ("host=ovelha port=5432 dbname=flavia user=ze password=buu"); / /conecta a um banco de dados chamado "flavia "na máquina "ovelha" com um usuário e senha $con_string = "host=ovelha port=5432 dbname=flavia user=ze password=buu"; $bdcon4 = pg_connect ($con_string); / /coneta a um banco de dados chamado "flavia "na máquina "ovelha" com um usuário e senha?
Se uma segunda chamada é feita para pg_connect() com a mesma connection_string, nenhuma nova conexão será estabelecida, ao invés disso, o recurso (resource) de conexão da conexão que já está aberta será retornado.
Você pode ter multiplas conexões para o mesmo banco de dados se você usar diferentes strings de conexão.
A sintaxe antiga com parâmetros múltiplos $con = pg_connect ("host", "port", "options", "tty", "dbname") se tornou obsoleta.
Veja também pg_pconnect(), pg_close(), pg_host(), pg_port(), pg_tty(), pg_options() e pg_dbname().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_connection_busy() retorna TRUE se a conexão está ocupada.
Se estiver ocupada, significa que uma consulta (query) anterior ainda está sendo executada.
Se pg_get_result() for chamada, será bloqueada.
Veja também pg_connection_status() e pg_get_result()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_connection_reset
Descrição
pg_connection_reset() reinicia uma conexão.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também pg_connect(), pg_pconnect() e pg_connection_status()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_connection_status
Descrição
Os status possíveis são PGSQL_CONNECTION_OK e PGSQL_CONNECTION_BAD.
Veja também pg_connection_busy().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_convert() checa e converte assoc_array em uma declaração SQL apropriada.
Nota:
Esta função é experimental.
Veja também pg_metadata()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_copy_from
Descrição
Usa o comando interno COPY FROM para inserir registros.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também pg_copy_to()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_copy_to
Descrição
Utiliza internamente o comando SQL COPY TO para inserir os registros.
Seu retorno é o array resultante.
Caso haja falhas, FALSE é retornado.
Veja também pg_copy_from()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_dbname() retorna o nome do banco de dados para um dado recurso (resource) de conexão connection.
Retorna FALSE, se connection não é um recurso de conexão PostgreSQL válido.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_delete() remove registros que seguem a condição especificada por assoc_array que tem o formato campo = valor.
Se options for especificado, pg_convert() é aplicada a assoc_array com a opção especificada.
Exemplo 1. pg_delete
?php $db = pg_connect ('dbname=flavia'); / / Isto é seguro, já que $_POST é convertido automaticamente $res = pg_delete($db, 'post_log', $_POST); if ($res) {echo "Dados de POST foram removidos: $res\n";} else {echo "O usuário deve ter enviado parâmetros inválidos\n";}?
Nota:
Esta função é experimental.
Veja também pg_convert()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_end_copy() sincroniza o frontend PostgreSQL (geralmente um processo de servidor HTTP) com o servidor PostgreSQL depois de fazer uma operação de cópia usando pg_put_line(). pg_end_copy() deve ser chamada, caso contrário o servidor PostgreSQL pode perder a sincronia com o frontend fazendo com que o servidor gere um erro.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Para maiores detalhes e um exemplo, veja também pg_put_line().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_escape_bytea() gera uma string do tipo bytea.
Retorna uma string com escapes.
Nota:
Quando você usa SELECT bytea type, o PostgreSQL retorna valores de byte octais prefixados por\ (ex.: \032).
Usuários devem converter de volta para binários por si mesmos.
Esta função exige PostgreSQL 7.2 ou superior.
Com PostgreSQL 7.2.0 e 7.2.1, o tipo de dados bytea deve ser criado quando você habilita o suporte a multi-byte.
Por exemplo, INSERT INTO tabela_teste (imagem) VALUES ('$imagem_escaped'::bytea); Por exemplo, INSERT INTO tabela_teste (imagem) VALUES ('$imagem_escaped'::bytea); PostgreSQL 7.2.2 ou superior não precisa de coerção (cast).
A exceção é quando a codificação de caracteres do cliente e do backend não combinam, então pode haver erro de fluxo de multi-byte.
O usuário deve fazer a coerção (cast) para bytea para evitar este erro.
Versões do PostgreSQL mais novas suportarão a função unescape.
Suporte para a função interna unescape será adicionada assim que estiver disponível.
Veja também pg_escape_string()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_escape_string() gera strings do tipo text / chat.
Retorna uma string com escapes para PostgreSQL.
O uso desta função é recomendado no lugar de addslashes().
Nota:
Esta função exige PostgreSQL 7.2 ou superior.
Veja também pg_escape_bytea()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_all() retorna uma array que contém todas as linhas (registros) do recurso (resourse) de resultado.
Retorna FALSE, se não existem mais registros.
Veja também pg_fetch_row(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().
Exemplo 1.
Retornando linhas (registros) no PostgreSQL
?php $conn = pg_pconnect ("dbname=escritor"); if (!$conn) {echo "Ocorreu um erro!\n"; exit;} $result = pg_query ($conn, "SELECT * FROM authors"); if (!$result) {echo "Ocorreu um erro!\n"; exit;} $arr = pg_fetch_all ($result, 0, PGSQL_NUM); var_dump($arr);?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_array() retorna um array que corresponde à linha (registro).
Retorna FALSE se não existem mais linhas.
pg_fetch_array() é uma versão extendida de pg_fetch_row().
Além de armazenar os dados em índices numéricos (índice) no array resultante, também armazena os dados em chaves associativas (nome do campo) por padrão.
row é o número da linha (registro) a ser recuperado.
A primeira linha é 0.
result_type é um parâmetro opcional que controla como o valor de retorno é iniciado. result_type é uma constante e pode ter os seguintes valores:
Índice de campo como chave com PGSQL_NUM e ambos nome / índice numérico como chave com PGSQL_BOTH.
Nota:
pg_fetch_array() NÃO é significativamente mais lenta que pg_fetch_row(), e ainda fornece uma significativa facilidade de uso.
Veja também pg_fetch_row(), pg_fetch_object() e pg_fetch_result().
Exemplo 1.
Retornando linhas (registros) no PostgreSQL
?php $conn = pg_pconnect ("dbname=publicar"); if (!$conn) {echo "Um erro ocorreu.\n"; exit;} $result = pg_query ($conn, "SELECT * FROM autores"); if (!$result) {echo "Um erro ororreu.\n"; exit;} $arr = pg_fetch_array ($result, 0, PGSQL_NUM); echo $arr[0]. "- array\n"; $arr = pg_fetch_array ($result, 1, PGSQL_ASSOC); echo $arr["autor"]." - array\n";?
Nota:
A partir do PHP 4.1.0, row tornou-se opcional.
A chamada pg_fetch_array() irá incrementar o contador de linha interno em 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_assoc() retorna um array associativo que corresponde à linha (registro) recuperado.
Retorna FALSE, se não houver mais registros.
pg_fetch_assoc() é uma versão extendida de pg_fetch_row().
Além de guardar em índices numéricos, no array resultante, também guarda dados em arrays com chaves associativas (nome do campo) por padrão.
row é o número da linha (registro) a ser recuperado.
A primeira linha é 0.
pg_fetch_assoc() NÃO é significativamente mais lenta que pg_fetch_row(), e ainda fornece uma significativa facilidade de uso.
Veja também pg_fetch_row(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().
Exemplo 1.
Retornando linhas (registros) no PostgreSQL
?php $conn = pg_pconnect ("dbname=revista"); if (!$conn) {echo "Ocorreu um erro.\n"; exit;} $result = pg_query ($conn, "SELECT * FROM authors"); if (!$result) {echo "Ocorreu um erro.\n"; exit;} $arr = pg_fetch_assoc ($result, 1, PGSQL_ASSOC); echo $arr["author"]. "- array\n";?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_object() retorna um objeto com propriedades que correspondem à linha recuperada.
Retorna FALSE se não existem mais linhas ou no caso de erro.
pg_fetch_object() é similar a pg_fetch_array(), com uma diferença - um objeto é retornado, ao invés de um array.
Indiretamente, isto significa que você pode acessar os dados somente através dos nomes de campos, e não por seus índices (números são nomes inválidos de propriedades).
row é o número da linha (registro) a ser recuperada.
A primeira linha é 0.
Em termos de performance, a função é idêntica a pg_fetch_array(), e quase tão rápida quanto pg_fetch_row() (a diferença é insignificante).
Nota:
A partir do PHP 4.1.0, row é opcional.
A partir do PHP 4.3.0, result_type tem PGSQL_ASSOC como valor padrão, enquanto em outras versões mais antigas o padrão é PGSQL_BOTH.
Não há utilidade para a propriedade numérica, já que nomes de propriedades numéricas são inválidas em PHP.
O parâmetro result_type deverá ser removido em versões futuras.
Veja também pg_query(), pg_fetch_array(), pg_fetch_row() e pg_fetch_result().
Exemplo 1.
H1 Falha ao conectar com o banco de dados PostgreSQL ?php echo $database? / H1 ?php exit; endif; $qu = pg_query ($db_conn, "SELECT * FROM verlag ORDER BY autor"); $row = 0; / / postgresql precisa de um contador de linha, outros dbs talvez não precisem while ($data = pg_fetch_object ($qu, $row)) {echo $data - autor. "("; echo $data - jahr ."):"; echo $data - titel. "BR"; $row++;}?
PRE ?php $fields[] = Array ("autor", "Autor"); $fields[] = Array ("jahr", "Ano"); $fields[] = Array ("titel"," Título"); $row= 0; while ($data = pg_fetch_object ($qu, $row)) {echo "----------\n"; reset ($fields); while (list (,$item) = each ($fields)): echo $item[1] .": ".$data - $item[0] ."\n"; endwhile; $row++;} echo "----------\n";? / PRE ?php pg_free_result ($qu); pg_close ($db_conn);?
Nota:
A partir do PHP 4.1.0, row tornou-se opcional.
Ao chamar pg_fetch_object() o contador de linhas interno será acrescentado de 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_result() retorna valores a partir de um recurso (resource) de resultado result criado por pg_query(). row é um inteiro. field é um nome de campo (string) ou um índice de campo (inteiro). row e field especificam que célula da tabela deve ser recuperada.
A numeração de linhas começa de 0.
Ao invés de nomear o campo, você pode usar o índice numérico de campo sem aspas.
Índices de campo iniciam-se em 0.
PostgreSQL tem muitos tipos internos mas apenas os tipos básicos são suportados.
Todas as formas de tipo integer são retornadas como valores integer.
Todas as formas de tipos reais (ponto flutuante) são retornados como valores float.
Boolean é retornado como "t" ou "f ".
Todos os outros tipos, incluindo arrays, são retornados como strings formatadas na mesma maneira padrão que o PostgreSQL retornaria com o programa psql.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_fetch_row() retorna uma linha de dados a partir do resultado associado com o recurso (resource) de resultado result.
A linha (registro) é recuperada como um array.
Cada coluna do resultado é armazenada em um índice do array, iniciando-se no índice 0.
Retorna um array que corresponde à linha carregada, ou FALSE se não existem mais linhas.
Veja também pg_query(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().
Exemplo 1.
Retornando linhas (registros) no PostgreSQL
?php $conn = pg_pconnect ("dbname=editora"); if (!$conn) {echo "Um erro ocorreu.\n"; exit;} $result = pg_query ($conn, "SELECT * FROM autores"); if (!$result) {echo "Um erro ocorreu.\n"; exit;} $num = pg_num_rows($result); for ($i=0; $i $num; $i++) {$r = pg_fetch_row($result, $i); for ($j=0; $j count($r); $j++) {echo "$r[$j] nbsp ;";} echo "BR";}?
Nota:
A partir do PHP 4.1.0, row tornou-se opcional.
Ao chamar pg_fetch_row(), o contador de linha interno será incrementado em 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_is_null
Descrição
pg_field_is_null() testa se um campo é NULL ou não.
Retorna 0 se o campo na linha dada NÃO é NULL.
O campo pode ser especificado como um índice de coluna (número) ou como o nome de um campo (string).
A numeração de linhas inicia-se em 0.
Nota:
Esta função era chamada pg_fieldisnull().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_name() retorna o nome do campo ocupando o campo de número igual a field_number no recurso (resource) de resultado result.
A numeração de campo inicia-se em 0.
Nota:
Esta função era chamada pg_fieldname().
Veja também pg_field_num().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_num() irá retornar o número da vaga (slot) da coluna (campo) que corresponde a field_name no recurso (resource) de resultado result.
A numeração de campo inicia-se em 0.
Esta função retornará -1 em caso de erro.
Nota:
Esta função era chamada pg_fieldnum().
Veja também pg_field_name().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_prtlen() retorna o comprimento atual impresso (número de caracteres) de um valor especificado em um recurso (resource) de resultado result.
A numeração de linha inicia-se em 0.
Esta função retornará -1 em caso de erro.
Nota:
Esta função era chamada pg_field_prtlen().
Veja também pg_field_size().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_size() retorna o tamanho de armazenamento interno (em bytes) do número de campo do recurso (resource) de resultado result.
A numeração de campo inicia-se em 0.
Um campo de tamanho -1 indica um campo de tamanho variável.
Esta função retornará FALSE em caso de erro.
Nota:
Esta função era chamada pg_fieldsize().
Veja também pg_field_len() e pg_field_type().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_field_type() retorna uma string contendo o nome do tipo do campo de número field_number dado no recurso (resource) de resultado result.
A numeração de campo inicia-se em 0.
Nota:
Esta função era chamada pg_fieldtype().
Veja também pg_field_len() e pg_field_name().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_free_result() precisa ser usada apenas se você está preocupado em usar muita memória enquanto seu script está rodando.
Todos os resultados serão liberados da memória automaticamente assim que o script terminar de executar.
Mas, se você tem certeza que não precisará mais dos dados do resultado em um script, você pode chamar pg_free_result() com o recurso (resource) de resultado result como argumento e a memória ocupada pelo resultado associado será liberada.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Esta função era chamada pg_field_len().
Veja também pg_query().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_get_result() retorna o recurso (resource) de resultado de uma consulta (query) executada por ps_send_query(). pg_send_query() pode enviar múltiplas consultas (queries) ao servidor PostgreSQL e pg_get_result() é usada para carregar os resultados das consultas, um por um.
Retorna o recurso (resource) de resultado.
Se não houverem mais resultados, retorna FALSE.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_host() retorna o nome da máquina com a qual o recurso (resource) de conexão connection está conectado.
Veja também pg_connect() e pg_pconnect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_insert() insere o array assoc_array, que contém os pares campo = valor, na tabela especificada pelo parâmetro table_name.
Se options for especificado, pg_convert() será aplicada à assoc_array com a opção especificada.
Exemplo 1. pg_insert
?php $db = pg_connect ('dbname=meubanco'); / / Isto é seguro uma vez que $_POST é convertido automaticamente $res = pg_insert($db, 'post_log', $_POST); if ($res) {echo "Dados POST arquivados com sucesso\n";} else {echo "O usuário deve ter inserido entradas inválidas\n";}?
Nota:
Esta função é experimental.
Veja também pg_convert()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_last_error() retorna a última mensagem de erro para a conexão representada por connection.
As mensagens de erro podem ser sobrescritas por chamadas internas ao PostgreSQL( libpq).
Se múltiplos erros ocorrerem dentro de um módulo de função do PostgreSQL, pode não retornar a mensagem de erro correta.
Use pg_result_error(), pg_result_status() e pg_connection_status() para um melhor tratamento de erros.
Nota:
Esta função era chamada pg_errormessage().
Veja também pg_result_error().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_last_notice() retorna a última notificação do servidor PostgreSQL especificada por connection.
O servidor PostgreSQL envia notificações em diversas situações, por exemplo, se as transações não puderem continuar.
Com pg_last_notice() você pode evitar a chamada de consultas (queries) inúteis, checando quando a notificação está relacionada ou não com a transação.
Atenção
Esta função é EXPERIMENTAL e ainda não está completamente implementada. pg_last_notice() foi adicionada no PHP 4.0.6.
Entretanto o PHP 4.0.6 tem problemas com a manipulação de mensagens.
O uso do módulo PostgreSQL com o PHP 4.0.6 não é recomendada, mesmo se você não estiver usando pg_last_notice().
Esta função está totalmente implementada no PHP 4.3.0.
Versões do PHP mais recentes que a 4.3.0 ignoram o parâmetro de conexão com o banco de dados.
O rastreamento de notificações pode ser definido como opcional definindo 1 para a diretiva pgsql.ignore_notice do PHP 4.3.0.
O arquivamento (log) de mensagems pode ser pode ser definido como opcional mudando para 0 a diretiva pgsql.log_notice no PHP 4.3.0.
A não ser que pgsql.ignore_notice estiver definida para 0, notificações não podem ser arquivadas.
Veja também pg_query() e pg_last_error().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_last_oid() é usado para recuperar o oid designado a uma linha (registro) se o recurso (resource) de resultado é usado a partir do último comando enviado através de pq_query() se este comando era um INSERT do SQL.
Retorna um inteiro positivo se havia um oid válido.
Retorna FALSE se um erro ocorrer ou o último comando enviado através de pg_query() não foi INSERT ou se o INSERT falhou.
O campo OID tornou-se opcional a partir do PostgreSQL 7.2.
Quando um campo OID não é definido em uma tabela, o programador deve usar pg_result_status() para checar se o registro foi inserido com sucesso ou não.
Nota:
Esta função era chamada pg_getlastoid().
Veja também pg_query() e pg_result_status()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_close() fecha um Objeto Grande (Large Object, daí vem o "lo "que integra o nome da função). large_object é um recurso (resource) para o objeto grande gerado a partir de pg_lo_open().
Para usar a interface de objetos grandes (lo), é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_loclose().
Veja também pg_lo_open(), pg_lo_create() e pg_lo_import().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_create() cria um Objeto Grande (Large Object) e retorna o seu oid. connection especifica uma conexão a um banco de dados válida aberta por pg_connect() ou pg_pconnect().
Os modos de acesso INV_READ, INV_WRITE e INV_ARCHIVE não são suportados, o objeto é criado sempre com acesso a leitura e escrita.
INV_ARCHIVE foi removido do próprio PostgreSQL (a partir da 6.3).
Retorna FALSE se um erro ocorrer.
Para usar a interface de objetos grandes (lo), é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_locreate().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
O argumento oid especifica o oid do objeto grande (large object) a exportar e o argumento pathname O argumento oid especifica o oid do objeto grande (large object) a exportar e o argumento pathname especifica o caminho até o arquivo.
Retorna FALSE se um erro ocorrer, caso contrário retorna TRUE.
Para usar a interface de objetos grandes (lo), é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_loexport().
Veja também pg_lo_import().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Em versões anteriores a 4.2.0, a sintaxe desta função é diferente, veja a seguinte definição:
O argumento pathname O argumento pathname especifica o caminho do arquivo a ser importado como um objeto grande (large object).
Retorna FALSE se um erro ocorrer, caso contrário, retorna o oid do objeto recém criado.
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Quando o safe-mode está ativo, o PHP verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.
Nota:
Esta função era chamada pg_loimport().
Veja também pg_lo_export() e pg_lo_open().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_open() abre um Objeto Grande (Large Object em inglês, daí o "lo").
O recurso (resource) encapsula informações sobre a conexão. oid especifica um oid de objeto grande válido e o parâmetro mode pode ser "r", "w "ou "rw".
A função retorna FALSE se houver algum erro.
Atenção
Não feche a conexão com o banco de dados sem antes fechar a conexão com o objeto grande.
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_loopen().
Veja também pg_lo_close() e pg_lo_create().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_read_all() lê um objeto grande (large object) e passa-o diretamente para o navegador depois de enviar todos os cabeçalhos pendentes.
A intenção principal é enviar dados binários como imagens ou som.
Retorna o número de bytes lidos ou FALSE se ocorrer algum erro.
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_loreadall().
Veja também pg_lo_read().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_read() lê o número de bytes equivalente ao valor de len de um objeto grande (large object) e retorna-o como uma string. large_object especifica um recurso (resource) válido de objeto e len especifica o tamanho máximo permitido do segmento do objeto grande.
Retorna FALSE se algum erro acontecer.
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_loread().
Veja também pg_lo_read_all().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_seek() procura uma posição em um recurso (resource) de um objeto grande (large objet). whence pode ser PGSQL_SEEK_SET, PGSQL_SSEK_CUR ou PGSQL_SEEK_END.
Veja também pg_lo_tell().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_tell() retorna a posição atual (deslocamento a partir do início do objeto grande).
Veja também pg_lo_seek().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_unlink
Descrição
pg_lo_unlink() remove um objeto grande (large object) com um determinado oid.
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_lo_unlink().
Veja também pg_lo_create() e pg_lo_import().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_lo_write() escreve em um objeto grande (large object) a partir de uma variável data e retorna o número de bytes escritos, ou FALSE em caso de erro. large_object é um recurso (resource) de objeto grande criado a partir de pg_lo_open().
Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.
Nota:
Esta função era chamada pg_lo_write().
Veja também pg_lo_create() e pg_lo_open().
Anterior
Principal
Próxima
Acima
pg_metadata
Manual do PHP
Anterior
Próxima
pg_num_fields() retorna o número de campos (colunas) do recurso (resource) de resultado result.
O argumento é um recurso (resource) de resultado criado a partir de pg_query().
Esta função irá retornar -1 em caso de erro.
Nota:
Esta função era chamada pg_numfields().
Veja também pg_num_rows() e pg_affected_rows().
Anterior
Principal
Próxima
pg_metadata
Acima
Manual do PHP
Anterior
Próxima
pg_num_rows() irá retornar o número de linhas do recurso de resultado result. result é um recurso (resource) de resultado de consulta (query) feito por pg_query().
Esta função retornará -1 em caso de erro.
Nota:
Use pg_affected_rows() para obter o número de linhas afetadas por consultas do tipo INSERT, UPDATE e DELETE.
Nota:
Esta função era chamada pg_numrows().
Veja também pg_num_fields() e pg_affected_rows().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_options() retornará uma string contendo as opções especificadas no recurso (resource) de conexão PostgreSQL connection.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_pconnect
Descrição
pg_pconnect() abre uma conexão a um banco de dados PostgreSQL.
Retorna um recurso (resource) de conexão que é necessário para outras funções PostgreSQL.
Para habilitar uma conexão persistente, a diretiva pgsql.allow_persistent do php.ini deve ser definida como "On" (que é o padrão).
O número máximo de conexões persistentes pode ser definida com a diretiva pgsql.max_persistent do php.ini O número máximo de conexões persistentes pode ser definida com a diretiva pgsql.max_persistent do php.ini (o padrão é -1 para sem limite).
O número total de conexões pode ser definido com a diretiva pgsql.max_links do php.ini.
pg_close() não fechará links persistentes gerados por pg_pconnect().
Veja também pg_connect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_ping() faz um ping na conexão com o banco de dados, tenta reconectar se a conexão foi quebrada.
Retorna TRUE se a conexão está ativa, do contrário, retorna FALSE.
Veja também pg_connection_status() e pg_connection_reset().
Exemplo 1.
Testando uma conexão PostgreSQL
?php $conn = pg_pconnect ("dbname=publicacao"); if (!$conn) {echo "Ocorreu um erro.\n"; exit;} if (!pg_ping($conn)) die("Conexão quebrada\n");?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_port() retorna o número da porta a qual o recurso de conexão PostgreSQL connection está conectado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_put_line() envia uma string terminada em NULL para o servidor backend PostgreSQL.
Isso é útil, por exemplo, para a inserção de dados em uma tabela em alta velocidade, iniciada através de uma operação de cópia PostgreSQL.
O caractere NULL final é adicionado automaticamente.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
A aplicação deve enviar os dois caracteres "\." explicitamente na última linha para indicar ao backend que ela terminou de enviar seus dados.
Veja também pg_end_copy().
Exemplo 1.
Inserção de dados na tabela em alta velocidade
?php $conn = pg_pconnect ("nomebd=meubanco"); pg_query($conn, "create table bar (a int4, b char(16), d float8)"); pg_query($conn, "copy bar from stdin"); pg_put_line($conn, "3\tola mundo\t4.5\n"); pg_put_line($conn, "4\ttchau mundo\t7.11\n"); pg_put_line($conn, "\\.\n"); pg_end_copy($conn);?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_query
Descrição
pg_query() retorna um recurso (resource) de resultado da consulta (query) se a consulta pôde ser executada.
Detalhes sobre os erros podem ser recuperados usando a função pg_last_error() se a conexão é válida. pg_last_error() envia uma declaração SQL para o banco de dados PostgreSQL especificado pelo recurso de conexão connection. connection deve ser uma conexão válida que foi criado por pg_connect().
O valor de retorno dessa função é um recurso (resource) de resultado de consulta (query) para ser usado para acessar os resultados de outras funções PostgreSQL como pg_fetch_array().
Se connection não for definido, a conexão padrão será usada.
A conexão padrão é a última conexão feita por pg_connect() ou pg_pconnect().
Apesar de connection poder ser omitido, isso não é recomendado já que pode ser uma causa de erros difíceis de encontrar no seu script.
Nota:
Esta função era chamada pg_exec(). pg_exec() ainda está disponível por razões de compatibilidade, mas os usuários são encorajados a usar o novo nome.
Veja também pg_connect(), pg_pconnect(), pg_fetch_array(), pg_fetch_object(), pg_num_rows(), e pg_affected_rows().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_result_error() retorna a mensagem de erro associada ao recurso (resource) de resultado result.
Deste modo, o usuário tem melhores chances de ter uma mensagem de erro melhor que a retornada por pg_last_error().
Veja também pg_query(), pg_send_query(), pg_get_result(), pg_last_error() e pg_last_notice()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_result_seek
Descrição
pg_result_seek() altera a posição do ponteiro interno de um recurso (resource) de resultado.
Veja também pg_fetch_row(), pg_fetch_assoc(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_result_status() retorna o status do recurso (resource) de resultado.
PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK, PGSQL_TUPLES_OK, PGSQL_COPY_TO, PGSQL_COPY_FROM, PGSQL_BAD_RESPONSE, PGSQL_NONFATAL_ERROR e PGSQL_FATAL_ERROR.
Veja também pg_connection_status().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_select() seleciona registros especificados por assoc_array, que contém pares do tipo campo= valor.
Para uma consulta (query) válida, retorna um array que contém todos os registros e campos que combinam com a condição especificada por assoc_array.
Se options for especificado, pg_convert() será aplicada à assoc_array com as opções especificadas.
Exemplo 1. pg_select
?php $db = pg_connect ('nomebd=meubanco'); / / Isto é seguro já que $_POST é convertida automaticamente $rec = pg_select($bd, 'post_log', $_POST); if ($rec) {echo "Registros selecionados\n"; var_dump($rec);} else {echo "O usuário deve ter inserido dados errados\n";}?
Nota:
Esta função é experimental.
Veja também pg_convert()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_send_query() envia uma consulta (query) assíncrona para connection.
Diferente de pg_query(), ela pode enviar consultas múltiplas para o PostgreSQL e carregar os resultados, um por um, usando pg_get_result().
A execução do script não é bloqueada enquanto as consultas estão sendo executadas.
Use pg_connection_busy() para checar se a conexão está ocupada. (por exemplo, se uma consulta está sendo executada).
A consulta pode ser cancelada chamando pg_cancel_query().
Apesar de ser possível enviar multiplas consultas de uma vez, você não pode enviar múltiplas consultas para uma conexão ocupada.
Se a consulta é enviada enquando a conexão está ocupada ela espera até que a última cosulta seja finalizada e descarta todos os resultados.
Veja também pg_query(), pg_cancel_query(), pg_get_result() e pg_connection_busy()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_set_client_encoding() define a codificação do cliente e retorna 0 caso haja sucesso e -1 se houver erro.
encoding é a codificação do cliente e pode ter os valores:
As codificações disponíveis dependem da versão do PostgreSQL e libpq.
Vide o manual PostgreSQL para saber das codificações disponíveis para o seu PostgreSQL.
Nota:
Esta função exige o PHP 4.0.3 ou maior e PostgreSQL 7.0 ou maior.
As codificações suportadas dependem da versão do PostgreSQL.
Vide o manual PostgreSQL para detalhes.
Esta função era chamada pg_setclientencoding().
Veja também pg_client_encoding().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_trace() habilita o rastreamento da comunicação frontend / backend do PostgreSQL para um arquivo de depuração especificado pelo parâmetro pathname.
Para entender completamente estes resultados, você deve estar familiarizado com o protocolo de comunicação interno do PostgreSQL.
Para aqueles que não estão, isso ainda pode ser útil para rastrear erros em consultas (queries) enviadas ao servidor, você poderia fazer por exemplo grep '^Para backend 'rastro.log.
Para maiores informações vide o manual PostgreSQL.
pathname e mode são os mesmos que na função fopen() (o mode padrão é 'w'), connection especifica a conexão a ser rastreada e seu padrão é a última conexão aberta.
Retorna TRUE se o pathname pode ser aberto para escrita, FALSE caso contrário.
Veja também fopen() e pg_untrace().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_tty() retorna o nome da tty que a saída do lado do servidor é enviada no recurso (resource) de conexão connection.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_unescape_bytea() faz uma versão binária da string do tipo bytea.
Retorna a string em binário( binary).
Nota:
Quando você faz SELECT bytea type, PostgreSQL returna um valor em octal prefixado por\ (por exemplo: \032).
Usuários devem fazer a transformação em binário por si próprios.
Esta função exige PostgreSQL 7.2 ou superior.
Com PostgreSQL 7.2.0 e 7.2.1, o tipo de dados bytea deve ser criado quando você habilita o suporte a multi-byte.
Por exemplo, INSERT INTO tabela_teste (imagem) VALUES ('$imagem_escaped'::bytea); Por exemplo, INSERT INTO tabela_teste (imagem) VALUES ('$imagem_escaped'::bytea); PostgreSQL 7.2.2 ou superior não precisa de coerção (cast).
A exceção é quando a codificação de caracteres do cliente e do backend não combinam, então pode haver erro de fluxo de multi-byte.
O usuário deve fazer a coerção (cast) para bytea para evitar este erro.
Veja também pg_escape_bytea() e pg_escape_string()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Pára o rastreamento iniciado por pg_trace(). connection especifica a conexão que está sendo rastreada e seu padrão é a última conexão aberta.
Sempre retorna TRUE.
Veja também pg_trace().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pg_update() atualiza registros que combinam com a condição especificada pelo argumento condition com os dados do parâmetro data.
Se options for especificado, pg_convert() será aplicada a data com as opções especificadas.
Exemplo 1. pg_update
?php $bd = pg_connect ('dbname=meubanco'); $dados = array('campo1'= 'AA', 'campo2'= 'BB'); / / Isto é seguro já que $_POST é convertido automaticamente $res = pg_update($bd, 'post_log', $_POST, $dados); if ($res) {echo "Dados atualizados: $res\n";} else {echo "Usuário deve ter enviado entradas inválidas\n";}?
Nota:
Esta função é experimental.
Veja também pg_convert()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
phpinfo
Tabela 1. phpinfo() options
Exemplo 1. phpinfo() examples
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
php_logo_guid
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. php_sapi_name() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. php_uname() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. phpversion() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pi
Descrição
O valor retornado float tem a precisão baseada na diretiva precision do php.ini, que tem por padrão 14.
Também é possivel usar a constante M_PI que terá resultados idênticos a pi().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Anterior
Próxima
popen
Descrição
Abre uma pipe para um processo executado ao se dar um fork para o comando dado por command.
Este ponteiro pode ser usado com fgets(), fgetss() e fputs().
Caso um erro ocorra retorna FALSE.
Se você está procurando por suporte bidirecional (via dupla), utilize proc_open().
?php $fp = popen ("/ bin / ls", "r");?
Nota:
Se o commando a ser executado não for encontradom um recurso válido será retornado.
Isso pode parecer esquisito, mas tem sentido: permite que você acesse a mensagem de erro retornado pelo sistema operacional.
?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $fp = popen(' / path / to / spooge 2 1', 'r'); echo "'$fp'; ". gettype($fp). "\n"; $read = fread($fp, 2096); echo $read; pclose($fp);?
Veja também pclose(), fopen() e proc_open().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função é um alias para current().
Veja também end(), next(), prev() e reset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getegid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_geteuid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getgid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getpgid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getpgrp
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getsid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_getuid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_kill
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Quando o safe-mode está ativo, o PHP verifica se o diretório que será afetado por essa operação tem o mesmo UID (proprietário) do script que está sendo executado.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_setegid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_seteuid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_setgid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_setpgid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_setsid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
posix_setuid
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Funções para PostgreSQL
Manual do PHP
Anterior
Próxima
Retorna a base elevada ao expoente exp.
Se possível, esta função retornará um integer.
Se a potência não puder ser calculada, um alerta será lançado, e pow() retornará FALSE.
Exemplo 1.
Alguns exemplos de pow()
?php var_dump( pow(2,8)); / / int(256) echo pow(-1,20); / / 1 echo pow(0, 0); / / 1 echo pow(-1, 5.5); / / erro?
Atenção
No PHP 4.0.6 e posteriores, pow() sempre retornará um float, e não gerará avisos de erros.
Veja também exp() e sqrt().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. preg_grep() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
preg_match
Description
Exemplo 1.
Exemplo 2. find the word "web"
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1.
Nota:
Exemplo 2.
Exemplo 3.
Exemplo 4.
Exemplo 5.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
preg_split
Nota:
Exemplo 1. preg_split() Exemplo 1. preg_split() example:
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o elemento do array que está na posição anterior a posição apontada pelo ponteiro interno, ou FALSE se houver mais elementos.
Atenção
Se o array contiver elementos vazios então essa função retornará FALSE para esses elementos.
Para percorrer corretamente arrays que podem conter elementos vazios veja a função each().
prev() funciona da mesma forma que next(), com a única diferença sendo de que a primeira retrocede o ponteiro interno em uma posição ao invés de avançá-lo.
Veja também current(), end(), next() e reset().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_abort() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_close() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_create_brush
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_create_dc() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_create_font
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_create_pen
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_delete_brush
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_delete_font
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_delete_pen
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_draw_bmp() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_draw_chord
Description
Exemplo 1. printer_draw_chord() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_draw_elipse
Description
Exemplo 1. printer_draw_elipse() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_draw_line() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_draw_pie
Description
Exemplo 1. printer_draw_pie() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_draw_rectangle
Exemplo 1. printer_draw_rectangle() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_draw_roundrect
Description
Exemplo 1. printer_draw_roundrect() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_draw_text() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_get_option() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_list() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_logical_fontheight() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_open() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_select_brush() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_select_font() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_select_pen() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_set_option() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
printer_start_doc
Description
Exemplo 1. printer_start_doc() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. printer_write() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Produz uma saída de acordo com format, o qual é descrito na documentação para sprintf().
Veja também print(), sprintf(), sscanf(), fscanf(), e flush().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
print
Mostra arg.
print() não é atualmente uma função real (é uma construção da linguagem) então você não precisa usar parêntesis com ela.
Exemplos print()
?php print( "Alô Mundo"); print "print() também funciona sem parênteses ."; print "Isto divide em múltiplas linhas.
As quebras de linha serão mostradas também"; print "Isto divide\nem múltiplas linhas.
As quebras de linha serão\nmostradas também"; print "escapar caracteres é feito \"como isto\" ."; / / Você pode usar variáveis dentro do $foo = "foobar"; $bar = "barbaz"; print "foo is $foo"; / / foo is foobar / / Usando apóstrofos irá exibir o nome da variável, não o valor print 'foo is $foo'; / / foo is $foo / / Se você não estiver usando outros caracteres, somente mostre a variável print $foo; / / foobar print END Isto usa a sintaxe "aqui documento "para mostrar múltiplas linhas com interpolação de $variable interpolation.
Note que o terminador de aqui documento deve aparecer em uma linha terminada em ponto e vírgula(;) sem nenhum espaço extra!
Veja também echo(), printf(), e flush().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dica:
Como toda saída é normalmente enviada direto para o browser, você pode usar as Funções de Controle de Output para capturar o resultado e guardá-lo em uma string (por exemplo).
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pspell_add_to_personal
Description
Exemplo 1. pspell_add_to_personal()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_check()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
pspell_clear_session
Description
Exemplo 1. pspell_add_to_personal()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_create()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_ignore()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_mode()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_personal()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_repl()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_config_runtogether()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_new_config()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_new()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_new_personal()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_add_to_personal()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_store_replacement()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. pspell_suggest()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
putenv
Description
Atenção
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
qdom_error
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
qdom_tree
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função retorna uma string de 8-bit correspondendo a string quoted-printable decodificada.
Esta função é similar a imap_qprint(), com a exceção de não requerer o módulo IMAP para funcionar.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma versão de str com uma barra invertida (\) entes de cada um destes caracteres:
Veja também addslashes(), htmlentities(), htmlspecialchars(), nl2br(), and stripslashes().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função converte number de radianos para graus.
Veja também deg2rad().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Se chamado sem os parâmetros opcionais min e max, rand() retornará um pseudo valor randômico entre 0 e RAND_MAX.
Se você precisa de um número aleatório entre 5 e 15 (inclusive), por exemplo, utilize rand (5, 15).
Em versões anteriores do PHP, você precisa semear o gerador de números aletórios primeiro com srand().
Desde o PHP 4.2.0, isto não é mais necesário.
Nota:
Em versões anteriores a 3.0.7, o significado do parâmetro max era range.
Assim, para obter os mesmos resultados do exemplo acima, você precisaria utilizar rand (5, 11) para obter um número aleatório entre 5 e 15.
Veja também srand(), getrandmax() e mt_rand().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
range
Descrição
range() retorna um array com elementos de low até high, com intervalo fechado.
Se low high, será de high até low.
Se o parâmetro step for especificado, será usado como o incremento entre os elementos da sequência. step deve ser um inteiro positivo.
Se não for especificado, step terá valor igual a 1.
Exemplos de range()
Nota:
Até a versão 4.1.0, a função range() só gerava arrays de inteiros em ordem crescente.
O parâmetro step foi adicionado na versão 5.0.0.
Simulando faixas decrescentes e sequências de caracteres
Veja shuffle() para outro exemplo de utilização dessa função.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. rawurlencode() example 1
Exemplo 2. rawurlencode() example 2
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o nome de arquivo do próximo arquivo do diretório.
Os nomes de arquivos ão retornados na ordem informada pelo sistema de arquivos.
Verifique cuidadosamente o estilo de checagem dos valores retornados por readdir() nos exemplos abaixo.
De outra forma, qualquer entrada de diretório que seja avaliada para FALSE irá parar o loop (por exemplo, um diretório nomeado "0").
Exemplo 1.
Lista todos os arquivos em um diretório
/ / Note que !== não existia antes do PHP 4.0.0-RC2 ?php if ($handle = opendir(' / path / to / files')) {echo "Manipulador de diretório: $handle\n"; echo "Arquivos:\n"; / * Esta é a forma correta de varrer o diretório * / while (false !== ($file = readdir($handle))) {echo "$file\n";} / * Esta é a forma INCORRETA de varrer o diretório * / while ($file = readdir($handle)) {echo "$file\n";} closedir($handle);}?
Note que readdir() irá retornar o. e...
Se você não quer estes simplesmente os retire:
Exemplo 2.
Listar todos os arquivos no diretório atual e retirar. e..
Veja também is_dir().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
readfile
Descrição
Lê um arquivo e escreve o seu conteúdo para o buffer de saída( output buffer).
Se um error ocorrer, retorna FALSE e ao menos que a função seja chamada como @readfile, uma mensagem de erro será impressa.
Dica:
Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.
Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.
Você pode usar o segundo parametro opcional e o setar para "1", se você quiser procurar o arquivo no include_path, também.
Veja também fpassthru(), file(), fopen(), include(), require(), virtual() e Apêndice I.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
readgzfile
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
readline_completion_function
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. readline()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
readlink() faz o mesmo que a função do C readlink e retorna os conteúdos do path do link simbólico ou 0 em caso de erro.
Veja também symlink(), readlink() e linkinfo().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
realpath() expande todos os links simbólicos e resolve referencias para '/. /', '/.. /' e extra caracteres '/' na entrada pelo path e retorna o path absoluto canonicalizado.
O path resultante não conterá nenhum link simbólico ou componentes '/. /' e '/.. /'.
realpath() retorna FALSE em caso de falha, por exemplo, se o caminho não existir.
Exemplo 1. exemplo de realpath()
Veja também: basename(), dirname() e pathinfo().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tenta renomear nomeantigo para novonome.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1.
Exemplo de rename()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
require()
A instrução require() inclui a avalia um arquivo específico.
Informações detalhadas de como essa inclusão funciona está descrita na documentação do include().
require() e include() são idênticos em todas as formas exceto pela manipulação de erros. include() produz um Warning enquanto require() produzirá um Fatal Error.
Em outras palavras, não hesite em utilizar require() se na falta de um arquivo quiser parar o processamento da página. include() não se comporta da mesma maneira, e o script poderá continuar nessa situação.
Em todo caso, vale a pena confirmar a configuração da diretiva include_path.
Exemplo 12-2.
Exemplos de require() s simples
Vaja a documentação de include() para mais exemplos.
Nota:
Até o PHP 4.0.2, havia o seguinte comportamento: require() mesmo que a linha onde ele está nunca seja executada.
É por isso que instruções condicionais não afetam require().
Entretanto, se a linha onde ocorre o require() não for executada, nada do código incluído do arquivo também será.
Similarmente, estruturas de loop não afetam o funcionamento do require().
A instrução require() apenas ocorre uma vez.
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Veja também: include(), require_once(), include_once(), eval(), file(), readfile(), virtual() e include_path.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
require_once()
A instrução require_once() incluí e avalia o arquivo especificado durante a execução do script.
Seu comportamento é similar ao da instrução require(), a não ser que o arquivo informado já tenha sido incluído, não refazendo a operação novamente.
Veja a documentação de require() para maiores informações sobre como essa instrução funciona.
require_once() pode ser utilizado nos casos em que o mesmo arquivo pode acabar sendo incluído mais de uma vez durante a execução de um script em particular, quando na verdade ele só pode ser incluído apenas uma, para evitar problemas com redefinições de funções, alterações nos valores de variáveis, etc.
Para exemplos de utilização de require_once() e include_once(), veja o código do PEAR incluído nas últimas distribuições do código fonte do PHP.
Nota:
Esteja avisado que o comportamento de require_once() e include_once() pode não ser o que você espera em um sistema operacional insensitivo ao caso (como o Windows).
Exemplo 12-8. require_once() é sensitivo ao caso
require_once( "a.php"); / / isto irá incluir a.php require_once("A.php"); / / isto irá incluir a.php de novo no Windows!
Atenção
A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.
Veja também: require(), include(), include_once(), get_required_files(), get_included_files(), readfile() e virtual().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
reset() retrocede o ponteiro interno de array para o primeiro elemento.
reset() retorna o valor do primeiro elemento do array.
Veja também current(), each(), next(), e prev().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 12.
Próxima
return
Se chamada em uma função, a instrução return() termina imediatamente a execução da função atual e retorna seu argumento como o valor da função. return() também termina a execução de uma instrução eval() ou de um script.
Se chamada no escopo global, a execução do script atual será terminada.
Se o arquivo do script atual foi incluído com include() ou require(), então a execução é devolvida para o arquivo chamador.
Especificamente para arquivos de script incluídos com include(), o valor fornecido para return() será devolvido como o valor da chamada include().
Se return() for chamado do arquivo de script principal, então o programa pára.
Se o arquivo de script atual é o configurado em auto_prepend_file ou auto_append_file do arquivo de configuração, então a execução desses scripts é finalizada.
Para maiores informações, veja Retornando Valores.
Nota:
Note que return() é um construtor de linguagem e não uma função, e parênteses em volta do seus argumentos não são necessários - - de fato, é mais comum não colocá-los que usá-los, sem, entretanto, haver diferença de um jeito ou de outro.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Reinicia o stream do diretório indicado por dir_handle para o início do diretório.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Muda o indicador de ponteiro de arquivo fp para o início do stream do arquivo.
Em sucesso, retorna 1.
O ponteiro de arquivo tem que ser válido e tem que apontar para um arquivo aberto com sucesso por fopen().
Nota:
Se voc6e abriu um arquivo no modo acréscimo (append - "a"), qualque dado que escrever no arquivo será sempre anexado no final, não importando a posição do ponteiro.
Veja também fseek() e ftell().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tenta remover o diretório com o nome de nomedodir.
O diretório tem que estar vazio e as permissões relevantes autorizarem a esta operação.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também mkdir() e unlink().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retornar um valor arredondado de val em precision casas decimais. precision pode ser negativo ou zero (default).
Cuidado
O PHP não manipula strings como "12,300.2" corretamente por padrão.
Veja convertendo de strings.
Nota:
O parâmetro precision foi acrescentado no PHP 4.
Veja também ceil() e floor().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função ordena um array em ordem descrescente (do maior para o menor).
Exemplo de rsort()
$frutas = array ("limao", "laranja", "banana", "melancia"); rsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "$chave = $valor\n";}
Esse exemplo mostraria:
0 = melancia 1 = limao 2 = laranja 3 = banana
As frutas foram ordenadas em ordem alfabética decrescente.
Você pode alterar o comportamento da ordenação utilizando o parâmetro opcional sort_flags, para mais detalhes veja sort().
Veja também arsort(), asort(), ksort(), sort() e usort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
rtrim
Nota:
O Segundo parâmetro foi adicionado no PHP 4.1.0
Esta função retorna a string como os espaços em branco retirados do final de str.
Sem o segundo parâmetro, rtrim() irá retirar os seguintes caracteres:
"" (ASCII 32 (0x20)), um espaço comum.
"\t" (ASCII 9 (0x09)), uma tabulação.
"\n" (ASCII 10 (0x0A)), uma nova linha.
"\r" (ASCII 13 (0x0D)), um retorno de carro(ENTER).
"\0" (ASCII 0 (0x00)), o byte NULL.
Você também pode especificar os caracteres que você deseja retirar, pelo parâmetro charlist.
Simplesmente liste todos os caracteres que você quer ver retirados.
Com.. você pode especificar um intervalo de caracteres.
Exemplo 1.
Exemplo de uso da função rtrim()
?php $text = "\t\tThese are a few words:)..."; $trimmed = rtrim($text); / / $trimmed = "\t\tThese are a few words:)... "$trimmed = rtrim($text," \t ."); / / $trimmed = "\t\tThese are a few words:) "$clean = rtrim($binary ,"\0x00..\0x1F"); / / retira os caracteres de controle ASCII ao final de $binary / / (de 0 até 31 inclusive)?
Veja também trim() e ltrim().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 13.
Próxima
Argumentos de funções
Informações podem ser passadas para funções através da lista de argumentos, que é uma lista de variáveis e / ou constantes delimitados por vírgulas.
O PHP suporta a passagem de argumentos por valor (o padrão), passagem por referência e valores padrão de argumento.
Listas de argumentos de comprimento variável são suportadas apenas no PHP4 e posterior; veja Número de argumentos variável e as referências das funções func_num_args(), func_get_arg() e func_get_args() para mais informações.
Um efeito similar pode ser atingido no PHP 3 pela passagem de um array de argumentos para uma função:
Fazendo argumentos serem passados por referência
Por padrão, argumentos de função são passados por valor (de forma que se você mudar o valor do parâmetro dentro da função, ele não é alterado fora da função).
Se você deseja permitir que uma função modifique seus argumentos, você precisa passá-los por referência.
Se você quer que um argumento para uma função sempre seja passado por referência, você pode preceder o nome do argumento com um "e comercial" () na definição da função:
Valores padrão de argumentos
Uma função pode definir valores padrão no estilo C+ + para argumentos escalares, como a seguir:
function cafeteira ($tipo = "cappuccino") {return "Fazendo uma xícara de café $type.\n";} echo cafeteira (); echo cafeteira ("expresso");
A saída do código acima será:
Fazendo uma xícara de café cappucino.
Fazendo uma xícara de café expresso.
O valor padrão precisa ser uma expressão constante, não (por exemplo) uma variável ou um membro de classe.
Note que usando argumentos padrão, qualquer padrão deve vir após os argumentos sem padrão: caso contrário, as coisas não funcionarão como esperado.
Considere o seguinte trecho de código:
function iogurtera ($tipo = "azeda", $sabor) {return "Fazendo uma taça de $tipo $sabor.\n";} echo iogurtera ("framboesa"); / / não funciona como esperado
A saída do exemplo acima é:
Missing argument 2 in call to iogurtera() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Fazendo uma taça de framboesa.
Agora, compare o que está acima com este:
function iogurtera ($sabor, $tipo = "azeda") {return "Fazendo uma taça de $tipo $sabor.\n";} echo iogurtera ("framboesa"); / / funciona
A saída deste exemplo é:
Número variável de argumentos
O PHP4 tem suporte para um número variável de argumentos nas funções definidas pelo usuário.
Isto é realmente bem fácil, usando as funções func_num_args(), func_get_arg() e func_get_args().
Nenhuma sintaxe especial é requerida, e a lista de argumentos ainda pode ser fornecida explicitamente com as definições de funções e se comportarão normalmente.
Anterior
Principal
Próxima
Funções
Acima
Retornando valores
Manual do PHP
Anterior
Próxima
sem_acquire
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sem_release
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sem_remove
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. serialize() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_affected_rows
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_commit
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_disconnect
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_execimm
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_field_array
Description
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_rollback
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sesam_settransaction
Description
Tabela 1.
Tabela 2.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manejo de sessões
Anterior
Próxima
session_cache_expire
Descrição
Se new_cache_expire for dado, o prazo do cache atual é substituído com new_cache_expire.
Anterior
Principal
Próxima
Manejo de sessões
Acima
Anterior
Próxima
session_cache_limiter
Descrição
session_cache_limiter() retorna o nome do atual limitador do cache.
Se o cache_limiter está especificado, o nome do limitador do cache atual é mudado para o novo valor.
Estes headers determinam pelas quais o conteúdo da página pode ser guardado no cache.
Definindo o limitador do cache para nocache, por exemplo, rejeitaria qualquer armazenamento no cache do cliente.
Ele também poderia ser definido como private, que é um pouco mais restritivo do que public.
No modo private, Header expirado enviado para o cliente, pode provocar confusão para alguns para alguns navegadores incluindo o Mozilla.
Header expirado nunca é enviado para o cliente nesse modo.
Assim, você precisa chamar session_cache_limiter() para cada pedido (e antes session_start() é chamada).
Exemplo 1. session_cache_limiter() exemplos
?php # Defini o limitador do cache para 'private' session_cache_limiter('private'); $cache_limiter = session_cache_limiter(); echo "o limitador do cache est aacute; definido agora para $cache_limiter p ";?
Anterior
Próxima
Acima
Anterior
Próxima
session_decode
Descrição
session_decode() decifra dado de sessão em data, definindo variáveis guardadas na sessão.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_destroy() destrói tudo dos dados associados com a sessão corrente.
Ela não elimina nenhuma das variáveis globais associadas com a sessão, e nem o cookie de sessão.
Esta função retorna TRUE caso funcione e FALSE caso falhe para destruição dos dados da sessão.
Exemplo 1.
Destruindo uma sessão
?php / / Inicializa uma sess atilde; o. / / Se voc ecirc; est aacute; usando session_name("something"), n atilde;o esque ccedil;a! session_start(); / / Eliminar todas as vari aacute;veis de sess atilde;o. session_unset(); / / Finalmente, destrui ccedil; atilde;o da sess atilde;o. session_destroy();?
Exemplo 2.
Destruindo uma sessão com $_SESSION
?php / / Inicializa uma sess atilde; o. / / Se voc ecirc; est aacute; usando session_name("something"), n atilde;o esque ccedil;a! session_start(); / / Eliminar todas as vari aacute;veis de sess atilde;o. $_SESSION = array(); / / Finalmente, destrui ccedil; atilde;o da sess atilde;o. session_destroy();?
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_encode
Descrição
session_encode() retorna uma string com o conteúdo da sessão corrente codificado em seu interior.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_get_cookie_params
Descrição
A função session_get_cookie_params() retorna uma matriz com informação do cookie da sessão atual, a matriz contém os seguintes items:
"lifetime" - A duração do cookie.
"path" - O caminho onde a informação está guardada.
"domain" - O domínio do cookie.
"secure" - O cookie seria enviado apenas sobre conexões seguras. (Este item foi incluído no PHP 4.0.4.)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_id() retorna a id de sessão para a sessão atual.
Se id está especificado, irá trocar a id da sessão atual. session_id() necessita ser chamada antes de session_start() para esse propósito.
Dependendo do session handler, nem todos os caracteres serão permitidos dentro da id de sessão.
Por exemplo, o arquivo session handler permite apenas caracteres do intervalo a-z, A-Z e 0-9!
A constante SID também pode ser usada para devolver o nome e a id de sessão atual como uma string combinada para adicionar nas URLs.
Note que SID está apenas definido se o cliente não enviou o cookie correto.
Veja também Session handling.
Veja também session_start().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_is_registered() retorna TRUE se há uma variável com o nome name registrada na sessão atual.
Nota:
Se $_SESSION (ou $HTTP_SESSION_VARS para PHP 4.0.6 ou inferior) é usada, use isset() para checar se uma variável está registrada em $_SESSION.
Cuidado
Se você está usando $_SESSION (ou $HTTP_SESSION_VARS), não utilize session_register(), session_is_registered() e session_unregister().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_module_name() retorna o nome do módulo da sessão atual.
Se module está especificado, o nome será trocado.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_name
Descrição
session_name() retorna o nome da sessão atual.
Se name está especificado, o nome da sessão atual é mudado para esse valor.
O nome da sessão é retomado para o valor padrão guardado em session.name no pedido na hora de inicialização.
Exemplo 1. session_name() exemplos
?php / / defina o nome da sess atilde; o para WebsiteID $previous_name = session_name("WebsiteID"); echo "O nome da sess atilde;o anterior era $previous_name p ";?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ler num dado de sessão sem fechar o dado da sessão.
Mudar o dado da sessão é impossível, mas a performance do frameset será melhorada.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_register
Descrição
session_register() aceita um número de argumentos variáveis, algund deles podem ser ou uma string com o nome da variável ou uma matriz de nomes de variáveis ou outras matrizes.
Para cada nome, session_register() registra a variável global com o nome na sessão atual.
Cuidado
Esta registra uma variável global.
Se você quer registrar uma variável de sessão de dentro de uma função, você precisa definir ela como global() ou usar as matrizes de sessão como mostradas abaixo.
Cuidado
Se você está usando $_SESSION (ou $HTTP_SESSION_VARS), não utilize session_register(), session_is_registered() e session_unregister().
Esta função retorna TRUE quando todas de suas variáveis são registradas sem erro.
Se session_start() não foi chamada antes desta função ser chamada, uma chamada implícita para session_start() sem parâmetros será feita.
Você também pode criar variáveis de sessão simplesmente definindo o membro apropriado de $_SESSION ou $HTTP_SESSION_VARS (PHP 4.1.0) matriz.
$barney = "Um grande dinossauro p uacute;rpura ."; session_register("barney"); $_SESSION["zim"] = "Um invasor de outro planeta ."; # The old way was to use $HTTP_SESSION_VARS $HTTP_SESSION_VARS["spongebob"] = "Ele conseguiu cal ccedil;as ajustadas .";
Nota:
Não é possível registrar correntemente variáveis resource numa sessão.
Por exemplo, você não pode criar uma conexão para um banco de dados e guardar a id de conexão como uma variável de sessão e esperar que a conexão ainda esteja válida na próxima vez que a sessão estiver restaurada.
Funções do PHP que retornam uma resource são identificadas por conterem um retorno do tipo resource em suas definições de função.
Uma lista de funções que retornam resources estão disponíveis em tipos resources appendix.
Se $_SESSION (ou $HTTP_SESSION_VARS para PHP 4.0.6 ou inferior) é usada, para variável definida variable com $_SESSION. i.e. $_SESSION['var'] = 'ABC';
Veja também session_is_registered() eS session_unregister().
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_save_path
Descrição
session_save_path() retorna o path do diretório atual usado para salvar os dados de sessão.
Se path está especificado, o path para aqueles dados que estão salvo será mudado.
Por exemplo, em Linux, reiserfs pode oferecer uma performance melhor do que ext2fs.
Anterior
Principal
Próxima
Acima
Anterior
Próxima
session_set_cookie_params
Descrição
Define os parâmetros de cookie definidos no arquivo php.ini.
O efeito desta função apenas continua até a duração do script.
O parâmetro secure foi adicionado no PHP 4.0.4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_set_save_handler() session_set_save_handler() define a sequência de funções de armazenamento que é usada para guardar e devolver dados associados à sessão.
Esta é mais usual quando um quando um método de armazenamento, a não ser que aquele oferecido por sessões do PHP seja preferível. i.e.
Guardar dados de sessão em um banco de dados local.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Você deve definir as opções de configuração session.save_handler para user em seu arquivo php.ini para session_set_save_handler() funcionar.
A função "write" handler não é executada até depois que o fluxo de saída esteja fechado.
Se a saída debugging é necessária, ao invés disso é sugerido que a saída debug seja escrita para um arquivo.
Nota:
A função "write" handler não é executada se a sessão não contém dados; isto se aplica sempre se variáveis de sessão vazias são registradas.
Esta difere à sessão padrão de save handler baseado em arquivos, que cria arquivos de sessão vazios.
O seguinte exemplo oferece um aramzenamento de sessão baseado em arquivos similar a sessões de PHP padrões save handler files.
Este exemplo poderia facilmente ser extendido para outras bases de dados usando seu gerente de banco de dados favorito suportado pelo PHP.
A função "Read" deve retornar um valor string sempre que fizer o save handler trabalhar como o esperado.
Retorna uma string vazia se não existe dados para ler.
Retorna valores de outros handlers que estejam convertidos para expressões booleanas.
TRUE em sucesso, FALSE em falha.
Exemplo 1. session_set_save_handler() exemplo
?php function open ($save_path, $session_name) {global $sess_save_path, $sess_session_name; $sess_save_path = $save_path; $sess_session_name = $session_name; return(true);} function close() {return(true);} function read ($id) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; if ($fp = @fopen($sess_file, "r")) {$sess_data = fread($fp, filesize($sess_file)); return($sess_data);} else {return(""); / / Deve retornar "" aqui.}} function write ($id, $sess_data) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; if ($fp = @fopen($sess_file, "w")) {return(fwrite($fp, $sess_data));} else {return(false);}} function destroy ($id) {global $sess_save_path, $sess_session_name; $sess_file = "$sess_save_path / sess_$id"; return(@unlink($sess_file));} / ************************************************ * AVISO - voc ecirc; precisa implementar alguns tipos* * de rotinas de garbage collection aqui. * ************************************************ / function gc ($maxlifetime) {return true;} session_set_save_handler ("open", "close", "read", "write", "destroy", "gc"); session_start(); / / Use o resto da sess atilde ;o normalmente?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_start() cria uma sessão (ou resume a sessão atual baseada numa id de sessão sendo passada via uma variável GET ou um cookie).
Se você quer usar uma sessão nomeada, você deve chamar session_name() antes de chamar session_start().
Esta função sempre retorna TRUE.
Nota:
Se você está usando sessões baseadas em cookie, você deve chamar session_start() antes de qualquer coisa ser exibida para o navegador.
session_start() irá registrar um handler de saída interno para URL reescrevendo quando trans-sid está habilitada.
Se um usuário utiliza ob_gzhandler ou ob_start(), a ordem do handler de exibição é importante para a exibição apropriada.
Por exemplo, usuário deve registrar ob_gzhandler antes da sessão começar.
Nota:
Uso de zlib.output_compression é mais recomendado do que ob_gzhandler
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_unregister
Descrição
session_unregister() desregistra (esquece) a variável global nomeada name da sessão atual.
Nota:
Cuidado
Esta função não elimina a variável global correspondente por name, ela apenas evita que a variável faça parte da sessão.
Você deve chamar unset() para eliminar a variável global correspondente.
Cuidado
Se você está usando $_SESSION (ou $HTTP_SESSION_VARS), não use session_register(), session_is_registered() e session_unregister().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Descrição
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
session_write_close
Descrição
Os dados de sessão sã geralmente guardados depois que o script termina sem a necessidade de chamar session_write_close(), mas como dados de sessão são trancados para evitar escritas concorrentes, apenas um script pode operar em uma sessão de cada vez.
Quando usando framesets junto com sessões você irá experimentar os frames sendo lidos um a um devido a esta trava.
Você pode reduzir o tempo necessário para ler todos os frames terminando a sessão tão logo todas as mudanças das variáveis de sessão estejam feitas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. setcookie() parameters explained
Nota:
Exemplo 1. setcookie() send examples
Exemplo 2. setcookie() delete examples
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
set_error_handler
Description
Nota:
Nota:
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
set_file_buffer - - Sinônimo de stream_set_write_buffer()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Exemplo 1. setlocale() Examples
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
set_time_limit
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
settype
Description
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. settype() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Calcula a hash sha1 de nomedoarquivo usando US Secure Hash Algorithm 1, e retorna esta hash.
A hash é um número hexadecimal de 40 caracteres.
Em caso de falha é retornado FALSE.
Veja também sha1(), crc32(), e md5_file()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Calcula a hash sha1 de str usando US Secure Hash Algorithm 1, e retorna esta hash.
A hash é um número hexadecimal de 40 caracteres.
Veja também sha1_file(), crc32(), e md5()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shmop_close
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shmop_delete
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shmop_open
Description
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shmop_read
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shmop_write
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
shm_remove
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função é um apelido para highlight_file().
Para maiores informações veja a documentação lá.
Veja também highlight_string() e highlight_file().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Capítulo 13.
Funções
Funções definidas pelo usuário
Uma função pode ser definida usando-se a sintaxe como a seguinte:
function foo ($argumento_1, $argumento_2,..., $argumento_n) {echo "Exemplo de função.\n"; return $valor_retornado;}
Qualquer código PHP válido pode aparecer dentro de uma função, mesmo outras funções e definições de classes.
No PHP3, as funções precisam ser definidas antes de serem referenciadas.
Esse requisito não existe no PHP4.
O PHP não suporta sobrecarga de funções, e também não é possível cancelar ou alterar a definição de funções previamente declaradas.
O PHP3 não suporta número variável de argumentos para funções, apesar de os argumentos padrões serem suportados (veja Valores padrão de argumentos para mais informações).
O PHP4 suporta ambos: veja Número de argumentos variável e as referências das funções func_num_args(), func_get_arg() e func_get_args() para mais informações.
Anterior
Principal
Próxima
Acima
Argumentos de funções
Manual do PHP
Anterior
Próxima
Essa função mistura de forma aleatória os elementos de um array.
Você deve usar essa função em conjunto com srand().
Exemplo de shuffle()
$numeros = range (1,20); srand ((float)microtime()*1000000); shuffle ($numeros); while (list (, $numero) = each ($numeros)) {echo "$numero ";}
Veja também arsort(), asort(), ksort(), rsort(), sort() e usort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o seno hiperbólico de arg, definido como (exp(arg) - exp(-arg)) / 2.
Veja também sin(), asinh(), cos() e tan().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sin
Descrição
sin() retorna o seno do parâmetro arg.
?php / / Precisão depende da diretiva precision print sin( deg2rad(60)); / / 0.866025403... print sin(60); / / -0.304810621...?
Veja também asin(), cos(), tan() e deg2rad().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função sizeof() é um alias para count().
Veja também count().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função sleep() atrasa a execução do programa de acordo com a quantidade de segundos dados no parâmetro seconds.
Veja também usleep() e set_time_limit()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
snmp_set_quick_print
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_accept
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_bind
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_clear_error
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_close
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_connect
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Tabela 2.
Tabela 3.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_create_listen
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_create_pair
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_get_option
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_getpeername
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_getsockname
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_get_status - - Alias of stream_get_meta_data().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_add
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_alloc
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_delete
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_fetch
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_free
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_iovec_set
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_last_error
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_listen
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_read
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_readv
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_recvfrom
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_recv
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_recvmsg
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_select
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_send
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_sendmsg
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_sendto
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_set_blocking - - Alias for stream_set_blocking()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_set_nonblock
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_set_option
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_set_timeout - - Alias for stream_set_timeout()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_shutdown
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_strerror
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. socket_strerror() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_write
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
socket_writev
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 13.
Próxima
old_function
O comando old_function permite que você declare uma função usando uma sintaxe idêntica ao PHP / FI2 (exceto pelo fato de que você precisa substituir 'function 'com 'old_function').
Esta é uma implementação obsoleta, e deve ser usada somente pelo conversor PHP / FI2 - PHP3.
Atenção
Funções declaradas como old_function não podem ser chamadas a partir de código interno do PHP.
Entre outras coisas, isso significa que você não pode usá-las em funções como usort(), array_walk() e register_shutdown_function().
Você pode contornar essa limitação escrevendo um invólucro de função (no formato PHP3 normal) para chamar o old_function.
Anterior
Principal
Próxima
Retornando valores
Acima
Funções variáveis
Manual do PHP
Anterior
Próxima
sort
Descrição
Os elementos serão ordenados do menor para o maior ao final da execução dessa função.
Exemplo de sort()
?php $frutas = array ("limao", "laranja", "banana", "melancia"); sort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo "frutas[".$chave ."] = ".$valor ."\n";}?
A saída desse programa seria:
fruits[ 0] = banana fruits[1] = laranja fruits[2] = limao fruits[3] = melancia
As frutas foram classificadas em ordem alfabética.
O segundo argumento opcional sort_flags pode ser usado para modificar o comportamento da ordenação podendo receber os seguintes valores:
Sinais de tipo de ordenação:
SORT_REGULAR - compara os itens normalmente
SORT_NUMERIC - compara os itens como valores numéricos
SORT_STRING - compara os itens como strings
Veja também arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort() e uksort().
Nota:
O segundo parâmetro foi adicionado a partir do PHP 4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
soundex
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. split() Example
Nota:
Exemplo 2. split() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sprintf
Description
Exemplo 1.
Exemplo 2.
Exemplo 3.
Exemplo 4.
Examples
Exemplo 5. sprintf(): zero-padded integers
Exemplo 6. sprintf(): formatting currency
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. sql_regcase() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sqrt
Descrição
?php / / Precisão depende de sua diretiva precision echo sqrt( 9); / / 3 echo sqrt(10); / / 3.16227766...?
Veja também pow().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
srand
Descrição
/ / semeira com microsegundos function make_seed() {list($usec, $sec) = explode( '', microtime()); return (float) $sec + ((float) $usec * 100000);} srand(make_seed()); $randval = rand();
Nota:
Desde o PHP 4.2.0 não é mais necessário semear o gerador de números aleatórios antes de utilizá-lo.
Veja também rand(), getrandmax() e mt_srand().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 13.
Próxima
Retornando valores
Valores podem ser retornados utilizando a instrução opcional return.
Qualquer tipo pode ser retornado, incluindo arrays e objetos.
Isto faz com que as função termine sua execução imediatamente e passa o controle de volta para a linha de onde ela foi chamada.
Veja a documentação da função return() para maiores informações.
function quadrado ($num) {return $num * $num;} echo quadrado (4); / / imprime '16 '.
Você não pode retornar múltiplos valores a partir de uma função, mas resultados similares podem ser devolvidos retornando por uma lista.
function numeros_pequenos() {return array (0, 1, 2);} list ($zero, $um, $dois) = numeros_pequenos();
Para retornar uma referência de uma função, você precisa utilizar o operador de referência tanto na declaração da função como quando assimilando o valor retornado para a variável.
function retorna_referencia() {return $alguma_referencia;} $nova_referencia = retorna_referencia();
Para mais detalhes sobre referências, leia a seção Referências.
Anterior
Principal
Próxima
Argumentos de funções
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. sscanf() Example
Exemplo 2. sscanf() - using optional parameters
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Pegar estatísticas sobre o arquivo com o nome de nomedoarquivo.
Retorna um array com as estatísticas do arquivo com os seguintes elementos:
número de links
user id owner
tamanho em bytes
Retorna FALSE em caso de erro.
stat() não pode ser utilizado em arquivos remotos.
Os resultados desta função são guardados em cache.
Veja clearstatcache() para mais detalhes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strcasecmp() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função é um apelido para strstr(), e é idêndica de todos os meios.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna 0 se str1 é menor do que str2; 0 se str1 é maior do que str2, e 0 se forem iguais.
Note que esta função diferencia maiúsculas e minúsculas.
Veja também ereg(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), e strstr().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna 0 se str1 é menor do que str2; 0 se str1 é maior do que str2, e 0 se forem iguais. strcoll() usa o local atual para fazer as comparações.
Se o local atual for C ou POSIX, esta função é equivalente à strcmp().
Note que esta função diferencia maiúsculas e minúsculas, e diferentemente de strcmp() esta função não é segura para binário.
Veja também ereg(), strcmp(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), strstr(), e setlocale().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o tamanho do segmento inicial de str1 que não contém nenhum dos caracteres em str2.
Veja também strspn().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
stream_filter_append
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
stream_filter_prepend
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
stream_get_meta_data
Description
See Apêndice I for more information about wrappers.
See Apêndice I for more information about wrappers and their wrapper data.
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. stream_set_timeout() Example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
stream_set_write_buffer
Description
Exemplo 1. stream_set_write_buffer() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
strftime
Descrição
Retorna uma string formatada de acordo com o formato dado em timestamp ou o horário corrente se nenhum timestamp é dado.
Nomes de mês e dia da semana e outras strings dependentes de linguagens respeitam o a localidade definida com setlocale().
As seguintes conversões especificadoras são conhecidas no formato de string:
%a - dia da semana abreviado de acordo com a localidade
%A - nome da semana completo de acordo com a localidade
%b - nome do mês abreviado de acordo com a localidade
%B - nome do mês completo de acordo com a localidade
%c - representação da data e hora preferida para a localidade
%C - número do século (o ano dividido por 100 e truncado para um inteiro, de 00 até 99)
%d - dia do mês como um número decimal (de 01 até 31)
%D - mesmo que %m / %d / %y
%e - dia do mês como um número decimal, um simples dígito é precedido por espaço (de '1' até '31')
%g - como %G, mas sem o século.
%G - o 4-dígito do ano correspodendo as ISO week number (see %V).
Este tem o mesmo formato e valor que %Y, exceto que se o ISO week number pertence ao prévio ou próximo ano, aquele ano é usado ao invés deste.
%h - mesmo que %b
%H - hora como um número decimal usando um relógio de 24-horas (de 00 até 23)
%I - hora como um número decimal usando um relógio de 12-hoas (de 01 até 12)
%j - dia do ano como número decimal (de 001 até 366)
%M - minuto como número decimal
%n - caracter novalinha
%p - um dos dois `am' ou `pm 'de acordo com o valor da hora dada, ou as strings correspondentes para a localidade
%r - hora em a.m. e p.m. notação
%R - hora em notação de 24 horas
%S - segundo como um número decimal
%t - caracter tab
%T - hora corrente, igual a %H:%M:%S
%u - dia da semana como número decimal [1,7], com 1 representando Segunda-feira
Atenção
Sun Solaris parece iniciar o Domingo como 1 embora ISO 9889:1999 (o padrão C corrente) claramente especificados que ele poderia ser segunda-feira.
%U - dia da semana do ano corrente como número decimal, começando com o primeiro domingo como o primeiro dia da primeira semana
%V - \O número da semana corrente ISO 8601:1988 do ano corrente como um número decimal, de 01 até 53, onde semana 1 é a primeira semana que tem pelo menos 4 dias no ano corrente, e com segunda-feira como o primeiro dia da semana. (Use %G ou %g para o componente anual que corresponde ao dia da semana para o para o timestamp especificado.)
%W - dia da semana do ano corrente como número decimal, começando com o a segunda-feira como o primeiro dia da primera semana
%w - dia da semana como número decimal, domingo sendo 0
%X - representação preferida para a hora para a localidade corrente sem a data
%Y - ano como número decimal incluindo o século
%Z - time zone ou nome or abreviação
Nota:
Exemplo 1. strftime() exemplo
Veja também setlocale() e mktime() e a Open Group specification de strftime().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
stripcslashes
Descrição
Reconhece estilo C \n, \r..., representação octal e hexadecimal.
Veja também addcslashes().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna uma string com as barras invertidas retiradas. (\ 'se torna' e assim por diante.) Barras invertidas duplas se tornam barras invertidas simples.
Veja também addslashes().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Esta função tenta retornar uma string retirando todas as tags HTML e PHP de str.
Ele erra no lado de ter cuidado no caso de tags com problemas ou incompletas.
Usa o mesmo sistema para retirar as tags do que fgetss().
Você pode utilizar o segundo parâmetro, que é opcional, para indicar tags que não devam ser retiradas.
Exemplo strip_tags()
Atenção
Esta função não modifica nenhum dos atributos das tags que você permitiu usando allowable_tags, incluindo os atributos style e onmouseover que um usuário travesso pode abusar quando colocar texto a ser mostrado para os outros usuários.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna o tamanho de string.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. str_pad() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strrchr() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. str_repeat() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. str_replace() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
strrev
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
str_shuffle
Description
Exemplo 1. str_shuffle() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. strstr() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strtok() example
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strtolower() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função espera que seja dado uma string contendo um formato de data em inglês e tentará analisar esse formato dentro de um timestamp Unix relativo ao timestamp dado em now, ou a hora atual se nada é fornecido.
Se fracassa, -1 é retornado.
Porque strtotime() comporta-se de acordo com a sintaxe de data GNU, procure na página do manual GNU Date Input Formats.
Lá está descrito a sintaxe válida para o parâmetro time.
Exemplo 1. strtotime() exemplos
Exemplo 2.
Checando por fracasso
Nota:
A linha de um timestamp válido é basicamente Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estes são os dados que correspondem aos valores máximos e mínimos para um inteiro de 32-bit.)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strtoupper() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. strtr() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
strval
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
str_word_count
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. substr_count() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. substr_replace() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 13.
Funções
Próxima
Funções variáveis
O PHP suporta o conceito de funções variáveis.
Entre outras coisas, isto pode ser usado para implementar callbacks, tabelas de função e assim por diante.
Funções variáveis não funcionam com construtores de linguagem como echo(), unset(), isset(), empty(), include() ou print().
Exemplo 13-1.
Exemplo de funções variáveis
Veja também:
Variáveis variáveis e function_exists().
Anterior
Principal
Próxima
Acima
Classes e Objetos
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFAction
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfaction() example
Exemplo 2. swfaction() example
Exemplo 3. swfaction() example
Exemplo 4. swfaction() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. swf_addbuttonrecord() function example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFBitmap
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Nota:
Exemplo 1.
Exemplo 2. swfbitmap() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFbutton
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfbutton() example
Exemplo 2. swfbutton - addaction() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
swfbutton_keypress
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - addColor
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - moveTo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - multColor
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfdisplayitem - multcolor() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - remove
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - Rotate
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - rotateTo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfdisplayitem - rotateto() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - scaleTo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - setDepth
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - setName
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - setRatio
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfdisplayitem - setname() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - skewXTo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFDisplayItem - skewYTo
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFFont
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFGradient
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfgradient() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFMorph
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfmorph() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFMovie
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFMovie - setbackground
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFMovie - setdimension
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfmovie - streammp3() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfshape - addfill() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFShape
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfshape() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfshape - setline() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFShape - setRightFill
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFSprite
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swfsprite() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
swf_startsymbol
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - addstring
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Funções de Miscelânea
Manual do PHP
Anterior
Próxima
SWFTextField - setbounds
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setcolor
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setHeight
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setindentation
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setLeftMargin
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setLineSpacing
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setMargins
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFTextField - setrightMargin
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SWFText
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Exemplo 1. swftext() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função é EXPERIMENTAL.
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_affected_rows
Retorna: o número de linhas afetadas pela última consulta.
sybase_affected_rows() retorna o número de linhas afetadas pelo último INSERT, UPDATE ou DELETE no servidor associado com o identificador de recurso especificado.
Se o identificador de recurso não for especificado a última conexão aberta é utilizada.
Este comando não tem efeito em consultas SELECT; apenas em consultas que modificam registros.
Para recuperar o número de linhas retornadas por um SELECT, utilize sybase_num_rows().
Nota:
Esta funcão está disponível apenas utilizando-se a biblioteca de interface CT para o Sybase e não disponível para a biblioteca DB.
Anterior
Principal
Próxima
Funções Sybase
Acima
Manual do PHP
Anterior
Próxima
sybase_close
Retorna:
sybase_close() fecha a conexão com um banco de dados Sybase, o qual está associado ao identificador de recurso especificado.
Se o identificador de recurso não for especificado, a última conexão aberta é utilizada.
Note que isto não é normalmente necessário, já que as conexões não-persistentes abertas não automaticamente são fechadas ao final da execução do script.
sybase_close() não fechará conexões persistentes geradas pelo sybase_pconnect().
Veja também: sybase_connect(), sybase_pconnect().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_connect
Retorna: um identificador de recurso Sybase positivo em caso de sucesso ou um FALSE em caso de falha.
sybase_connect() estabelece uma conexão com um servidor Sybase.
O argumento servername tem que ser um nome de servidor que é definido no arquivo 'interfaces'.
Ao invés disto, o identificador de recurso do recurso já aberto será retornado.
O recurso com o servidor será fechado tão logo a execução do script termine, a não ser que ele seja fechado anteriormente ao se chamar explicitamente o sybase_close().
Veja também sybase_pconnect(), sybase_close().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_data_seek
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_fetch_array
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_fetch_field
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_fetch_object
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_fetch_row
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_field_seek
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_pconnect
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_result
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
sybase_select_db
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
symlink() cria um link simbólico do alvo existente com o nome especificado em link.
Veja também link() para criar hard links, e readlink() junto com linkinfo().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1. syslog() Priorities (in descending order)
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a tangente hiperbólica de arg, definida como sinh( arg) / cosh(arg).
Veja também tan(), atanh(), sin() e cos().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
tan() retorna a tangente do parâmetro arg.
O argumento arg deve estar em radianos.
Veja também atan(), sin(), cos() e deg2rad().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
tempnam
Descrição
Cria um nome de arquivo temporário único no diretório especificado.
Retorna o nome gerado.
No Windows a váriavel de ambiente do sistema TMP irá sobreescrever o parâmetro dir; no Linux a váriavel de ambiente TMPDIR tem precedência, enquanto SVR4 irá sempre usar o parâmetro dir se o diretório para o qual ele aponta existe.
Consulte a documentação do seu sistema para a função tempnam( 3) na dúvida.
Retorna o nome do novo arquivo temporário, ou a string FALSE string em caso de erro.
Exemplo 1. exemplo de tempnam()
$tmpfname = tempnam ("/ tmp", "FOO"); $fp = fopen($tmpfname, "w"); fwrite($fp, "writing to tempfile"); fclose($fp); / / fazer alguma coisa unlink($tmpfname);
Nota:
O comportamento desta função mudou na versão 4.0.3.
O arquivo temporário é também criado para evitar uma condição de corrida (race) onde o arquivo pode aparecer no filesystem entre o tempo que a string foi gerada e antes que o script tem tempo para criar o arquivo.
Note que você precisa remover o arquivo caso não vá mais utilizá-lo, pois isso não é feito automaticamente.
Veja também tmpfile() e unlink().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Retorna a hora atual medida no número de segundos desde a Era Unix (January 1 1970 00:00:00 GMT).
Veja também date().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Cria um arquivo temporário com um nome único em modo de gravação, retornando o handle do arquivo em modo similar ao retornado por fopen().
O arquivo é automáticamente apagado quando fechado (usando fclose()), ou quando o script acaba.
Para detalhes consulte a documentação do seu sistem na função tmpfile( 3), assim como o header stdio.h.
Exemplo 1. exemplo de tmpfile()
$temp = tmpfile(); fwrite($temp, "escrevendo no arquivo temporario"); fclose($temp); / / isto remove o arquivo
Veja também tempnam().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
token_get_all
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
token_name
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Funções URL
Manual do PHP
Anterior
Próxima
Tenta mudar o tempo de acesso e modificação do arquivo filename para o valor informado em time.
Se a opção time não é informada, o hora atual será usado.
Isto é o equivalente ao que comando (Unix) utime faz.
Se a terceira opção atime for passada, o tempo de acesso do arquivo informado será modificado para o valor de atime.
Note que a data / hora do último acesso do arquivo sempre é alterado, independentemente do número de parâmetros.
Se o arquivo não existe, ele é criado.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Exemplo 1. exemplo da função touch()
if (touch ($nomedoarquivo)) {print "o tempo do $nomedoarquivo foi modificado para o dia e hora de atuais";} else {print "Desculpe, não foi possivel modificar o tempo de $nomedoarquivo";}
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Nota:
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função ordena um array de forma que a correlação entre chaves e valores é mantida.
Esta função é usada principalmente para classificar arrays associativos onde a ordem dos elementos é um fator importante.
A função de comparacão é definida pelo usuário.
Nota:
Por favor, veja usort() e uksort() para exemplos de funções de comparação definidas pelo usuário.
Veja também usort(), uksort(), sort(), asort(), arsort(), ksort() e rsort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ucfirst() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. ucwords() example
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_api_version
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_check_charset
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_check_stored
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_close_stored
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_free_ispell_data
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
udm_load_ispell_data
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função irá ordenar as chaves de um array usando uma função de comparação definida pelo usuário.
Se o array precisa ser classificado utilizando um critério não trivial, você deve usar essa função.
Exemplo de uksort()
1;} $a = array (4 = "quatro", 3 = "tres", 20 = "vinte", 10 = "dez"); uksort ($a, "cmp"); while (list ($chave, $valor) = each ($a)) {echo "$chave: $valor\n";}
Esse exemplo mostraria:
20: vinte 10: dez 4: quatro 3: tres
Veja também usort(), uasort(), sort(), asort(), arsort(), ksort(), natsort() e rsort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
umask() modifica o umask do PHP para o mask 0777 e retorna o umask antigo.
Quando o PHP está sendo utilizado como um módulo do servidor, o umask é restaurado ao final de cada pedido.
umask() sem argumentos simplesmente retorna o umask atual.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
uniqid() retorna um identificador unico prefixado baseado no tempo atual em milionésimos de segundo.
O Prefixo pode ser usado se você gera identificadores em vários servidores simultaneamente pode acontecer de gerar o identificador no mesmo milionésimo de segundo.
Prefix pode ter até 114 caracteres.
Se o parâmetro lcg, que é opcional, for TRUE, uniqid() irá adicionar a entropia "LCG combinada "ao final do valor retornado, o que deve fazer o resultado mais unico.
Com o parâmetro prefix Com o parâmetro prefix vazio, a string retornada terá 13 caracteres.
Se o parâmetro lcg for TRUE, terá 23 caracteres.
Nota:
O parâmetro lcg somente esta disponivel no PHP 4 e PHP 3.0.13 e posterior.
Se você precisa um identificador unico e pretende dar o seu identificador via rede( ex. cookies de seção), é recomendado que você use algo como
$token = md5( uniqid("")); / / sem prefixo $better_token = md5(uniqid(rand(),1)); / / melhor, dificil de adivinhar
Isto irá criar um identificador de 32 caracteres( a 128 bit hex number) que é extremamente dificil de prever.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
unlink
Descrição
Similar a função C no Unix unlink().
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Veja também rmdir() para remover diretórios.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. unpack() format string
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. unserialize_callback_func example
Nota:
Exemplo 2. unserialize() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
unset
Description
Exemplo 1. unset() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
urldecode
Descrição
Decodifica qualquer% ## codificado na string.
A string decodificada é o valor de retorno.
$a = split ('', $querystring); $i = 0; while ($i count ($a)) {$b = split ('=', $a [$i]); echo 'Value for parameter ', htmlspecialchars (urldecode ($b [0])),' is ', htmlspecialchars (urldecode ($b [1])), "BR"; $i++;}
Veja também urlencode().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
urlencode
Description
Retorna uma string onde todos caracteres não-alfanuméricos exceto -_. é substituido por um sinal de porcento (%) seguidos por dois digítos hexadecimais e espaços codificados como um sinal de 'mais '(+).
É codificando o mesmo caminho que um dado enviados por um formulário WWW é codificado, que é a mesma coisa como em um tipo de mídia application / x-www-form-urlencoded.
Isto difere da codificação RFC1738 (veja rawurlencode()) por rasões históricas, espaçoes são codificados como um sinal de 'mais '(+).
Esta função é conveniente quando codificado uma string para ser usada em uma parte de consulta em uma URL, como um conveniente meio de passar variáveis para uma próxima página:
Exemplo 1. urlencode() exemplo
echo 'A HREF="mycgi?foo=', urlencode ($userinput),' "';
Veja também urldecode().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
user_error
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A função usleep() atrasa a execução do programa para o número dado no parâmetro micro_seconds em milionésimos de segundo.
Veja também sleep() e set_time_limit().
Nota:
Esta função não funciona em sistemas Windows.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Essa função irá ordenar um array pelos valores usando uma função de classificação definida pelo usuário.
Se o array precisar ser ordenado utilizando um critério não trivial, você deve usar essa função.
A função de comparação deve retornar um inteiro menor, igual ou maior que zero se o primeiro argumento for considerado respectivamente menor, igual, ou maior que o segundo.
Nota:
Se dois elementos são considerados iguais, a ordem deles fica indefinida no array resultante.
Até o PHP 4.0.6 as funções definidas pelo usuário manteriam a ordem original desses elementos, mas com o novo algoritmo de ordenação introduzido no 4.1.0 esse não é o caso, pois não existe solução para fazer isso de modo eficiente.
Exemplo de usort()
1;} $a = array (3, 2, 5, 6, 1); usort ($a, "cmp"); while (list ($chave, $valor) = each ($a)) {echo "$chave: $valor\n";}
Esse exemplo mostraria:
Nota:
Obviamente que nesse caso trivial a função rsort() seria mais apropriada.
Exemplo de usort() usando um array multi-dimensional
function cmp ($a, $b) {return strcmp($a["fruta"], $b["fruta"]);} $frutas[0]["fruta"] = "limoes"; $frutas[1]["fruta"] = "abacaxis"; $frutas[2]["fruta"] = "goiabas"; usort($frutas, "cmp"); while (list ($chave, $valor) = each ($frutas)) {echo "\$frutas[$chave]: ". $valor["fruta"]. "\n";}
Na ordenação de um array multi-dimensional, $a e $b contêm referências para o primeiro índice do array.
Esse exemplo mostraria:
Nota:
Exemplo 3.
class TestObj {var $name; function TestObj($name) {$this - name = $name;} / * Essa é a função estática de comparação * / function cmp_obj($a, $b) {$al = strtolower($a - name); $bl = strtolower($b - name); if ($al == $bl) return 0; return ($al $bl)? +1: -1;}} $a[] = new TestObj("c"); $a[] = new TestObj("b"); $a[] = new TestObj("d"); uasort($a, array ("TestObj", "cmp_obj")); foreach ($a as $item) {print $item - name ."\n";}
Esse exemplo mostraria:
Veja também uasort(), uksort(), sort(), asort(), arsort(), ksort(), natsort(), e rsort().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Dica:
Como toda saída é normalmente enviada direto para o browser, você pode usar as Funções de Controle de Output para capturar o resultado e guardá-lo em uma string (por exemplo).
Exemplo 1. var_dump() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. version_compare() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
virtual() é uma função específica do Apache que é equivalente a !--#include virtual...- - no mod_include.
Ela realiza uma sub-requisição do Apache.
Ela é útil para incluir scripts de CGI ou arquivos .shtml, ou qualquer outra coisa que você possa analisar através do Apache.
Note que para um script CGI, o script precisa gerar um cabeçalho CGI válido.
Isto significa que, no mínimo, ele precisa gerar um cabeçalho Content-type.
Para arquivos PHP, você precisa usar include() ou require(). virtual() não pode ser usado para incluir um documento que é um arquivo PHP.
Headers pendentes são enviados também.
Anterior
Principal
Próxima
Acima
Funções para manipulação de arrays
Manual do PHP
Anterior
Próxima
vpopmail_add_alias_domain_ex
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_add_alias_domain
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_add_domain_ex
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_add_domain
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_add_user
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_alias_add
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_alias_del_domain
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_alias_del
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_alias_get_all
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_alias_get
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_auth_user
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_del_domain_ex
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_del_domain
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_del_user
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_error
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_passwd
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
vpopmail_set_user_quota
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
w32api_deftype
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
w32api_init_dtype
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
w32api_invoke_function
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
w32api_register_function
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
w32api_set_call_method
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. wddx_serialize_vars() example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Exemplo 1. wordwrap() example
Exemplo 2. wordwrap() example
Anterior
Principal
Próxima
Acima
Funções Sybase
Manual do PHP
Anterior
Próxima
xml_error_string
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_get_current_byte_index
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_get_current_column_number
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_get_current_line_number
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_get_error_code
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parse
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. moldb.xml - small database of molecular information
Exemplo 2. parsemoldb.php - parses moldb.xml into and array of molecular objects
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parser_create
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parser_create_ns
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parser_free
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parser_get_option
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_parser_set_option
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_decode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_decode_request
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_encode
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_encode_request
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_get_type
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_parse_method_descriptions
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_add_introspection_data
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_call_method
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_create
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_destroy
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_register_introspection_callback
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_server_register_method
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xmlrpc_set_type
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Atenção
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_set_end_namespace_decl_handler
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_set_object
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xml_set_start_namespace_decl_handler
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xpath_eval_expression
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xpath_eval
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xpath_new_context
Atenção
Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use esta função por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xptr_new_context
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Exemplo 1.
Exemplo 2.
Exemplo 3.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_encoding
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_log
Description
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_sax_handler
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_sax_handlers
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_scheme_handler
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
xslt_set_scheme_handlers
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_ccl_parse
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_element
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_errno
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_error
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_get_option
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_scan
Description
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
The RPN query
Tabela 1.
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
yaz_set_option
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Description
Esta função não está documentada, somente a lista de argumentos está disponível.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zend_logo_guid
Description
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 1. zend_version() Example
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zip_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zip_entry_close
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zip_entry_open
Description
Nota:
Retorna TRUE em caso de sucesso ou FALSE em falhas.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zip_open
Description
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
zip_read
Description
Anterior
Principal
Próxima
Acima
Funções de Compressão Zlib
Anterior
I.
Começando
Security
Anterior
Principal
Próxima
Introdução
Manual do PHP
Anterior
Próxima
A História do PHP e projetos relacionados
Criada para ser uma das mais poderosas e proeminentes linguagens da Web não foi uma tarefa fácil.
Aqueles que se interessaram momentaneamente em ver como o PHP cresceu e se tornou o que é hoje, continue lendo.
PHP / FI
PHP / FI foi criado por Rasmus Lerdorf em 1995, inicialmente como simples scripts Perl como estatísticas de acesso para seu currículo online.
Ele nomeou esta sério de script para 'Personal Home Page Tools'.
Como mais funcionalidades foram requeridas, Rasmus escreveu uma implementação C muito maior, que era capaz de comunicar-se com base de dados, e possibilitava à usuários desenvolver simples aplicativos dinâmicos para Web.
Rasmus decidiu disponibilizar o código fonte do PHP / FI para que todos pudessem ver, e também usá-lo, bem como fixar bugs e melhorar o código.
Ele usava variáveis no estilo Perl, interpretação automática de variáveis vindas de formulário e sintaxe embutida no HTML.
A sua própria sintaxe era similar a do Perl, porém muito mais limitada, simples, e um pouco inconsistente.
Em 1997, PHP / FI 2.0, a segunda versão da implementação C, obteve milhares de usuários ao redor do mundo (estimado), com aproximadamente 50,000 domínios reportando que tinha PHP / FI 2.0 instalado, agarinhando 1% dos domínios da Internet.
Enquanto isto havia milhares de pessoas contribuindo com pequenos códigos para o projeto, e ainda assim By 1997, PHP / FI 2.0, the second write-up of the C implementation, had a cult of several thousand users around the world (estimated), with approximately 50,000 domains reporting as having it installed, accounting for about 1% of the domains on the Internet.
O PHP / FI 2.0 foi oficialmente lançado somente em Novembro de 1997, após perder a maior parte de sua vida em versões betas.
PHP 3
O PHP 3.0 foi a primeira versão que se assemelha ao PHP que nós conhecemos hoje.
Ela foi criada por Andi Gutmans e Zeev Suraski em 1997 e foi totalmente reescrito, após eles descobrirem que o PHP / FI 2.0 poderia ajudá-los a desenvolver suas próprias aplicações de eCommerce.
No esforço cooperativo e iniciativa de começar o PHP / FI à partir da base-usuário existente, Andi, Rasmus e Zeev decidiram cooperar e anunciar o PHP 3.0 como uma versão oficial de seu sucessor o PHP / FI 2.0, e o desenvolvimento do PHP / FI 2.0 foram descontinuados.
Uma das maiores características do PHP 3.0 era sua forte capacidade de extensibilidade.
Além de oferecer aos usuários finais uma infraestrutura sólida para diversos bancos de dados, protocolos e APIs, o extensibilidade do PHP 3.0 atraí dezenas de desenvolvedores para se juntar e submeter novos módulos.
Esta é a chave do tremendo sucesso do PHP 3.0.
Outras características chaves introduzidas no PHP 3.0 foram o suporte à sintaxe para orientação à objetos e uma sintaxe muito mais poderosa e consistente.
A nova versão da linguagem foi realizada sob um novo nome, que removeu a impressão do limitado uso pessoal que o PHP / FI 2.0 prendeu.
Ela foi nomeada simplesmente 'PHP', com o significado que é um acrônimo - PHP:
No final de 1998, o PHP obteve uma base the dezenas de milhares de usuários (estimativa) e centenas de milhares de Web sites relatando que o tinham instalado.
Em seu pico, o PHP 3.0 foi instalado em aproximadamente 10% dos servidores Web da Internet.
O PHP 3.0 foi oficialmente lançado em Junho de 1998, depois de ter passado aproximadamente 9 meses em testes públicos.
No inverno de 1998, rapidamente após o PHP 3.0 ser oficialmente lançado, Andi Gutmans e Zeev Suraski começaram a reescrever o núcleo do PHP.
Os objetivos do projeto eram melhorar a performance de aplicações complexas, e melhorar a modularidade do código base do PHP.
Tais aplicações foram possíveis por causa das novas características do PHP 3.0 e o suporte a uma variadade de banco de dados de terceiros e APIs, mas o PHP 3.0 não foi projeto para trabalhar com aplicações muito complexas eficientemente.
A nova engine, dubbed 'Zend Engine' (conhecidos pelos seus primeiros nomes, Zeev e Andi), fazendo desse objetivo um sucesso, e foi introduzida em meados de 1999.
PHP 4.0, baseado nesta engine, e acompanhado com uma série de novas características, foi oficialmente lançada em Maio de 2000, quase dois anos após o seu predecessor, o PHP 3.0.
Além da altíssimo melhoramento da performance desta versão, o PHP 4.0 incluiu outras características chave como o suporte para muitos servidores WEb, sessões HTTP, buffer de saída, maneiras mais seguras de manipular input de usuários e muitas construções novas na linguagem.
PHP 4 é a última versão lanaçada do PHP.
O trabalho já começou na modificação e melhoramento da Zend Engine para integrar novas características que foram designadas para o PHP 5.0.
Hoje, o PHP está começando a ser usado por centenas de milhares de desenvolvedores (estimativa), e muitos milhões de sites reportam que tem o PHP instalado, que explica os 20% de domínios da Internet.
PHP 5
O futuro do PHP é dirigido principalmente pelo seu núcleo, a Zend Engine.
PHP 5 irá incluir a nova Zend Engine 2.0.
Para obter mais informações sobre esta engine, veja esta página.
Anterior
Principal
Próxima
Apêndices
Acima
A História dos projetos relacionados ao PHP
Manual do PHP
Anterior
Apêndice A.
Próxima
Livros sobre PHP
O PHP cresceu, ele começou a ser reconhecido mundialmente como a plataforma mais popular.
Uma das maneiras mais interessantes de ver esta tendência é observar os livros sobre PHP que surgirão ao longo dos anos.
Até onde nós sabemos, o primeiro livro dedicado ao PHP foi 'PHP - tvorba interaktivních internetových aplikací' - um livro Czech publicado em Abril de 1999, pela autora Jirka Kosek.
No mês seguinte veio o livro Alemão escrito por Egon Schmid, Christian Cartus e Richard Blume.
O primeiro livro em Inglês sobre PHP foi publicado logo depois, e foi chamado 'Core PHP Programming' por Leon Atkinson.
Todos estes livros falavam sobre o PHP 3.0.
Quando estes livros eram os primeiros deste tipo - eles inspiraram um grande número de livros de outros autores e editoras.
Há aproximadamente 40 livros em Inglês, 50 livros em Alemão, e uns 20 livros em Francês!
Além disso, você pdoe encontrar livros sobre PHP em muitas outras línguas, incluindo Espanhol, Koreâno, Japonês e Hebrew.
Obviamente, este grande número de livros, escritos por diferentes autores, publicados por muitas editoras, e disponíveis em muitas línguas - é uma prova do sucesso mundial do PHP.
Anterior
Principal
Próxima
A História dos projetos relacionados ao PHP
Acima
Publicações sobre PHP
Manual do PHP
Anterior
Apêndice A.
Próxima
Publicações sobre PHP
Até onde nós sabemos, o primeiro artigo sobre PHP foi publicado em uma revista parecida com a Computerworld na Czech em meados de 1998, e cobria o PHP 3.0.
Como os livros, este foi um de uma sério de muitos artigos publicados sobre PHP em várias revistas proeminentes.
Artigos sobre PHP apareceram no Dr.
Dobbs, Empresas de Linux, Revistas de Linux e em muitos outros lugares.
Artigos sobre migração de aplicações baseadas em ASP para PHP rodando Windows foram publicadas mesmo na Microsoft e até mesmo na MSDN!
Anterior
Principal
Próxima
Livros sobre PHP
Acima
Manual do PHP
Anterior
Apêndice A.
A História do PHP e projetos relacionados
Próxima
PEAR, o repositório da Extensão PHP e da Aplicação (originalmente, Extensão PHP e Repositório Add-on) são as versões das classes da fundação do PHP, e talvez cresçam no futuro para ser um dos caminhos chaves para distribuir o PHP em ambas extensões C e PHP entre os colaboradores.
O PEAR nasceu em discussões realizadas nas PHP Developers' Meeting-PMD (Reuniões dos Desenvolvedores do PHP-RDP) realizada em Janeiro de 2000 em Tel Aviv.
Foi criada por Sitg S.
Bakken, e é dedicada à sua primeira filha, Malin Bakken.
Desde o começo de 2000, o PEAR cresceu para ser um grande, e significativo projeto com um largo número de desenvolvedores trabalhando em executar tarefas comuns, funcionalidades reusáveis para o benefício de toda a comunidade PHP.
A Iniciativa da Garantia de Qualidade do PHP
A Iniciativa da Garantia de Qualidade do PHP foi criada no verão de 2000 em resposta às críticas sobre as versões do PHP não terem sido testadas o bastante para ambientes de produção.
O time agora consiste em um grupo de desenvolvedores com um bom entendimento sobre o código base do PHP.
Estes desenvolvedores gastam muito boa parte do tempo deles localizando e consertando bugs dentro do PHP.
PHP-GTK
O PHP-GTK é a solução PHP para aplicações GUI client side (lado-cliente).
Andrei Zmievski recorda o processo de planejamento e criação do PHP-GTK:
A programação GUI sempre foi de meu interesse, e eu achei que o Gtk + é uma ferramenta muito boa, exceto que a programação dela usa o C que algumas vezes é um tédio.
Após testemunhar as implementações do PyGtk e GTK-Perl, eu decidi ver se o PHP poderia ter uma interface Gtk+.
Começando em Agosto de 2000, eu comecei a ter um pouco mais de tempo livre que foi quando eu comecei a experimentar.
Minha linha guia principal foi a implementação da interface PyGtk.
James Henstridge, o autor do PyGtk, me ajudou muito durante os estágios iniciais.
Escrever as interfaces na mão para todas as funções do Gtk + estava fora de questão, então eu tive uma idéia de criar um gerador de código, similar à como o PyGtk foi feito.
O gerador de código é um programa PHP que lê uma série de arquivos .def contendo as classes Gtk+, constantes, e as informações dos métodos e geradores de código C que irão trabalhar com o PHP.O que não pode ser gerado automaticamente pode ser escrito em arquivos .overrides.
Trabalhando no gerador de código e na infraestrutura levou algum tempo, porque eu tinha pouco tempo para trabalhar no PHP-GTK durante o fim de 2000.
Depois de eu mostrar o PHP-GTK ao Frank Kromann, ele se interessou e começou a me ajudar com o gerador de código e a implementação para Win32.
Quando nós escrevemos o primeiro programa 'Hello World' e o rodamos, foi extremamente exitante.
Levou mais alguns meses para deixar o projeto em uma condição apresentável e lançar a versão inicial realizada em 1 de Março de 2001. que logo foi apresentada no SlashDot.
Detetando que o PHP-GTK pode ser extensivo, eu decidi separar as listas de discussão e os repositórios CVS para isto, bem como o website gtk.php.net com ajuda de Colin Viebrock.
A documentação também era necessária ser feita e James Moore veio me ajudar com isto.
Desde sua realização o PHP-GTK vem ganhando popularidade.
Agora, nós temos nosso próprio time de documentação, o manual continua melhorando, as pessoas começam a escrever extensões para o PHP-GTK, e mais e mais aplicativos excitantes com ele.
Anterior
Principal
Próxima
A História do PHP e projetos relacionados
Acima
Livros sobre PHP
Stig Sæther Bakken
Duplicating Variable Contents:
Identificadores faltando (compilação do manual)
Prefácio
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Atenção
PHP and Apache 2.0 compatibility notes
Nota:
PHP and Apache 2 on Linux
Exemplo 3-6.
Nota:
PHP and Apache 2.0 on Windows
Atenção
Exemplo 3-7.
Exemplo 3-8.
Nota:
Atenção
Anterior
Principal
Próxima
Servidores-Apache
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Esta seção contém notas e dicas específicas para instalações do PHP em Apache, tanto para versões Unix quanto para Windows.
Detalhes ao instalar o PHP com Apache no Unix
Você pode selecionar argumentos para adicionar ao configure na linha 10 abaixo através da Lista completa de opções do configure.
Os números de versões foram omitidos aqui, para assegurar que as instruções não estejam incorretas.
Você deverá trocar o 'xxx' aqui com os valores corretos dos seus arquivos.
Exemplo 3-5.
Instruções de Instalação (Apache Versão de Módulo Compartilhado) para PHP 4
1. gunzip apache_xxx.tar.gz 2. tar -xvf apache_xxx.tar 3. gunzip php-xxx.tar.gz 4. tar -xvf php-xxx.tar 5. cd apache_xxx 6.. / configure --prefix= / www --enable-module=so 7. make 8. make install 9. cd.. / php-xxx 10.. / configure --with-mysql --with-apxs= / www / bin / apxs 11. make 12. make install Se você decidir mudar as opções de seu configure depois da instalação você precisará somente repetir os últimos tres passos.
Você somente precisará reiniciar o apache para o novo módulo funcionar.
Não será necessário recompilar o Apache.
13. cp php.ini-dist / usr / local / lib / php.ini Você pode editar o seu arquivo .ini para configurar as opções do PHP.
Se você preferir que este arquivo fique em outro lugar, use a opção --with-config-file-path= / caminho no passo 10.
Edite o seu arquivo httpd.conf ou srm.conf e verifique que estas linas estejam presentes e não estejam comentadas:
AddType application / x-httpd-php .php LoadModule php4_module libexec / libphp4.so Você pode escolher qualquer extensão aqui. .php é simplesmente uma sugestão que nós damos.
Você também pode incluir .html, e .php3 pode ser adicionado para compatibilidade com versões antigas.
O caminho no lado direito do comando LoadModule deve apontar para para o caminho do módulo PHP do seu sistema.
O comando acima está correto para os passos mostrados acima.
Use seu procedimento normal para iniciar o servidor Apache. (Você deve parar e reiniciar o servidor, não somente fazer um reinício enviando um sinal HUP ou USR1.)
Dependendo da sua instalação do Apache e das variações Unix, existem inúmeras maneiras possíveis de parar e reiniciar o servidor.
Abaixo estão algumas linhas típicas usadas para reiniciar e o servidor, para instalações de versões de apache / unix.
Você deve trocar / caminho / para / pelo caminho destas aplicações nos seus sistemas.
Inúmeras variações de sistemas Linux: / etc / rc.d / init.d / httpd restart 2.
Usando os scripts apachectl: / caminho / para / apachectl stop / caminho / para / apachectl start 3. httpdctl and httpsdctl (Usando OpenSSL), igual ao apachectl: / caminho / para / httpsdctl stop / caminho / para / httpsdctl start 4.
Usando mod_ssl, ou outro servidor SSL, você pode querer iniciar ou reiniciar manualmente: / caminho / para / apachectl stop / caminho / para / apachectl startssl
Exemplos diferentes de compilação do PHP para apache estão a seguir:
Isto irá criar uma biblioteca compartilhada libphp4.so que é carregada com o Apache usando uma linha LoadModule no arquivo httpd.conf do Apache.
O suporte ao PostgreSQL está embutido dentro da biblioteca compartilhada libphp4.so.
Isto irá criar uma biblioteca compartilhada libphp4.so para o Apache, mas isto também criará uma biblioteca compartilhada pgsql.so que é carregada com o PHP tanto ao usar a diretiva de extensão no arquivo php.ini ou então carregando ela explícitamente no script usando a função dl().
. / configure --with-apache= / caminho / para / apache_source --with-pgsql
Isto irá criar uma biblioteca libmodphp4.a, o arquivo mod_php4.c e vários arquivos dependentes e copiará eles para o diretório src / modules / php4 na árvore de diretório do código fonte do Apache.
Então você compilará o Apache usando a opção --activate-module=src / modules / php4 / libphp4.a e o sistema de compilação do Apache irá criar o arquivo libphp4.a e fará um link estático dentro do binário httpd.
O suporte ao PostgreSQL estará incluído diretamente neste binário httpd, então o resultado final aqui será um único arquivo binário httpd que incluirá tudo do Apache e tudo do PHP.
. / configure --with-apache= / caminho / para / apache_source --with-pgsql=shared
Mesmo que o anterior, exceto em vez de incluir o suporte ao PostgreSQL diretamente no binário httpd você terá uma biblioteca compartilhada pgsql.so que você poderá carregar com o PHP tanto do arquivo php.ini ou diretamente usando a função dl().
Quanto estiver decidindo compilar o PHP com maneiras diferentes, você deverá considerar as vantages e disvantagens de cada método.
Complilando como uma biblioteca compartilhada significará que você poderá compilar o apache separadamente, e não terá que recompilar tudo quando quiser adicionar ou mudar o seu PHP. compilando o PHP dentro do apache (método estático) significará que o PHP irá carregar e rodar rapidamente.
Para maiores informações, veja a página web do Apache que fala sobre Suporte a Objetos Dinâmicos Compartilhados.
Nota:
O arquivo httpd.conf padrão do Apache atualmente já contém uma seção que se parece com isso:
Nota:
Tenha certeza de especificar a versão instalada do apxs quando usar a opção --with-apxs= / caminho / para / apxs.
Instalando o PHP em Windows com Apache 1.3.x
Existem duas maneiras de configurar o PHP para funcionar com o Apache 1.3.x em Windows.
Uma é usando o binário CGI (php.exe), a outra é usando a bliblioteca compartilhada (DLL) como módulo para o Apache (SAPI).
Nos dois casos você precisará parar o Servidor Apache, e editar seu arquivo srm.conf ou httpd.conf para configurar o Apache para funcionar com o PHP.
Vale deixar claro aqui que agora o módulo SAPI tornou-se muito mais estável no windows, nós recomendamos o seu uso em vez do binário CGI, por ele ser mais transparente e seguro.
Embora possa ter algumas variações de configurar o PHP com Apache, elas são fáceis suficientemente para ser feitas por um usuário sem experiência.
Por favor consulte os Documentos do Apache para maiores diretivas de configuração.
Se você descompactou o pacote do PHP para c:\php\ como descrito na seção Passos de Instalação Manual, você precisará inserir estas linhas no seu arquivo de configuração do Apache para configurar o binário CGI:
Atenção
Usando a configuração do binário CGI, o seu servidor está aberto a vários tipos possívels de ataque.
Por favor leia nossa seção Segurança em CGI para aprender como defender-se de ataques.
Se você preferir usar o PHP como um módulo no Apache, esteja certo de mover o arquivo php4ts.dll para o diretório windows / system (em Windows 9x / Me) ou winnt / system32 (para Windows NT / 2000 / XP), sobrescrevendo qualquer arquivo antigo.
Então você deverá adiciomar as duas linhas a seguir em seu arquivo de configuração do Apache:
Após mudar o arquivo de configuração, lembre-se de reiniciar o servidor, por exemplo, NET STOP APACHE seguido por NET START APACHE, se você roda o Apache como um Serviço Windows, ou use os atalhos comuns no menu iniciar.
Nota:
Você irá descobrir que após usar o windows installer para Apache que você deverá definir a diretriz AddModule para mod_php4.c no arquivo de configuração (httpd.conf).
Isto pode ser feito adicionando AddModule mod_php4.c para a lista AddModule, perto do começo do arquivo de configuração.
Isto é especialmente importante se a diretriz ClearModuleList Isto é especialmente importante se a diretriz ClearModuleList estiver definida.
Falhas ao configurar isto pode resultar em não definir o PHP como um módulo para Apache.
Existem duas maneiras para você poder usar a função de destaque de códigos fonte, contudo dependerá da maneira de sua instalação para esta função funcionar corretamente.
Se você configurou o Apache para usar o PHP como um módulo SAPI, então adicionando a seguinte linha ao seu arquivo de configuração você poderá usar esta função:
Se você escolher configurar o Apache para usar o PHP como um binário CGI, você precisará usar a função show_source().
Para fazer isto simplesmente crie um arquivo de script PHP e adicione este código: ?php show_source ("php_original_script.php");?.
Troque php_original_script.php pelo nome do arquivo que você quer que seja mostrado o código fonte.
Nota:
No Apache em Windows todas as barras invertidas em uma definição de caminho como descrito aqui "c:\diretorio\arquivo.ext", devem ser convertidas para barras normais, como descrito aqui "c: / diretorio / arquivo.ext".
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Instalação
General Installation Considerations
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Próxima
Servers-Caudium
Exemplo 3-9.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Servers-CGI / Commandline
Benchmarking
Using Variables
Anterior
Principal
Próxima
Acima
Servidores-Apache
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Complete list of configure options
Nota:
Configure Options in PHP 4
Nota:
Database options
Graphics options
Misc options
Server options
Anterior
Principal
Próxima
Acima
Configuração
Manual do PHP
Anterior
Capítulo 3.
Próxima
Servers-fhttpd
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Próxima
Unix / HP-UX installs
Exemplo 3-1.
Anterior
Principal
Próxima
Instalação
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Atenção
Windows NT / 2000 / XP and IIS 4 or newer
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Compiling for OS X server
Exemplo 3-2.
Compiling for MacOS X client
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Exemplo 3-10.
Exemplo 3-11.
Exemplo 3-12.
Installing PHP with Netscape on Windows
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Exemplo 3-3.
Using Ports
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Próxima
Servers-Other web servers
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Read the FAQ
Bug reports
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Exemplo 3-4.
Building
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Nota:
Atenção
Manual Installation Steps
Atenção
Putting it all together
Nota:
Configure MVC + +
Build resolv.lib
Nota:
Installation of Windows extensions
Nota:
Nota:
Tabela 3-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 3.
Instalação
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
O que é PHP?
Hypertext Preprocessor") é uma linguagem de script Open Source de uso geral, muito utilizada e especialmente guarnecida para o desenvolvimento de aplicações Web embútivel dentro do HTML.
Uma resposta simples, mas o que isso significa?
Exemplo 1-1.
Um exemplo introdutório
html head title Exemplo / title / head body ?php echo "Olá, Eu sou um script PHP !";? / body / html
Note como isso é diferente de scripts CGI escritos em outras linguagens como Perl ou C -- - ao invés de escrever um programa com um monte de comandos para imprimir HTML, você escreve um arquivo HTML com algum código inserido para fazer alguma coisa (nesse caso, imprimir um pouco de texto).
O código PHP é delimitado por tags iniciais e finais que lhe permitem pular pra dentro e pra fora do "modo PHP".
O que distingui o PHP de algo como Javascript no lado do cliente é que o código é executado no servidor.
Se você tivesse um script similar ao acima em seu servidor, o cliente receberia os resultados da execução desse script, sem nenhum modo de determinar como é o código fonte.
Você pode inclusive configurar seu servidor para processar todos os seus arquivos HTML como PHP, e então não haverá nenhum modo dos usuários descobrirem que se você usa essa linguagem ou não.
A melhor coisa em usar PHP está no fato de ele ser extremamente simples para um iniciante, mas oferece muitos recursos para o programador profissional.
Não se preocupe em ler as longas listas de funções do PHP.
Você pode pular essa parte (por enquanto) e começar a escrever scripts em poucas horas.
Apesar do desenvolvimento do PHP ser focado nos scripts do lado do servidor, você pode fazer muito mais com ele.
Veja isso e leia mais na seção O que o PHP pode fazer?.
Anterior
Principal
Próxima
Começando
Acima
O que o PHP pode fazer?
Manual do PHP
Anterior
Capítulo 1.
Próxima
O que o PHP pode fazer?
Qualquer coisa.
O PHP é focado para ser uma linguagem de script do lado do servidor, portanto, você pode fazer qualquer coisa que outro programa CGI pode fazer, como: coletar dados de formulários, gerar páginas com conteúdo dinâmico ou enviar e receber cookies.
Mas o PHP pode fazer muito mais.
Esses são os maiores campos onde os scripts PHP podem se utilizados:
Script no lado do servidor (server-side).
Este é o mais tradicional e principal campo de atuação do PHP.
Você precisa de três coisas para seu trabalho.
O interpretador do PHP (como CGI ou módulo), um servidor web e um browser.
Basta rodar o servidor web conectado a um PHP instalado.
Você pode acessar os resultados de seu programa PHP com um browser, visualizando a página PHP através do servidor web.
Veja as instruções de instalação para maiores informações.
Script de linha de comando.
Você pode fazer um script PHP funcionar sem um servidor web ou browser.
A única coisa necessária é o interpretador.
Esse tipo de uso é ideal para script executados usando o cron ou o Agendador de Tarefas (no Windows).
Esses scripts podem ser usados também para rotinas de processamento de texto.
Veja a seção Utilizando o PHP em linha de comando para maiores informações.
Escrevendo aplicações GUI no lado do cliente (client-side).
O PHP não é (provavelmente) a melhor linguagem para produção de aplicações com interfaces em janelas, mas o PHP faz isso muito bem, e se você deseja usar alguns recursos avançados do PHP em aplicações no lado do cliente poderá utilizar o PHP-GTK para escrever esses programas.
E programas escritos desta forma ainda serão independentes de plataforma.
O PHP-GTK é uma extensão do PHP, não disponível na distribuição oficial.
Se você está interessado no PHP-GTK, visite seu website
O PHP pode ser utilizado na maioria dos sistemas operacionais, incluindo Linux, várias variantes Unix (incluindo HP-UX, Solaris e OpenBSD), Microsoft Windows, Mac OS X, RISC OS, e provavelmente outros.
O PHP também é suportado pela maioria dos servidores web atuais, incluindo Apache, Microsoft Internet Information Server, Personal Web Server, Netscape and iPlanet Servers, Oreilly Website Pro Server, Caudium, Xitami, OmniHTTPd, e muitos outros.
O PHP pode ser configurado como módulo para a maioria dos servidores, e para os outros como um CGI comum.
Com o PHP, portanto, você tem a liberdade para escolher o sistema operacional e o servidor web.
Do mesmo modo, você pode escolher entre utilizar programação estrutural ou programação orientada a objeto, ou ainda uma mistura deles.
Mesmo não desenvolvendo nenhum recurso padrão de OOP (Object Oriented Programming, Programação Orientada a Objetos) na versão atual do PHP, muitas bibliotecas de código e grandes aplicações (incluindo a biblioteca PEAR) foram escritos somente utilizando OOP.
Com PHP você não está limitado a gerar somente HTML.
As habilidades do PHP incluem geração de imagens, arquivos PDF e animações Flash (utilizando libswf ou Ming) criados dinamicamente, on the fly.
Você pode facilmente criar qualquer padrão texto, como XHTML e outros arquivos XML.
O PHP pode gerar esses padrões e os salvar no sistema de arquivos, em vez de imprimi-los, formando um cache dinâmico de suas informações no lado do servidor.
Talvez a mais forte e mais significativa característica do PHP é seu suporte a uma ampla variedade de banco de dados.
Escrever uma página que consulte um banco de dados é incrivelmente simples.
Os seguintes bancos de dados são atualmente suportados:
O PHP também tem suporte para comunicação com outros serviços utilizando protocolos como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (em Windows) e incontáveis outros.
Você pode abrir sockets de rede e interagir diretamente com qualquer protocolo.
O PHP também suporta o intercâmbio de dados complexos WDDX, utilizado em virtualmente todas as linguagens de programação para web.
Falando de comunicação, o PHP implementa a instanciação de objetos Java e os utiliza transparentemente como objetos PHP.
Você ainda pode usar sua extensão CORBA para acessar objetos remotos.
O PHP é extremamente útil em recursos de processamento de texto, do POSIX Estendido ou expressões regulares Perl até como interpretador para documentos XML.
Para acessar e processar documentos XML, são suportados os padrões SAX e DOM.
Você ainda pode usar nossa extensão XSLT para transformar documentos XML.
Utilizando o PHP no campo do e-commerce, você poderá usar as funções específicas para Cybescash, CyberMUT, Verysign Payflow Pro e CCVS, práticos sistemas de pagamento online.
Por último mas longe de terminar, temos também outras extensões interessantes: funções para o search engine mnoGoSearch, funções para Gateway IRC, vários utilitários de compressão (gzip, bz2), calendário e conversões de datas, tradução...
Como você pode ver, esta página não é suficiente para descrever todos os recursos e benefícios que o PHP pode oferecer.
Leia nas seções sobre a Instalação do PHP, e veja a referência das funções para detalhes das extensões mencionadas aqui.
Anterior
Principal
Próxima
Introdução
Acima
Manual do PHP
Anterior
Capítulo 14.
Próxima
extends
Permite classes com variáveis e funções similares a uma outra classe.
De fato, é uma boa prática definir classes genéricas que podem ser utilizadas em todos os seus projetos, e adaptar essas classes com as necessidades específicas de cada projeto.
Para facilitar isso, classes podem ser extensões de outras classes.
A classe estendida ou derivada tem todas as variáveis e funções da classe base (isto é chamado herança, afora o fato que ninguém morreu) e mais aquelas que venha a acrescentar na versão estendida.
Não é possível subtrair uma classe, ou seja, indefinir quaisquer funções ou variáveis existentes.
Uma classe estendida é sempre dependente de uma única classe base, e portanto, herança múltipla não é suportada.
Classes são estendidas utilizando a instrução 'extends'.
class CarrinhoDeComprasNomeado extends CarrinhoDeCompras {var $proprietario; function set_proprietario ($name) {$this - proprietario = $name;}}
Isto define uma classe chamada CarrinhoDeComprasNomeado que tem todas as variáveis e funções de CarrinhoDeCompras mais a variável $proprietario e uma função set_proprietario().
Você pode criar um carrinho nomeado da maneira usual e configurar e obter o proprietário do carrinho.
Você ainda pode continuar utilizando carrinhos normais e carrinhos nomeados:
$ncart = new CarrinhoDeComprasNomeado; $ncart - set_proprietario("kris"); print $ncart - proprietario; $ncart - add_item("10", 1); / / (funcionalidade herdade do CarrinhoDeCompras)
Isto é chamado relacionamento "pai-filho".
Você cria uma classe pai e utiliza extends para criar uma nova classe baseada na classe pai: sua classe filha.
Você ainda pode criar uma nova classe estendida a partir dessa classe filha e assim por diante.
Nota:
As classes precisam ser definidas antes de serem utilizadas!
Se você estender a classe CarrinhoDeComprasNomeado da classe CarrinhoDeCompras, você precisa antes criar a classe chamada CarrinhoDeCompras.
Se você quiser criar uma outra classe chamada CarrinhoDeComprasNomeadoAmarelo baseada na classe CarrinhoDeComprasNomeado você tem que definir CarrinhoDeComprasNomeado primeiro.
Trocando em miúdos: a ordem em que as classes são definidas é importante.
Anterior
Principal
Próxima
Classes e Objetos
Acima
Construtores
Manual do PHP
Anterior
Capítulo 14.
Próxima
::
Cuidado
O seguinte é valido para o PHP 4 somente.
As vezes pode ser útil se referir a funções e variáveis na classe base ou referenciar funções em classes que não possuem qualquer instância.
O operador:: pode ser utilizado nessas ocasiões.
class A {function exemplo() {echo "Eu sou a função original A::exemplo(). br \n";}} class B extends A {function exemplo() {echo "Eu sou a função redefinida B::exemplo(). br \n"; A::exemplo();}} / / Nao ha nenhum objeto da classe A. / / Isto ira imprimir / / Eu sou a função original A::exemplo(). br A::exemplo(); / / cria um objeto a partir da classe B $b = new B; / / Isto ira imprimir / / Eu sou a função redefinida B::exemplo(). br / / Eu sou a função original A::exemplo(). br $b - exemplo();
O exemplo acima chama a função exemplo() da classe A, mas não há nenhum objeto da classe A, então não podemos escrever $a - exemplo() ou qualquer coisa similar, Em vez disso, nós chamamos exemplo() como uma 'função de classe ', ou seja, como uma função da classe propriamente dita, não qualquer objeto dessa classe.
Existem funções de classe, mas não variáveis de classe.
De fato, não há nenhum objeto durante toda a execução.
Assim, uma função de classe não pode usar qualquer variável de objeto (mas pode usar variáveis locais e globais), e nunca podendo utilizar-se de $this.
Ainda no exemplo acima, a classe B redefine a função exemplo().
A definição da função original na classe A é ocultada e nunca disponível, a não ser que você se referencie especificamente a implementação de exemplo() da classe A utilizando-se do operador::.
Escrevemos A::exemplo() para isso (de fato, você também pode escrever parent::exemplo(), como mostrado na próxima seção).
Nesse contexto, existe um objeto e ele pode ter variáveis de objeto.
Assim, quando utilizado de DENTRO de uma função de objeto, você pode usar $this e variáveis de objeto.
Anterior
Principal
Próxima
Construtores
Acima
Manual do PHP
Anterior
Capítulo 14.
Próxima
parent
Você pode se encontrar escrevendo código que precisa referenciar a variáveis e funções na classe base.
Isto é particularmente verdade se você derivou uma classe como um refinamento ou especialização de código de sua classe base.
Fazendo isso, evita assim a utilização do nome da sua classe base em mais de um lugar.
Se sua árvore de herança mudar durante a implementação, a modificação é mais facilmente realizada pela simples alteração da declaração extends de suas classes.
class A {function exemplo() {echo "Eu sou A:exemplo() e provenho funcionalidades básicas. br \n";}} class B extends A {function exemplo() {echo "Eu sou B::exemplo() e provenho funcionalidades adicionais. br \n"; parent::exemplo();}} $b = new B; / / Isto ira chamar B::exemplo(), que por sua vez chama A::exemplo(). $b - exemplo();
Anterior
Principal
Próxima
Acima
Serializando objetos - objetos em sessões
Anterior
II.
Referência da Linguagem
Referências
Anterior
Principal
Próxima
Sintaxe básica
Manual do PHP
Anterior
Capítulo 6.
Próxima
Comentários
O PHP suporta comentários do 'C', 'C++' e Unix shell.
Por exemplo
?php echo "Isto é um teste"; / /Comentário de uma linha no C+ + / * Isto é um comentário de mais de uma linha e aqui temos outra linha * / echo "Isto é um outro teste"; echo "O último teste"; #Comentário no estilo Unix shell?
Os comentário de uma linha só tem efeito até o fim da linha ou fim do bloco de código PHP atual, o que ocorrer primeiro.
h1 Isto é um ?php # echo "simples";? exemplo. / h1 p No título acima você lerá 'Isto é um exemplo '.
Você precisa ser cuidadoso com comentários estilo 'C' encadeados, pois eles podem causar problemas em grandes blocos.
?php / * echo "Isto é um teste"; / * Este comentário causará um erro * / * /?
Os comentários de uma linha somente agem até o fim da linha atual ou o fim do bloco de código PHP, o que ocorrer primeiro.
Isto significa que código HTML após / /?
SERÁ impresso:? continuará desligando o modo PHP, retornando para o modo HTML, e o / / não pode influenciar isso.
Anterior
Principal
Próxima
Separador de instruções
Acima
Tipos
Manual do PHP
Anterior
Próxima
Sintaxe básica
Quando o PHP interpreta um arquivo, ele simplesmente repassa o texto do arquivo até encontrar uma das tags especiais que lhe diz para começar a interpretar o texto como código PHP.
Este é o mecanismo que permite a inclusão de código PHP dentro do HTML: qualquer coisa fora das tags PHP é deixado como encontrado, enquanto tudo dentro é interpretado e executado.
Há quatro conjuntos de tags que podem ser usadas para marcar blocos de código PHP.
As outras podem ser ativadas ou desativadas a partir do arquivo de configuração php.ini.
Enquanto as formas reduzidas das tags ou no seu estilo ASP serem convenientes, elas não são portáveis em todas as versões.
Além disso, se você pretende incluir código PHP em XML ou XHTML, você precisará usar a forma ?php...? para compatibilidade com o padrão XML.
As tags suportadas pelo PHP são:
Exemplo 6-1.
Maneiras de alternar do HTML
1. ?php echo( "se você precisa dispor documentos XHTML ou XML, use assim\n");?
2.? echo ("este é o mais simples, como uma instrução de processamento SGML\n");? ?= espressao?
Uma redução de "? echo expressao?" 3. script language="php "echo ("alguns editores (como o FrontPage) não gostam de processas instruções"); / script 4.% echo ("Você também pode usar tags ASP opcionalmente");% %= $variavel; # Uma redução para"% echo... "%
O primeiro método, ?php...?, é o preferencial, já que ele permite o uso do PHP em códigos padrão XML como o XHTML.
O segundo método pode não estar sempre disponível.
Tags curtas estão disponíveis apenas quando ativadas.
Isto pode ser realizando através da função short_tags() (PHP 3 somente), ativando a diretiva de configuração short_open_tag no arquivo de configuração do PHP ou compilando o PHP com a opção --enable-short-tags no configure.
Mesmo que ele esteja configurado por default no php.ini-dist, o uso de tags curtas é desencorajado.
A quarta maneira só está disponível se a tag estilo ASP for ativada utilizando a diretiva asp_tags no arquivo de configuração.
Nota:
O suporte as tags estilo APS foi incorporada na versão 3.0.4.
Nota:
A utilização das tags curtas deve ser evitada quando do desenvolvimento de aplicações ou bibliotecas com intenção de redistribuição ou no desenvolvimento de serviços em PHP que não ficarão sob seu controle, uma vez que as tags curtas podem não estar disponíveis no servidor de instalação.
Para portabilidade de código para distribuição, tenha certeza de não usar tags curtas.
A tag de fechamento incluirá uma linha nova linha em branco automaticamente se uma não estiver presente.
Além, a tag de fechamento automaticamente implica num ponto e vírgula: você não precisa ter um ponto e vírgula no fim da última linha de código PHP.
O PHP também suporta a utilização de estruturas como essa:
Exemplo 6-2.
Alternagem avançada
?php if ($expression) {? strong Isso é verdadeiro. / strong ?php} else {? strong Isto é falso. / strong ?php}?
Anterior
Principal
Próxima
Referência da Linguagem
Acima
Separador de instruções
Manual do PHP
Anterior
Capítulo 6.
Próxima
Separador de instruções
Instruções são separadas da mesma forma que o C ou o Perl - cada instrução termina com um ponto e vírgula.
A tag de fechamento (?) também implica no fim de uma instrução, então os exemplos seguintes são equivalentes:
?php echo "Isto é um teste";? ?php echo "Isto é um outro teste"?
Anterior
Principal
Próxima
Sintaxe básica
Acima
Comentários
Manual do PHP
Anterior
Próxima
Constantes
Como o nome sugere, esse valor não pode mudar durante a execução do script (as 'constantes mágicas '__FILE__ e __LINE__ parecem ser uma exceção a essa regra, mas elas não são realmente constantes).
As constantes são sensíveis ao caso por padrão.
Por convenção, o nomes de constantes são sempre em maiúsculas.
O nome de uma constante tem as mesmas regras de qualquer identificador no PHP.
Um nome de constante válida começa com uma letra ou sublinhado, seguido por qualquer número de letras, números ou sublinhados.
Em expressões regulares, ela pode ser representada por: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff ]*
Nota:
O escopo de uma constante é global.
Sintaxe
Você pode definir uma constante utilizando-se da função define().
Quando uma constante é definida, ela não pode ser mais modificada ou anulada.
Somente dados escalares (boolean, integer, float e string) pode ser colocados em constantes.
Você pode obter o valor de uma constante simplismente especificando seu nome.
Diferentemente de variáveis, você não pode prefixar uma constante com um sinal de $.
Você também pode utilizar a função constant() para ler o valor de uma constante, se você precisar obter seu valor dinamicamente.
Utilize get_defined_constants() para obter a lista de todas as constantes definidas.
Nota:
As constantes e variáveis (globais) estão em espaços de nomes diferentes.
Isto implica, por exemplo, que TRUE e $TRUE são geralmente diferentes.
Se você usar uma constante indefinida, o PHP assume o nome da constante como seu próprio valor.
Uma notice será informada quando isso acontecer.
Use a função defined() se você precisar saber se uma constante está definida ou não.
Estas são as diferenças entre constantes e variáveis:
Constantes não podem ter um sinal de cifrão ($) antes delas;
Constantes só podem ser definidas utilizando a função define(), e não por simples assimilação;
Constantes podem ser definidas e acessadas de qualquer lugar sem que a regras de escopo de variáveis seja aplicadas;
Constantes não podem ser redefinidas ou eliminadas depois que elas são criadas; e
Constantes só podem conter valores escalares.
Exemplo 9-1.
Definindo Constantes
?php define( "CONSTANT", "Hello world ."); echo CONSTANT; / / imprime "Hello world. "echo Constant; / / imprime "Constant" e gera um alerta notice.?
Anterior
Principal
Próxima
Variáveis externas ao PHP
Acima
Constantes Predefinidas
Manual do PHP
Anterior
Capítulo 9.
Constantes
Próxima
Constantes Predefinidas
O PHP fornece um grande número de constantes predefinidas para qualquer script que ele execute.
A maioria dessas constantes, entretanto, são criadas por várias extensões, e somente estarão presentes quando essas extensões estiverem disponíveis, por carregamento dinamico ou por compilação direta.
A lista de constantes predefinidas está disponível na seção Constantes Predefinidas.
Anterior
Principal
Próxima
Constantes
Acima
Expressões
Anterior
Capítulo 10.
Expressões
Expressões são as peças de construção mais importantes do PHP.
No PHP, quase tudo o que você escreve são expressões.
A maneira mais simples e ainda mais precisa de definir uma expressão é "tudo o que tem um valor".
As formas mais básicas de expressões são constantes e variáveis.
Quando você digita "$a = 5", você está atribuindo '5 'para $a. '5', obviamente, tem o valor 5, ou, em outras palavras, '5' é uma expressão com o valor 5 (neste caso, '5 'é uma constante inteira).
Depois desta atribuição, você pode esperar que o valor de $a seja 5 também, assim se você escrever $b = $a, você pode esperar que $b se comporte da mesma forma que se você escrevesse $b = 5.
Em outras palavras, $a é uma expressão com valor 5 também.
Se tudo funcionou bem, isto é exatamente o que acontecerá.
Exemplos ligeiramente mais complexos para expressões são as funções.
Por exemplo, considere a seguinte função:
Assumindo que você está familiarizado com o conceito de funções (se não estiver, dê uma olhada no capítulo sobre funções), você pode assumir que digitar $c = foo() é essencialmente a mesma coisa que escrever $c = 5, e você está certo.
Funções são expressões com o valor igual ao seu valor de retorno.
Como foo() retorna 5, o valor da expressão 'foo() 'é 5.
Geralmente, as funções não retornam apenas um valor estático, mas computam algo.
Obviamente, os valores em PHP não têm que ser inteiros, e muito freqüentemente eles não são.
O PHP suporta três tipos de valores escalares: valores inteiros, valores de ponto flutuante e valores de string (valores escalares são valores que você não pode quebrar em pedaços menores, diferente de matrizes, por exemplo).
O PHP também suporta dois tipos compostos (não-escalares): matrizes e objetos.
Cada um destes tipos de valor podem ser atribuídos a variáveis ou retornadas de funções.
Até agora, os usuários de PHP / FI 2 não sentiriam qualquer mudança.
Porém, o PHP traz expressões bem mais novas, da mesma forma que muitas outras linguagens.
O PHP é uma linguagem orientada a expressões, no sentido de que quase tudo são expressões.
Considere o exemplo com o qual já lidamos, '$a = 5'.
É fácil ver que há dois valores envolvidos aqui, o valor da constante inteira '5', e o valor de $a que está sendo atualizado para 5 também.
Mas a verdade é que há um valor adicional envolvido, e que é o próprio valor da atribuição.
A própria atribuição é avaliada com o valor atribuído, neste caso 5.
Na prática, significa que '$a = 5', independente do que faça, é uma expressão com o valor 5.
Portanto, escrever algo como '$b = ($a = 5)' é como escrever '$a = 5; $b = 5; '(um ponto-e-vírgula marca o fim do comando).
Como atribuições são analisadas da direita para a esquerda, você também pode escrever '$b = $a = 5'.
Outro bom exemplo de orientação de expressão é o pré e o pós-incremento e decremento.
Usuários de PHP / FI 2 e muitas outras linguagens podem estar familiarizados com a notação de variável+ + e variável--.
Estes são os operadores de incremento e decremento.
No PHP / FI 2, o comando '$a++' não tem valor (não é uma expressão), e portanto você não pode atribuir desta forma ou usá-la de jeito nenhum.
O PHP evoluiu a capacidade de incremento / decremento criando estas expressões também, como em C.
Em PHP, como em C, há dois tipos de incremento - pré-incremento e pós-incremento.
Tanto o pré-incremento quanto o pós-incremento, essencialmente, incrementam variáveis, e o efeito sobre a variável é idêntico.
A diferença é com o valor da expressão de incremento.
O pré-incremento, que é escrito '++$variavel', é avaliado como o valor de incremento (o PHP incrementa a variável antes de ler seu valor, por isso o nome pré-incremento).
O pós-incremento, que é escrito '$variavel++' é avaliado como o valor original da variável, antes de ser incrementada (o PHP incrementa a variável depois de ler seu valor, por isso o nome 'pós-incremento').
Um tipo muito comum de expressão são expressões de comparação.
Estas expressões são avaliadas como 0 ou 1, significando FALSE ou TRUE, respectivamente.
O PHP suporta (maior que), = (maior ou igual), == (igual), != (diferente), (menor que) e =(menor ou igual).
Estas expressões são usadas mais freqüentemente dentro de instruções condicionais, como em comandos if.
O último exemplo de expressões com que nós vamos lidar aqui são as expressões combinadas operador-atribuição.
Você já sabe que se você quer incrementar $a de 1, você só precisa escrever '$a++' ou '++$a '.
Mas e se você quiser somar mais que um a ele, por exemplo 3?
Você poderia escrever '$a++' várias vezes, mas esta obviamente não é uma forma muito eficiente ou confortável.
Uma prática muito mais comum é escrever '$a = $a + 3'. '$a + 3' é avaliada como o valor de $a mais 3, e é atribuído de volta a $a, que resulta em incrementar $a de 3.
Em PHP, como em várias outras linguagens como o C, você pode escrever isto de uma forma mais curta, que com o tempo se torna mais limpa e rápida de se entender, também.
Somar 3 ao valor corrente de $a pode ser escrito '$a +=3'.
Isto significa exatamente "pegue o valor de $a, some 3 a ele, e atribua-o de volta a $a." Além de ser mais curto e mais limpo, isto também resulta em execução mais rápida.
O valor de '$a += 3', como o valor de uma atribuição regular, é o valor atribuído.
Note que NÃO é 3, mas o valor combinado de $a mais 3 (este é o valor que é atribuído a $a).
Qualquer operador de dois parâmetros pode ser usado neste modo operador-atribuição, por exemplo '$a -= 5' (subtrai 5 do valor de $a), '$b *= 7 '(multiplica o valor de $b por 7), etc.
Há mais uma expressão que podem parecer estranha se você não a viu em outras linguagens, o operador condicional ternário:
$primeira? $segunda: $terceira
O seguinte exemplo deve ajudá-lo a entender um pouco melhor pré e pós-incremento e expressões em geral:
function double( $i) {return $i*2;} $b = $a = 5; / * atribui o valor cinco às variáveis $a e $b * / $c = $a++; / * pós-incremento, atribui o valor original de $a (5) para $c * / $e = $d = ++$b; / * pré-incremento, atribui o valor incrementado de $b (6) a $d e $e * / / * neste ponto, tanto $d quanto $e são iguais a 6 * / $f = double($d++); / * atribui o dobro do valor de $d emphasis antes / emphasis do incremento, 2*6 = 12 a $f * / $g = double(++$e); / * atribui o dobro do valor de $e emphasis depois / emphasis do incremento, 2*7 = 14 a $g * / $h = $g += 10; / * primeiro, $g é incrementado de 10 e termina com o valor 24. o valor da atribuição (24) é então atribuído a $h, e $h termina com o valor 24 também. * /
No começo do capítulo, nós dissemos que descreveríamos os vários tipos de comandos, e como prometido, expressões podem ser comandos.
Porém, nem toda expressão é um comando.
Neste caso, um comando tem a forma 'expr' ';', ou seja, uma expressão seguida de ponto-e-vírgula.
E '$b=$a=5 ;', $a=5 é uma expressão válida, mas não é um comando por si só. '$b=$a=5;' porém é um comando válido.
Uma última coisa que vale mencionar é o valor-verdade de expressões.
Em muitos eventos, principalmente em instruções condicionais e loops, você não está interessado no valor específico da expressão, mas somente se ela significa TRUE ou FALSE (o PHP não tem um tipo booleano dedicado).
As constantes TRUE e FALSE (insensitivas ao caso) são seus dois valores booleanos possíveis.
As vezes uma expressão é automaticamente convertida para um booleano.
Veja a seção sobre type-casting para detalhes de como isso é feito.
O PHP fornece uma implementação completa e poderosa de expressões, e a completa documentação dela vai além do escopo deste manual.
Os exemplos acima devem dar a você uma boa idéia sobre o que são as expressões e como você pode construir expressões úteis.
Através do restante do manual nós escreveremos expr ou expressao para indicar qualquer expressão PHP válida.
Anterior
Principal
Próxima
Constantes Predefinidas
Acima
Operadores
Manual do PHP
Anterior
Capítulo 14.
Próxima
Construtores
Cuidado
Os construtores se comportam diferentemente entre o PHP 3 e o PHP 4.
A semântica do PHP 4 é atualmente preferencial.
Construtores são funções numa classe que são automaticamente chamados quando você cria uma nova instância da classe com new.
No PHP 3, uma função se torna um construtor quando ele tem o mesmo nome da classe.
No PHP 4, uma função se torna um construtor quando ele tem o mesmo nome da classe onde ela foi definida (a diferença é sutil, mas crucial -- - veja abaixo).
/ / Funciona no PHP 3 e 4 class CarrinhoDeComprasAutomatico extends CarrinhoDeCompras {function CarrinhoDeComprasAutomatico() {$this - add_item ("10", 1);}}
Isto define uma classe chamada CarrinhoDeComprasAutomatico que é um CarrinhoDeCompras mais um construtor que inicializa o carrinho com um item do artigo numero "10" cada vez que um novo CarrinhoDeComprasAutomatico for criado com "new ".
Construtores pode ter argumentos e esses argumentos podem ser opcionais, o que os torna muito mais práticos.
Para permitir a criação de classes sem parâmetros, todos os parâmetros dos construtores pode ser feitos opcionais simplesmente por terem valores default.
/ / Funciona no PHP 3 e 4 class CarrinhoDeComprasComConstrutor extends CarrinhoDeCompras {function CarrinhoDeComprasComConstrutor($item = "10", $num = 1) {$this - add_item ($item, $num);}} / / Fazendo compras do mesmo modo antigo $carrinho_default = new CarrinhoDeComprasComConstrutor; / / Fazendo compres de verdade $carrinhho_diferente = new CarrinhoDeComprasComConstrutor("20", 17);
Você pode usar o operador @ para esconder erros gerados no construtor do objeto, por exemplo: @new.
Cuidado
No PHP 3, classes derivadas e construtores tem uma série de limitações.
Os exemplo seguintes precisam ser lidos cuidadosamente para que você entenda essas limitações.
class A {function A() {echo "Eu sou o construtor de A. br \n";}} class B extends A {function C() {echo "Eu sou uma função normal. br \n";}} / / nenhum construtor é chamado no PHP 3 $b = new B;
No PHP 3, nenhum construtor é chamado no exemplo acima.
A regra no PHP 3 é: 'Um construtor é uma função com o mesmo nome da classe'.
O nome da classe é B, e não há nenhuma função chamada B() na classe B.
Nada ocorre.
Isto foi corrigido no PHP 4 pela instrução de outra regra:
Se uma classe não tem construtor, o construtor da classe base é chamado, se existir.
O exemplo acima teriam impresso 'Eu sou o construtor de A br'. no PHP 4.
class A {function A() {echo "Eu sou o construtor de A. br \n";} function B() {echo "Eu sou uma função normal chamada B na classe A. br \n"; echo "Eu não sou o construtor de A. br \n";}} class B extends A {function C() {echo "Eu sou uma função normal. br \n";}} / / Isto irá chamar B() como um construtor. $b = new B;
No PHP 3, a função B() na classe A se tornará silenciosamente um construtor na classe B, mesmo que isso nunca tenha sido planejado.
A regra no PHP 3 é: 'Um construtor é uma função com o mesmo nome da classe'.
PHP 3 não se preocupa se a função foi definida na classe B, ou se ela foi herdada.
Isto foi corrigido no PHP 4 pela modificação da regra para: 'Um construtor é uma função com o mesmo nome da classe onde ela é definida.'.
Assim, no PHP 4, como a classe B não tem nenhuma função construtora definida nela mesma então o construtor da classe base será chamado, imprimindo 'Eu sou o construtor de A. br'.
Cuidado
Nem o PHP 3 ou o 4 chamam automaticamente os construtores da classe base a partir do construtor da classe derivada.
É de sua responsabilidade propagar a chamada dos construtores herança acima, onde apropriado.
Nota:
Não existem destrutores no PHP 3 ou 4.
Mas você pode usar register_shutdown_function() para simular a maioria dos efeitos de destrutores.
Destrutores são funções que são chamadas automaticamente quando um objeto é destruído, ou pela utilização de unset() ou pela simples saída do escopo.
Não existem destrutores no PHP.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Classes e Objetos
Uma classe é uma coleção de variáveis e funções trabalhando com essas variáveis.
?php class CarrinhoDeCompras {var $items; / / Itens do carrinho de compras / / Acrescenta a quantidade $num do artigo $artnr no carrinho function add_item ($artnr, $num) {$this - items[$artnr] += $num;} / / Retira a quantidade $num de artigos $artnr do carrinho function remove_item ($artnr, $num) {if ($this - items[$artnr] $num) {$this - items[$artnr] -= $num; return true;} else {return false;}}}?
Isto define uma classe chamada CarrinhoDeCompras que consiste de uma matriz associativa de artigos no carrinho e duas funções para acrescentar e remover itens deste carrinho.
Cuidado
Os cuidados a seguir devem ser tomados a partir do PHP 4:
O nome stdClass é utilizado internamente pela Zend e é uma palavra reservada.
Você não pode ter uma classe chamada stdClass no PHP.
O nome de função __sleep e __wakeup O nome de função __sleep e __wakeup são especialmente mágicos para as classes PHP.
Você não pode ter esses nomes em nenhuma de suas classes a não ser que você deseje aplicar essa funcionalidade mágica com elas.
Veja abaixo para mais detalhes.
O PHP reserva todos os nomes de funções começando com __ como mágicas.
É recomendável que você não utilize nome de funções começando com __ no PHP a não ser que você precise dessas funcionalidades mágicas.
Nota:
No PHP 4, somente inicializações com constantes são permitidas para variáveis com var.
Para inicializar variáveis com valores não constantes, você precisará de uma função de inicialização chamada automaticamente quando o objeto for construído a partir da classe.
Por isso, essa função é conhecida como construtor (veja baixo).
?php / * Nenhuma delas funcionarão com o PHP 4 * / class CarrinhoDeCompras {var $data_de_hoje = date("Y-m-d"); var $nome = $primeiro_nome; var $proprietario = 'Fred '. 'Jones'; var $items = array("VCR", "TV");} / * Esta é a forma como deve ser feito * / class CarrinhoDeCompras {var $data_de_hoje; var $nome; var $proprietario; var $items; function CarrinhoDeCompras() {$this - data_de_hoje = date("Y-m-d"); $this - nome = $GLOBALS['primeiro_nome']; / * etc... * /}}?
Classes são tipos, ou seja, são apenas um modelo das variáveis normais.
Você pode criar uma variável (ou instância) do tipo desejado com o operador new.
?php $carrinho = new CarrinhoDeCompras; $carrinho - add_item("10", 1); $outro_carrinho = new CarrinhoDeCompras; $outro_carrinho - add_item("0815", 3);
Isto cria os objetos $carrinho e $outro_carrinho, ambos a partir da classe CarrinhoDeCompras.
A função add_item() do objeto $carrinho foi chamada e acrescentou 1 item do artigo número 10 a ele.
3 itens do artigo número 0815 foi acrescentado no $outro_carrinho.
Ambos, $carrinho e $outro_carrinho, tem as funções add_item(), remove_item() e a variável itens.
Elas são funções e variáveis distintas entre si.
Você pode pensar no objetos como os diretórios de um sistema de arquivos.
Num disco você pode ter dois arquivos diferentes README.TXT, partindo de que eles estão em diretórios diferentes.
Da mesma forma que você teria de especificar o caminho completo para acessar cada arquivo a partir do diretório principal, você também tem de especificar o nome completo do objeto e função que você quer chamar.
Em termos do PHP, o diretório principal pode ser o escopo global de nomes, e o separador de diretórios -.
Portanto, os nomes $carrinho - items e $outro_carrinho - items são duas variáveis diferentes.
Note que a variável é chamada $carrinho - items e não $carrinho - $items, mesmo porque, um nome de variável em PHP tem apenas um único sinal de cifrão.
/ / correcto, apenas um $$carrinho - items = array( "10 "= 1); / / inválido, porque $carrinho - $items se transforma em $carrinho -" "$carrinho - $items = array("10" = 1); / / correto, mas pode ou não ser o que você quer: / / $carrinho - $myvar se torna $carrinho - items $myvar = 'items'; $carrinho - $myvar = array("10 "= 1);
Quando definindo uma classe, você não pode saber com que nome os objetos serão acessados em seus programas: enquanto escrevia a classe CarrinhoDeCompras, é impossível saber se o objeto criado a partir dela será chamado $carrinho ou $outro_carrinho (ou ainda ambos).
Assim, você não pode escrever $carrinho items dentro da própria classe CarrinhoDeCompras.
Entretanto, para poder acessar suas próprias funções e variáveis de dentro da classe, pode-se utilizar a pseudo-variável $this, que pode ser lida como 'eu mesmo' ou 'objeto atual '.
Dessa forma, '$this - items[$artnr] += $num' pode ser lido como 'acrescente $num para o contador $artnr do meu array items 'ou 'acrescente $num para o contador $artnr do array do objeto atual'.
Nota:
Há funções muito boas para manipulação de classes e objetos.
Dê uma olhada em Funções de Classes e Objetos
Anterior
Principal
Próxima
Funções variáveis
Acima
Manual do PHP
Anterior
Capítulo 14.
Próxima
As funções mágicas __sleep e __wakeup
serialize() verifica se sua classe tem uma função com o nome mágico __sleep.
Se sim, essa função será executada antes de qualquer serialização.
Assim é possível controlar a persistência do objeto enquanto deve retornar um array com os nomes de todas as variáveis daquele objeto que precisam ser serializadas.
__sleep é planejado para fechar quaisquer conexões com bancos de dados que o objeto tenha, realizar commits pendentes ou realizar tarefas de limpeza semelhantes.
A função também é útil se você tem objetos muito grandes que não precisam ser salvos completamente.
Da mesma forma, unserialize() verifica pela presença de uma função com o nome mágico __wakeup.
Se presente, esta função pode reconstruir quaisquer recursos que o objeto tenha.
__wakeup é planejado para restabelecer conexões com bancos de dados perdidas durante a serialização e para realizar outras tarefas de reinicialização.
Anterior
Principal
Próxima
Serializando objetos - objetos em sessões
Acima
Referências dentro do construtor
Manual do PHP
Anterior
Capítulo 14.
Próxima
Referências dentro do construtor
A criação de referências em construtores pode gerar resultados confusos.
Esta seção tentará ajudá-lo e evitar essas situações.
class Foo {function Foo($name) {/ / cria uma referencia dentro do array global $globalref global $globalref; $globalref[] = $this; / / configura o nome conforme o parametro $this - setName($name); / / e o mostra $this - echoName();} function echoName() {echo "br ",$this - name;} function setName($name) {$this - name = $name;}}
Vamos verificar, abaixo, se há alguma diferença entre $bar1, que foi criado usando operador de cópia =, e $bar2 que foi criado usando o operador de referência =...
$bar1 = new Foo( 'configurado no construtor'); $bar1 - echoName(); $globalref[0] - echoName(); / * saida: configurado no construtor configurado no construtor configurado no construtor * / $bar2 = new Foo('configurado no construtor'); $bar2 - echoName(); $globalref[1] - echoName(); / * saida: configurado no construtor configurado no construtor configurado no construtor * /
Aparentemente não há nenhuma diferença, mas de fato há uma muito significativa: $bar1 e $globalref[ 0] não se referenciam, elas NÃO são a mesma variável.
Ao invés, retorna uma cópia.
Nota:
Isto não causa perda de performance (desde que o PHP 4 usa a contagem de referências) retornando copias em vez de referências.
Do contrário, isso oferece melhora por simplificar o trabalho com cópias ao invés de referências, porque a criação de referências toma mais tempo enquanto a criação de cópias virtualmente não toma tempo algum (a não ser no caso de grandes arrays ou objetos, onde um deles é modificado e o(s) outro(s) também na seqüência, então é melhor usar referências para mudar todos ao mesmo tempo).
O que voce espera? / / Voce pode acreditar que ambos $bar1 e $globalref[ 0] mudem seus nomes... $bar1 - setName('configurado por fora'); / / Como mencionado, este nao eh o caso. $bar1 - echoName(); $globalref[0] - echoName(); / * output: configurado por fora configurado no construtor * / / / Agora vamos ver a diferenca entre $bar2 e $globalref[1] $bar2 - setName('configurado por fora'); / / Por sorte, eles nao sao apenas iguais, eles sao a mesma variavel / / Assim, $bar2 - name e $globalref[1] - name sao o mesmo tambem $bar2 - echoName(); $globalref[1] - echoName(); / * output: configurado por fora configurado por fora * /
Entenda-o com cuidado.
class A {function A($i) {$this - value = $i; / / tente entender porque aqui nos nao precisamos de referencia $this - b = new B($this);} function createRef() {$this - c = new B($this);} function echoValue() {echo "br" ,"classe ",get_class($this) ,': ',$this - value;}} class B {function B ($a) {$this - a = $a;} function echoValue() {echo "br" ,"classe ",get_class($this) ,': ',$this - a - value;}} / / Tente entender porque usando uma simples copia aqui ter / / um resultado indesejavel na linha marcada com * $a = new A(10); $a - createRef(); $a - echoValue(); $a - b - echoValue(); $a - c - echoValue(); $a - value = 11; $a - echoValue(); $a - b - echoValue(); / / * $a - c - echoValue(); / * output: classe A:
10 classe B:
10 classe B:
10 classe A:
11 classe B:
11 classe B:
Anterior
Principal
Próxima
As funções mágicas __sleep e __wakeup
Acima
Referências
Manual do PHP
Anterior
Capítulo 14.
Próxima
Serializando objetos - objetos em sessões
Nota:
No PHP 3, objetos perdem suas associações entre classes através do processo de serialização e desserialização.
A variável resultante é do tipo objeto, mas sem classe nem métodos, algo bem sem utilidade (de fato, ele se torna apenas um array com uma sintaxe engraçada).
Cuidado
As informações seguintes se aplicam somente ao PHP 4.
serialize() retorna uma string contendo uma representação linear de qualquer valor que pode ser armazenado no PHP. unserialize() pode ser utilizado para recriar os valores da variável original.
Usando serialize para salvar um objeto irá preservar todas as variáveis de um objeto.
As funções de um objeto não serão salvas, apenas o nome da classe.
Para ser possível fazer o unserialize() de um objeto, a classe do objeto precisa estar definida.
Ou seja, se você tem um objeto $a da classe A em page1.php e a serializa, você consegue uma string que se refere a classe A e contém todos os valores de variáveis contidos em $a.
Se você precisa desserializa-la em page2.php, recriando $a da classe A, a definição da classe A precisa estar presente na page2.php.
Isto pode por ser feito, por exemplo, armazenando a definição da classe A em um arquivo separado, incluindo este arquivo e ambos os arquivos page1.php e page2.php.
classe_a.inc.php: class A {var $um = 1; function mostre_um() {echo $this - um;}} page1.php: include("classe_a.inc.php"); $a = new A; $s = serialize($a); / / armazena $s em algum lugar que page2,php possa encontra-la $fp = fopen("armazenamento", "w"); fputs($fp, $s); fclose($fp); page2.php: / / Isto e preciso para que unserialize funcione normalmente include("classe_a.inc.php"); $s = implode("", @file("armazenamento")); $a = unserialize($s); / / Agora podemos usar a funcao mostre_um() do objeto $a $a - mostre_um();
Se você está utilizando sessões e usar session_register() para registrar objetos, esses objetos serão serializados automaticamente no final de cada script PHP, e automaticamente desserializados em cada uma das páginas seguintes.
Isto significa que esse objetos podem estar em qualquer uma de suas páginas desde que elas sejam parte de sua sessão.
É extremamente recomendável que você inclua as definições de classe de todos os objetos registrados de todas as suas páginas, mesmo que você não use essas classes em todas as suas páginas.
Se você não o fizer e um objeto for desserializado sem sua definição de classe presente, ele perde usa associação com a classe e se torna um objeto da classe stdClass, sem qualquer funções disponíveis. o que as deixa silenciosamente sem funcionalidade.
Assim, se no exemplo acima $a se tornar parte de uma sessão pela utilização de session_register( "a"), você precisa incluir o arquivo classe_a.inc.php em todos as suas páginas, não somente em page1.php e page2.php.
Anterior
Principal
Próxima
Acima
As funções mágicas __sleep e __wakeup
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores Aritméticos
Lembra-se da aritmética básica da escola?
Estes operadores funcionam exatamente como aqueles.
Tabela 11-2.
Operadores Aritméticos
Exemplo
Nome
Resultado
Adição
Soma de $a e $b.
Subtração
Diferença entre $a e $b.
Multiplicação
Produto de $a e $b.
Divisão
Quociente de $a por $b.
Módulo
Resto de $a dividido por $b.
O operador de divisão ("/") sempre retorna um valor com ponto flutuante, mesmo que os dois operandos sejam inteiros (ou strings que sejam convetidos para inteiros).
Anterior
Principal
Próxima
Operadores
Acima
Operadores de Atribuição
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de Arrays
O único operador de arrays no PHP é o +.
Ele acrescenta o array informado à direita no array informado à esquerda, onde chaves duplicadas NÃO são sobrescritos.
$a = array( "a "= "maçã", "b" = "banana"); $b = array("a "= "pêra", "b" = "framboesa", "c "= "morango"); $c = $a + $b; var_dump($c);
array( 3) {["a"]= string(5) "maçã "["b"]= string(6) "banana" ["c"]= string(6) "morango "}
Anterior
Principal
Próxima
Operadores de String
Acima
Estruturas de Controle
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de Atribuição
O operador básico de atribuição é "=".
A sua primeira inclinação deve ser a de pensar nisto como "é igual".
Não.
Isto quer dizer, na verdade, que o operando da esquerda recebe o valor da expressão da direita (ou seja, "é configurado para").
O valor de uma expressão de atribuição é o valor atribuído.
Ou seja, o valor de "$a = 3" é 3.
Isto permite que você faça alguns truques:
$a = ($b = 4) + 5; / / $a é igual a 9 agora e $b foi configurado como 4.
Além do operador básico de atribuição, há "operadores combinados" para todos os operadores binários, aritméticos e de string, que permitem a você pegar um valor de uma expressão e então usar seu próprio valor para o resultado daquela expressão.
Por exemplo:
$a = 3; $a += 5; / / configura $a para 8, como se disséssemos: $a = $a + 5; $b = "Bom "; $b .= "Dia !"; / / configura $b para "Bom Dia !", como em $b = $b. "Dia !";
Note que a atribuição copia a variável original para a nova (atribuição por valor), assim a mudança de uma não afeta a outra.
Isto pode ter relevância se você precisa copiar algo como uma grande matriz dentro de um loop longo.
O PHP 4 suporta atribuições por referência, usando a sintaxe $var = $outra_var;, mas isto não é possível no PHP3. 'Atribuição por referência 'significa que ambas as variáveis acabam apontando para os mesmos dados, e nada é copiado para lugar nenhum.
Para aprender mais sobre referências, leia Referências explicadas.
Anterior
Principal
Próxima
Operadores Aritméticos
Acima
Operador Bit-a-bit
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operador Bit-a-bit
Operadores bit-a-bit permitem que você acione ou desligue bits específicos dentro de um inteiro.
Se ambos os parâmetros da esquerda e da direita forem strings, esses operadores irão trabalhar nos caracteres dessa string.
?php echo 12 ^ 9; / / Imprime '5 'echo "12 "^ "9"; / / Imprime o caracter de volta (backspace - ASCII 8) / / ('1' (ASCII 49)) ^ ('9 '(ASCII 57)) = 8 echo "hallo" ^ "hello"; / / Imprime os valores ASCII 0 4 0 0 0 / / 'a' ^ 'e '= 4?
Tabela 11-3.
Operadores Bit-a-bit
Exemplo
Nome
Resultado
E
Os bits que estão ativos tanto em $a quanto em $b são ativados.
OU
Os bits que estão ativos em $a ou em $b são ativados.
XOR
Os bits que estão ativos em $a ou em $b, mas não em ambos, são ativados.
NÃO
Os bits que estão ativos em $a não são ativados, e vice-versa.
Deslocamento à esquerda
Desloca os bits de $a $b passos para a esquerda (cada passo significa "multiplica por dois")
Deslocamento à direita
Desloca os bits de $a $b passos para a direita (cada passo significa "divide por dois")
Anterior
Principal
Próxima
Operadores de Atribuição
Acima
Operadores de Comparação
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de Comparação
Operadores de comparação, como os seus nomes implicam, permitem que você compare dois valores.
Tabela 11-4.
Operadores de comparação
Exemplo
Nome
Resultado
Igual
Verdadeiro (TRUE) se $a é igual a $b.
Idêntico
Verdadeiro (TRUE) se $a é igual a $b, e eles são do mesmo tipo (somente para PHP4).
Diferente
Verdadeiro se $a não é igual a $b.
Diferente
Verdadeiro se $a não é igual a $b.
Não idêntico
Verdadeiro de $a não é igual a $b, ou eles não são do mesmo tipo (somente para o PHP4).
Menor que
Verdadeiro se $a é estritamente menor que $b.
Maior que
Verdadeiro se $a é estritamente maior que $b.
Menor ou igual
Verdadeiro se $a é menor ou igual a $b.
Maior ou igual
Verdadeiro se $a é maior ou igual a $b.
Outro operador condicional é o operador "?:" (ou trinário), que opera como no C e em muitas outras linguagens.
Anterior
Principal
Próxima
Operador Bit-a-bit
Acima
Operadores de controle de erro
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de controle de erro
O PHP suporta um operador de controle de erro: o sinal 'arroba' (@).
Quando ele precede uma expressão em PHP, qualquer mensagem de erro que possa ser gerada por aquela expressão será ignorada.
Se o recurso track_errors estiver habilitado, qualquer mensagem de erro gerada pela expressão será gravada na variável global $php_errormsg.
Esta variável será sobrescrita em cada erro, assim verifique-a constantemente se você quiser usá-la.
?php / * Erro de arquivo intencional * / $my_file = @file ('arquivo_nao_existente') ou die ("Falha abrindo arquivo: '$php_errormsg'"); / / Isto funciona para qualquer expressão, não apenas para funções: $value = @$cache[$key]; / / você não receberá nenhum aviso se a chave $key não existir.?
Nota:
O operador @ funciona somente em expressões.
Uma regra simples para lembrar disso: se você pode pegar o valor de alguma coisa, você pode prefixar isso com o @.
Assim, você pode prefixar chamadas de variáveis, funções e include() s, constantes e afins.
Você não pode prefixar definições de funções ou classe, estruturas condicionais como o if, foreach e assim por diante.
Veja também: error_reporting().
Nota:
O prefixo de controle de erro "@" não desabilita mensagens que são resultado de erros de interpretação (parse errors).
Atenção
Atualmente, o operador de controle de erro "@" sempre desativa mensagens de erro, mesmo para erros críticos, que terminam a execução de scripts.
Além de outras coisas, isto significa que se você usar "@" para suprimir erros de certas funções e elas não estiverem disponíveis ou com tipos incorretos, o script vai parar exatamente aí sem nenhuma indicação da razão.
Anterior
Principal
Próxima
Operadores de Comparação
Acima
Operadores de Execução
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de Execução
O PHP suporta um operador de execução: acentos graves (``).
Note que não são apóstrofes!
O PHP tentará executar o conteúdo dos acentos graves como um comando do shell; a saída será retornada (isto é, ela não será simplesmente descarregada para a saída; ela pode ser atribuída a uma variável).
Nota:
O operador de execução fica desabilitado quando o safe mode está ativo ou shell_exec() está desabilitado.
Veja também: escapeshellcmd(), exec(), passthru(), popen(), shell_exec() e system().
Anterior
Principal
Próxima
Operadores de controle de erro
Acima
Operadores de Incremento / Decremento
Anterior
Capítulo 11.
Operadores
Precedência de Operadores
Por exemplo, na expressão, 1 + 5 * 3, a resposta é 16 e não 18 porque o operador de multiplicação ("*") tem prioridade de precedência que o operador de adição ("+").
A tabela seguinte mostra a precedência dos operadores, da menor precedência para a maior.
Tabela 11-1.
Precedência dos operadores
Operador
esquerda
não associativo
não associativo
esquerda
direita
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de Incremento / Decremento
O PHP suporta operadores de pré e pós-incremento e decremento no estilo C.
Tabela 11-5.
Operadores de Incremento / Decremento
Exemplo
Nome
Efeito
Pré-incremento
Incrementa $a em um, e então retorna $a.
Pós-incremento
Retorna $a, e então incrementa $a em um.
Pré-decremento
Decrementa $a em um, e então retorna $a.
Pós-decremento
Retorna $a, e então decrementa $a em um.
Aqui está um script de exemplo simples:
?php echo "h3 Pós-incremento / h3"; $a = 5; echo "Deve ser 5: ". $a+ +." br / \n"; echo "Deve ser 6: ". $a." br / \n"; echo "h3 Pré-incremento / h3"; $a = 5; echo "Deve ser 6: ". ++$a." br / \n"; echo "Deve ser 6: ". $a." br / \n"; echo "h3 Pós-decremento / h3"; $a = 5; echo "Deve ser 5: ". $a- -." br / \n"; echo "Deve ser 4: ". $a." br / \n"; echo "h3 Pré-decremento / h3"; $a = 5; echo "Deve ser 4: ". --$a." br / \n"; echo "Deve ser 4: ". $a." br / \n";?
Anterior
Principal
Próxima
Operadores de Execução
Acima
Operadores Lógicos
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores Lógicos
Tabela 11-6.
Operadores Lógicos
Exemplo
Nome
Resultado
E
Verdadeiro (TRUE) se tanto $a quanto $b são verdadeiros.
OU
Verdadeiro se $a ou $b são verdadeiros.
XOR
Verdadeiro se $a ou $b são verdadeiros, mas não ambos.
NÃO
Verdadeiro se $a não é verdadeiro.
E
Verdadeiro se tanto $a quanto $b são verdadeiros.
OU
Verdadeiro se $a ou $b são verdadeiros.
A razão para as duas variantes dos operandos "and" e "or "é que eles operam com precedências diferentes. (Veja Precedência de Operadores.)
Anterior
Principal
Próxima
Operadores de Incremento / Decremento
Acima
Operadores de String
Manual do PHP
Anterior
Capítulo 11.
Próxima
Operadores de String
Há dois operadores de string.
O primeiro é o operador de concatenação ('.'), que retorna a concatenação dos seus argumentos direito e esquerdo.
O segundo é o operador de atribuição de concatenação ('.='), que acrescenta o argumento do lado direito no argumento do lado esquerdo.
Veja em Operadores de Atribuição para mais informações.
$a = "Olá"; $b = $a. "mundo !"; / / agora $b contém "Olá mundo! "$a = "Olá"; $a .= "mundo !"; / / agora $a contém "Olá mundo! "
Anterior
Principal
Próxima
Operadores Lógicos
Acima
Operadores de Arrays
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
mixed
mixed indica que um parâmetro pode aceitar vários (mas não necessariamente todos) os tipos
gettype(), por exemplo, aceita todos os tipos do PHP, enquanto str_replace() somente aceita strings e arrays.
number indica que um parâmetro pode ser tanto um integer ou float.
Exemplo 7-11.
Exemplo de funções callback
?php / / Exemplo simples de callback function foobar() {echo "Olá mundo !";} call_user_function("foobar"); / / Exemplo de métodos callback class foo {function bar() {echo "Olá mundo !";}} $foo = new foo; call_user_function(array($foo, "bar")); / / chamada do método do objeto call_user_function(array("foo", "bar")); / / chamada do método estático da classe?
Anterior
Principal
Próxima
Acima
Manipulação de tipos
Manual do PHP
Anterior
Capítulo 15.
Próxima
O que as referências não são
Como dito anteriormente, referências não são ponteiros.
Isto significa que o construtor seguinte não fará o que você espera:
Acontece que $var na função foo estará apontada para $bar na chamada, mas ela será re-apontada para $GLOBALS[ "baz"].
Não existe maneira de apontar $bar no escopo chamador para qualquer outra coisa utilizando o mecanismo de referências, desde que $bar não está disponível na função foo (ela é representa por $var, mas $var somente tem o conteúdo da variável e não um relacionamento nome para valor na tabela simbólica).
Anterior
Principal
Próxima
O as referências fazem
Acima
Passagem por referência
Manual do PHP
Anterior
Próxima
Referências
Referências, em PHP, significa acessar o mesmo conteúdo de variável através de vários nomes.
Note que no PHP nomes de variáveis e conteúdo de variável são tratados diferentemente, então um mesmo conteúdo pode ter nomes diferentes.
A analogia mais próxima é a dos arquivos e seus nomes em sistemas UNIX: nomes de variáveis são o caminho completo dos arquivos, enquanto o conteúdo da variável são os dados desse arquivo.
Assim, referências pode ser tomadas como os links físicos dentro do sistema de arquivos UNIX.
Anterior
Principal
Próxima
Referências dentro do construtor
Acima
O as referências fazem
Manual do PHP
Anterior
Capítulo 15.
Próxima
Passagem por referência
Você pode passar variáveis para funções por referência, então a função poderá modificar seus argumentos.
A sintaxe é a seguinte:
function foo ($var) {$var++;} $a=5; foo ($a); / / $a é 6 aqui
As coisas a seguir podem ser passadas por referência:
Exemplo: foo( $a)
Exemplo foo( new foobar())
Exemplo:
Nenhuma outra expressão poderá ser passada por referência, com resultados indefinidos.
Por exemplo, o exemplo seguinte de passagem por referência é inválido:
function bar() / / Note a falta do {$a = 5; return $a;} foo(bar()); foo($a = 5) / / Expressão, não é variável foo(5) / / Constante, não é variável
Anterior
Principal
Próxima
O que as referências não são
Acima
Retornando referências
Manual do PHP
Anterior
Capítulo 15.
Próxima
Retornando referências
Retorno por referência é útil quando você precisa utilizar uma função para localizar variável cuja referência precisa ser obtida.
Para retornar referências, utilize esta sintaxe:
function procura_var ($param) {...codigo... return $variavel_encontrada;} $foo = procura_var ($bar); $foo - x = 2;
Nota:
Diferentemente da passagem de parâmetros por referência, aqui você precisa utilizar em ambos os lugares -- - primeiro para indicar o retorno por referência (e não a cópia), e depois para indicar a ligação da referência (em vez da assimilação convencional) que precisa ser explícita.
Anterior
Principal
Próxima
Passagem por referência
Acima
Destruindo referências
Manual do PHP
Anterior
Capítulo 15.
Referências
Próxima
Vários construtores sintáticos do PHP são implementados através de mecanismos de referência, assim, tudo o explicado até aqui sobre referências também se aplica a esses construtores.
Alguns desses construtores, como a passagem e o retorno de referências foram mencionados acima.
Outros construtores que também utilizam referências são:
Quando você declara uma variável com global, você está de fato criando um referência para a variável global.
Isto significa que isto é o mesmo que:
$this
Num método de objeto, $this sempre referencia o instância atual.
Anterior
Principal
Próxima
Destruindo referências
Acima
Características
Manual do PHP
Anterior
Capítulo 15.
Próxima
Destruindo referências
Quando você quebra uma referência, ela apenas pára de fazer o apontamento entre o nome da variável e o conteúdo.
Mas isto não significa que o conteúdo da variável será destruído.
Por exemplo:
Novamente, é mais fácil pensar em analogia ao comando UNIX unlink.
Anterior
Principal
Próxima
Retornando referências
Acima
Demonstrando referências
Manual do PHP
Anterior
Capítulo 15.
Próxima
O as referências fazem
Referências PHP permitem fazer duas variáveis se referirem ao mesmo conteúdo.
Ou seja:
A mesma sintaxe pode ser utilizada com funções, que retornem referências, e com o operador new (a partir do PHP 4.0.4):
Nota:
A não utilização do operador causará a cópia do objeto.
Se você utiliza $this em classes, ele operará na instância atual do objeto.
A assimilação sem irá copiar a instância (o objeto em si) e $this irá operar na cópia, podendo não ser esse procedimento sempre desejável.
Normalmente você precisará trabalhar com uma instância única, seja por motivos de performance ou de consumo de memória.
Você pode utilizar o operador @ para esconder quaisquer erros em construtores na forma @new, mas isto não funciona quando utilizada a instrução new.
Esta é uma limitação da Zend Engine e irá gerar um erro de interpretação (parser error).
A segunda coisa que referências permitem é passar variáveis por referência.
Isto é feito marcando uma variável local de uma função e a variável do escopo chamador como referências ao mesmo conteúdo.
Exemplo:
Em terceiro lugar, referências permitem também retorno por referência.
Anterior
Principal
Próxima
Referências
Acima
O que as referências não são
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
Arrays
Um array no PHP é atualmente um mapa ordenado.
Este tipo é otimizado de várias maneiras, então você pode usá-lo como um array real, ou uma lista (vetor), hashtable (que é uma implementação de mapa), dicionário, coleção, pilha, fila e provavelmente mais.
A explicação dessas estruturas estão além do escopo desse manual, mas você pode encontrar exemplos para cada uma dessas estruturas a seguir.
Para mais informações sobre estruturas, refira-se a literatura externa sobre esses tópicos.
Sintaxe
Especificando com array()
Um array pode ser criado com o construtor de linguagem array().
Ele pega um certo número de pares separados por vírgula chave = valor.
Se a chave é uma representação padrão de um inteiro, ele será interpretado assim (por exemplo, "8 "será interpretado como 8, enquanto "08" será interpretado como "08 ").
O valor pode ser qualquer coisa.
Se omitir a chave, o maior índice inteiro é obtido, e a nova chave será esse máximo + 1.
Como inteiros podem ser negativos, isto também é verdadeiro para índices negativos.
Sendo, por exemplo, o maior índice -6, resultará em um novo índice -5.
Se nenhum índice inteiro existir ainda, a chave será 0 (zero).
Se você especifica uma chave que já possui um valor assimilada a ela, então o valor é sobrescrito.
Utilizar true como chave será interpretado como inteiro 1 Utilizar true como chave será interpretado como inteiro 1 na chave.
Utilizando false como chave será avaliado como o inteiro 0.
Usar NULL como chave é interpretado como uma string vazia.
Usar uma string vazia como chave irá criar (ou sobrescerver) uma chave com uma string vazia e seu valor, e isto não é o mesmo que usar colchetes vazios.
Você não pode usar arrays ou objetos como chaves.
Fazendo isso resultará em um alerta:
array( [chave =] valor,...) / / chave pode ser string ou integer não negativo / / valor pode ser qualquer coisa
Criando / modificando com a sintaxe de colchetes
Você pode também modificar um array existente, explicitando assimilando valores.
Isto é feito apenas assimilando valores para o array enquanto especificando a chave em colchetes.
$arr[ chave] = valor; $arr[] = valor; / / chave tanto um string ou inteiro não negativo / / valor pode ser qualquer coisa
Funções úteis
Há uma série de funções muito úteis para trabalhar com arrays, veja a seção sobre arrays.
Nota:
Esteja avisado que o array NÃO vai ser reindexado.
$a = array( 1 = 'um', 2 = 'dois', 3 = 'três '); unset ($a[2]); / * irá produzir um array que pode ser definido como $a = array (1= 'um', 3= 'três'); e NÃO $a = array (1 = 'um', 2 = 'três'); * /
foreach foreach existe especificamente para lidar com arrays.
Ele provém uma maneira fácil de percorrer qualquer array.
Array: faça e não faça
Porque $foo[ bar] está errado?
Você sempre deve usar delimitadores em volta um índice de um array associativo.
Por exemplo, utilizar $foo[ 'bar'] e não $foo[bar].
Mas porque $foo[ bar] está errado?
$foo[ bar] = 'inimigo'; echo $foo[bar]; / / etc
Como explicado na seção sintaxe, a chave precisa estar entre colchetes ('[' e ']').
Isto significa que você pode escrever coisas como isso:
echo $arr[ foo(true)];
$error_descriptions[ E_ERROR] = "Um erro fatal ocorreu"; $error_descriptions[E_WARNING] = "O PHP emitiu um alarme"; $error_descriptions[E_NOTICE] = "Apenas um aviso informal";
$error_descriptions[ 1] = "Um erro fatal ocorreu"; $error_descriptions[2] = "O PHP emitiu um alarme"; $error_descriptions[8] = "Apenas um aviso informal";
Então, como é possível que $foo[ bar] funcione?
Funciona porque bar, na sintaxe onde é utilizada é esperada como uma expressão constante.
O PHP, hoje, assume que você quer bar literalmente, como a string "bar", mas que você esqueceu de escrever os delimitadores.
Então, porque isso é tão mal?
Se em algum ponto do futuro, o time do PHP quiser acrescentar outra constante ou palavra chave, você terá problemas.
Por exemplo, se você já não pode utilizar as palavras empty e default dessa maneira, desde que elas são palavras reservadas especiais.
Nota:
Quando você liga error_reporting em E_ALL, você irá ver as notícias que o PHP gera quando um índice é utilizado sem ser definido (coloque a linha error_reporting(E_ALL); em seu script).
Com string s delimitadas por aspas, uma outra sintaxe é válida.
Exemplos
O tipo array do PHP é muito versátil, por isso temos aqui alguns exemplos para mostrar todo o poder dos arrays.
/ / isto $a = array( 'color '= 'vermelha', 'taste '= 'doce', 'shape '= 'redonda', 'name '= 'maçã', 4 / / a chave será 0); / / isto é equivalente a acima $a['cor'] = 'vermelha'; $a['sabor'] = 'doce'; $a['formato'] = 'redonda'; $a['nome'] = 'maçã'; $a[] = 4; / / a chave será 0 $b[] = 'a'; $b[] = 'b'; $b[] = 'c'; / / o mesmo de array (0 = 'a ', 1 = 'b', 2 = 'c '), / / ou simplesmente array('a', 'b', 'c')
Exemplo 7-4.
Utilizando array()
/ / Array como (propriedade -)mapa $map = array ('versão '= 4, 'OS' = 'Linux ', 'lang' = 'inglês ', 'short_tags' = true); / / apenas chaves numéricas $array = array (7, 8, 0, 156, -10); / / que é o mesmo que array (0 = 7, 1 = 8,...) $switching = array (10 / / chave = 0, 5 = 6, 3 = 7, 'a '= 4, 11 / / chave = 6 (o índice máximo era 5), '8' = 2 / / chave = 8 (inteiro!), '02 '= 77 / / chave = '02', 0 = 12 / / o valor 10 será sobrescrito por 12); / / array vazio $empty = array();
Exemplo 7-5.
Coleção
$cores = array( 'vermelho' ,'azul' ,'verde' ,'amarelo'); foreach ($cores as $cor) {echo "Você gosta de $cor?\n";} / * saida:
Você gosta de vermelho?
Você gosta de azul?
Você gosta de verde?
Você gosta de amarelo? * /
Note que atualmente não se pode mudar os valores de um array diretamente dentro de um loop.
Superar essa limitação é possível da seguinte forma:
Exemplo 7-6.
Coleção
foreach ($cores as $key = $cor) {/ / não funciona: / /$cor = strtoupper($cor); / /funciona: $cores[$key] = strtoupper($cor);} print_r($cores); / * saida:
Array ([0] = VERMELHO [1] = AZUL [2] = VERDE [3] = AMARELO) * /
Este exemplo cria um array na base 1.
Exemplo 7-7.
Array baseado em 1
$primeiroquarto = array( 1 = 'Janeiro', 'Fevereiro', 'Março'); print_r($primeiroquarto); / * saida:
Array ([1] = 'Janeiro '[2] = 'Fevereiro' [3] = 'Março ') * /
Exemplo 7-8.
Preenchendo um array real
/ / preenchendo um array com todos os itens de um diretório $handle = opendir( '.'); while ($file = readdir($handle)) {$files[] = $file;} closedir($handle);
Arrays são ordenados.
Você pode mudar sua ordem utilizando vários funções de ordenação.
Veja as funções de arrays para mais informações.
Exemplo 7-9.
Ordenando arrays
sort( $files); print_r($files);
Porque o valor de um array pode ser qualquer coisa, isto pode ser outro array.
Isto pode criar arrays recursivos e multidimensionais.
Exemplo 7-10.
Arrays recursivos e multidimensionais
$fruits = array ("frutas "= array ("a" = "laranja ", "b" = "banana ", "c" = "maçã "), "numeros" = array (1, 2, 3, 4, 5, 6), "buracos "= array ("primeiro", 5 = "segundo ", "terceiro"));
Anterior
Principal
Próxima
Acima
Objetos
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
Booleanos
Umbooleano expressa um valor de verdade.
Ele pode ser TRUE ou FALSE.
Nota:
O tipo booleano foi introduzido no PHP 4.
Para especificar um literal booleano, use as palavras chave TRUE ou FALSE.
Ambas são insensitivas ao caso.
$foo = True; / / assimila o valor TRUE para $foo
Usualmente você pode utilizar algum tipo de operador que retorne um valor booleano, e passá-lo para uma estrutura de controle.
Convertendo para booleano
Para converter explicitamente um valor para booleano, utilize-se dos modificadores (bool) ou (boolean).
Entretanto, na maioria dos casos, você não precisa utilizar o modificador, desde que qualquer valor será convertido automaticamente se um operador, função ou estrutura de controle requerer um argumento booleano.
Veja também Manipulação de tipos.
Quando convertendo para booleano, os seguintes valores são considerados FALSE:
o booleano FALSE
o inteiro 0 (zero)
o ponto flutuante 0.0 (zero)
uma string vazia e a string "0"
um array sem elementos
um objeto sem elementos
o tipo especial NULL (incluindo variáveis não definidas)
-1 é considerado TRUE, como qualquer valor não zero (negativos ou positivos)!
Anterior
Principal
Próxima
Tipos
Acima
Inteiros
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
Números de ponto flutuante (AKA "floats", "doubles "ou "números reais") podem ser especificados utilizando qualquer uma das sintaxes seguintes:
$a = 1.234; $a = 1.2e3; $a = 7E-10;
Precisão de números de ponto flutuante
É sabido que frações simples como 0.1 ou 0.7 não podem ser convertidos em sua representação binária interna sem uma pequena perda de precisão.
Isto pode causar erros confusos: por exemplo, floor( (0.1+0.7)*10) irá retornar 7 em vez do esperado 8, como resultado da representação interna realmente ser algo como 7.9999999999....
Isto está relacionado ao fato de que é impossível expressar, exatamente, algumas frações em notação decimal com um número finito de dígitos.
Por exemplo, 1 / 3 na forma decimal se torna 0.3333333....
Então, nunca confie em resultados com números de ponto flutuante até a última casa e nunca compare números de ponto flutuante em igualdades.
Se você realmente precisar de alta precisão, você pode utilizar as funções matemáticas de precisão arbitrária ou as funções relacionadas ao gmp.
Anterior
Principal
Próxima
Inteiros
Acima
Manual do PHP
Anterior
Próxima
Capítulo 7.
Tipos
Introdução
O PHP suporta os oitos tipos primitivos.
São quatros tipos básicos:
booleano
inteiro
número com ponto flutuante (float)
objeto
O tipo da variável geralmente não é configurado pelo programador: isto é decidido em tempo de execução pelo PHP, dependendo do contexto no qual a variável é usada.
Se você quiser checar o tipo e valor de uma certa expressão, utilize var_dump().
Para verificar por certos tipos, não use gettype(), mas sim as funções is_ type.
Se você quiser forçar a conversão de uma variável para um certo tipo, você pode moldar (casting) a variável ou usar a função settype() nela.
Note que uma variável pode se comportar de maneiras diferentes em certas situações, dependendo de qual tipo ela é no momento.
Para mais informações, veja a seção Manipulação de tipos.
Anterior
Principal
Próxima
Comentários
Acima
Booleanos
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
Um inteiro é um número do conjunto Z = {..., -2, -1, 0, 1, 2,...}.
Veja também:
Inteiros de tamanho arbitrário e Números de ponto flutuante
Inteiros podem ser especificados em notação decimal (base 10), hexadecimal (base 16) ou octal (base 8), opcionalmente precedido de sinal (- ou +).
Para utilizar a notação hexadecimal, preceda número com 0x.
Exemplo 7-1.
Literais inteiras
$a = 1234; # número decimal $a = -123; # um número negativo $a = 0123; # número octal (equivalente a 83 em decimal) $a = 0x1A; # número hexadecimal (equivalente a 26 em decimal)
Overflow de inteiros
Se você especifica um número além dos limites do tipo inteiro, ele será interpretado como um ponto flutuante.
Assim, se você realizar uma operação que resulte em um número além dos limites do tipo inteiro, um ponto flutuante será retornado também.
$numero_grande = 2147483647; var_dump($numero_grande); / / saida: int(2147483647) $numero_grande = 2147483648; var_dump($numero_grande); / / saida: float(2147483648) / / isto também é permitido para especificação de números hexadecimais: var_dump (0x80000000); / / saida: float(2147483648) $milhao = 1000000; $numero_grande = 50000 * $milhao; var_dump($numero_grande); / / saida: float(50000000000)
Atenção
Infelizmente, há um bug no PHP que faz que ele nem sempre trabalhe corretamente quando há números negativos envolvidos.
Por exemplo, quando você faz -50000 * $milhao, o resultado será -429496728.
Entretanto, quando ambos os operadores são positivos, isso não ocorre.
Isto foi resolvido no PHP 4.1.0.
Não há operador de divisão inteira no PHP.
1 / 2 retorna o ponto flutuante 0.5.
Convertendo para inteiro
Para converter explicitamente um valor para inteiro, utilize-se dos modificadores (int) ou (integer).
Veja também Manipulação de tipos.
de booleanos
FALSE será retornado como 0 (zero), e TRUE como 1 (um).
De números de ponto flutuante
Quando convertendo de números de ponto flutuante para inteiros, o número será truncado.
Se o número convertido estiver além dos limites de um inteiro (usualmente + / - 2.15e+9 = 2^31), o resultado é indefinido, mesmo porque o ponto flutuante não tem a mesma precisão para fornecer um resultado inteiro exato.
Não se preocupe, pois nenhum aviso será emitido neste caso!
Atenção
echo (int) ((0.1+0.7) * 10); / / imprime 7!
Veja Conversão de strings
De outros tipos
Cuidado
O comportamento da conversão de um inteiro é indefinido de outros tipos.
Atualmente, o comportamento é o mesmo como se primeiro o valor fosse convertido para booleano.
Entretanto, não confie neste comportamento, pois ele pode mudar sem aviso.
Anterior
Principal
Próxima
Booleanos
Acima
Números de ponto flutuante
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
O valor especial NULL O valor especial NULL representa que a variável não tem valor.
NULL é o único valor possível do tipo NULL.
Nota:
O tipo NULL foi incluído no PHP 4
A variável é considerada NULL se
ela foi assimilada com a constante NULL.
ela ainda não recebeu nenhum valor ainda.
ela foi apagada com unset().
Há apenas um único valor do tipo NULL, e é a palavra (insensitiva ao caso) NULL.
$var = NULL;
Veja também is_null() e unset().
Anterior
Principal
Próxima
Acima
Pseudo-tipos utilizados nesta documentação
Manual do PHP
Anterior
Tipos
Próxima
Objetos
Inicialização de objetos
Para inicializar um objeto, você usa a instrução new, criando uma instância do objeto em uma variável.
?php class foo {function do_foo() {echo "Fazendo foo .";}} $bar = new foo; $bar - do_foo();?
Para uma explicação completa, consulte a seção Classes e Objetos.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Tipos
Próxima
Resource
Recurso é uma variável especial, mantendo uma referência de recurso externo.
Recursos são criados e utilizados por funções especiais.
Veja o apêndice para uma lista de todas essas funções e seus tipos correspondentes.
Nota:
O tipo resource foi incluído no PHP 4
Liberando recursos
Através do sistema de contagem de referências introduzido com o engine da Zend no PHP 4, é automaticamente detectado quando um recurso não mais é referenciado (assim como o Java).
Quando isto acontece, todos os recursos em uso por esse resource são liberados pelo coletor de lixo.
Por essa razão, é raramente necessário liberar memória manualmente utilizando alguma função free_result.
Nota:
Eles não são destruídos pelo coletor de lixo.
Veja também conexões permanentes.
Anterior
Principal
Próxima
Objetos
Acima
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
Strings
No PHP, um caracter é o mesmo que um byte, ou seja, há exatamente 256 caracteres diferentes possíveis.
Isto implica que o PHP não tem suporte nativo ao Unicode.
Nota:
Não há nenhum problema nas strings se tornarem muito grandes.
Sintaxe
Uma string literal pode ser especificada de três formas diferentes.
aspas
sintaxe heredoc
Apóstrofos
A maneira mais simples para especificar uma string é delimitá-la entre apóstrofos (o caracter ').
Para especificar um apóstrofo. você precisará "escapá-la" com uma contra barra (\), como em muitas outras linguagens.
Se uma contra barra precisa ocorrer antes de um apóstrofo ou no final da string, você precisa duplicá-la.
Note que se você tentar escapar qualquer outro caracter, a contra barra também será impressa!
Então geralmente não é necessário escapar a própria contra barra.
Nota:
No PHP 3, um aviso com nível E_NOTICE será emitido quando isto acontecer.
Nota:
Diferentemente das duas outras sintaxes, variáveis não serão substituídas quando elas ocorrerem dentro de strings delimitadas por apóstrofes.
echo 'isto é uma string comum'; echo 'Você pode incluir novas linhas em strings, dessa maneira'; echo 'Arnold disse uma vez: "I\'ll be back"'; / / saida:... "I'll be back "echo 'Você tem certeza em apagar C:\\*.* ?'; / / saida:... apagar C:\*.*? echo 'Você tem certeza em apagar C:\*.* ?'; / / output:... apagar C:\*.*? echo 'Estou tentando incluir uma nova linha \n neste ponto'; / / output:... nova linha \n neste ponto
Aspas
Se a string é delimitada entre aspas ("), o PHP entende mais seqüências de escape para caracteres especiais:
Tabela 7-1.
Seqüências de escape
Seqüência
Significado
fim de linha (linefeed ou LF ou 0x0A (10) em ASCII)
retorno de carro (carriage return ou CR ou 0x0D (13) em ASCII)
TAB horizontal (HT ou 0x09 (9) em ASCII)
contra barra ou barra invertida
sinal de cifrão
aspas
a seqüência de caracteres batendo a expressão regular dos caracteres em notação octal
a seqüência de caracteres batendo a expressão regular de um caracter em notação hexadecimal
Novamente se você tentar escapar qualquer outro caracter, a contra barra será impressa também!
Mas o mais importante dado a respeito de strings delimitadas por aspas está no fato de que nome de variáveis serão substituídos.
Veja interpretação de strings para detalhes.
Heredoc
Outra maneira para delimitar strings é utilizando a sintaxe heredoc ("").
É informado um identificador depois de, então a string, e então o mesmo identificador para fechar a delimitação.
O identificador de fechamento precisa começar na primeira coluna da linha.
Além, o identificador utilizado precisa seguir as mesmas regras de nomeação que qualquer outro rótulo no PHP: só pode conter caracteres alfanuméricos e sublinhados, e precisa começar com um caracter não numérico ou sublinhado.
Atenção
É muito importante verificar que a linha do identificador de fechamento não contenha nenhum outro caracter, exceto, possivelmente um ponto e vírgula (;).
O que significa que o identificador não pode ser endentado, e que não pode haver nenhum espaço ou tabulações antes ou depois do ponto e vírgula.
Textos heredoc se comportam como strings delimitadas por aspas, com apenas uma diferença.
Você não precisa escapar apóstrofos e aspas em seus heredocs, mas você ainda pode continuar utilizando os códigos de escape listados acima.
Variáveis são substituídas, mas o mesmo cuidado precisa ser tomado quando expressando variáveis complexas dentro de heredocs assim como nas strings.
Exemplo 7-2.
Exemplo de delimitação de strings heredoc
?php $str = EOD Exemplo de uma string distribuída em várias linhas utilizando a sintaxe heredoc.
EOD; / * Exemplo mais complexo, com variáveis * / class foo {var $foo; var $bar; function foo() {$this - foo = 'Foo'; $this - bar = array('Bar1', 'Bar2', 'Bar3');}} $foo = new foo(); $name = 'Meu nome'; echo EOT Meu nome é "$name ".
Eu estou imprimindo $foo - foo.
Agora, eu estou imprimindo {$foo - bar[1]}.
Isto deve imprimir um 'A' maiúsculo: \x41 EOT;?
Nota:
O suporte a heredoc foi acrescentado no PHP 4.
Interpretação de variáveis
Há dois tipos de sintaxe, um simples e um complexo.
A sintaxe simples é a mais comum e conveniente, provendo uma maneira de interpretar uma variável, um valor de array ou uma propriedade de objeto.
A sintaxe completa foi introduzida no PHP 4, e pode ser reconhecida por chaves ({}) envolvendo a expressão.
Sintaxe simples
Se um sinal de cifrão ($) é encontrado, o interpretador tentará obter tantos identificadores quanto possíveis para formar um nome de variável válido.
Envolva o nome da variável com chaves se você deseja explicitamente especificar o fim do nome.
$cerveja = 'Heineken'; echo "O sabor das '$cerveja's é otimo"; / / funciona, "'"é um caracter inválido para nome de variáveis echo "Ele bebeu algumas $cervejas"; / / não funciona, 's' é um caracter válido para nome de variáveis echo "Ele bebeu algumas ${cerveja}s"; / / funciona
Similarmente, você também pode interpretar um índice de array ou uma propriedade de objeto.
Com índices de arrays, o colchete de fechamento (]) marca o final do índice.
Para propriedades de objetos se aplicam as mesmas regras das variáveis comuns, embora não exista um truque para as propriedades de objetos como para as variáveis.
$frutas = array( 'morangos '= 'vermelho', 'banana '= 'amarelo'); / / note que isto funciona diferentemente fora de delimitadores de string echo "Uma banana é $frutas[banana] ."; echo "Este quadrado tem $square - width metros de lado ."; / / Não funciona.
Para uma solução, veja a sintaxe complexa. echo "Este quadrado tem $square - width00 centímetros de lado .";
Para qualquer coisa mais complexa, você precisa utilizar a sintaxe complexa.
Sintaxe complexa (chaves)
Isto não é chamado sintaxe complexa porque a sintaxe em si é complexa, mas porque você pode incluir expressões complexas desta maneira.
De fato, você pode incluir qualquer valor no que esteja no espaço de nomes dentro de strings com esta sintaxe.
Desde que você não pode escapar '{', esta sintaxe somente será reconhecida quando o $é imediatamente seguido de um {. (Utilize "{\$ "ou "\{$" para obter um literal "{$").
Alguns exemplos para tornar isso mais claro:
$maravilhoso = 'fantástico'; echo "Isto é {$maravilhoso}"; / / não funciona, imprime:
Isto é {fantástico} echo "Isto é {$maravilhoso}"; / / funciona, imprime:
Isto é fantástico echo "Este quadrado tem {$square - width}00 centímetros de lado ."; echo "E isto funciona: {$arr[4][3]}"; / / E isto está errado pela mesma razão / / como $foo[bar] é incorreto fora de uma string. echo "Isto está errado: {$arr[foo][3]}"; echo "Você deve fazer desta maneira: {$arr['foo'][3]}"; echo "Você pode sempre escrever {$obj - values[3] - name}"; echo "Este é o valor da variável chamada $name: {${$name}}";
Acesso a caracteres da string
Caracteres nas strings podem ser acessados apenas especificando o deslocamento baseado em zero do caracter desejado depois da string dentro de chaves.
Para manutenção de compatibilidade, você ainda pode utilizar colchetes.
Entretanto, esta sintaxe for marcada como em extinção desde o PHP 4.
Alguns exemplos com strings
?php / * Assimilando uma string. * / $str = "Isto é uma string"; / * Anexando a ela. * / $str = $str." com uma pouco mais de texto"; / * Outra maneira de acrescentar, incluindo uma nova linha. * / $str .= "e um fim de linha no final (duh).\n"; / * Esta string será mostrada assim 'p Número:
9 / p '* / $num = 9; $str = "p Número: $num / p"; / * Isto será apenas' p Número: $num / p '* / $num = 9; $str =' p Número: $num / p '; / * Pega o primeiro caracter de uma string * / $str = 'Isto é um teste .'; $first = $str{0}; / * Pega o último caracter da string. * / $str = 'Isto ainda é um teste .'; $last = $str{strlen($str)-1};?
Funções úteis
Strings podem ser concatenados utilizando o operador '.' (ponto).
Note que o operador '+' (adição) não funciona para isso.
Veja operadores de string para mais informações.
Há uma grande quantidade de funções úteis para modificação de strings.
Veja a seção de funções de string para funções gerais e funções de expressões regulares para busca e substituição avançada. (em dois sabores:
Perl e POSIX estendido).
Há também funções para strings URL e funções para criptografia e descriptografia de strings (mcrypt e mhash).
Finalmente, se você ainda não encontrar o que está procurando, veja também as funções de tipos de caracteres.
Conversão de strings
Quando uma string é avaliada como um valor numérico, o valor resultante e o tipo é determinado como segue.
A string será avaliada como um ponto flutuante se conter qualquer um dos caracteres '.', 'e', ou 'E'.
Em outros casos, ela será avaliada como um inteiro.
O valor é obtido da porção inicial da string.
Se a string começa com dados numéricos válidos, esse será o valor utilizado.
Em outro caso, o valor será 0 (zero).
Dados numéricos válidos são: um sinal opcional, seguido por um ou mais dígitos (opcionalmente contendo um ponto decimal), seguido de um expoente, também opcional.
O expoente é um 'e' ou 'E 'seguido de um ou mais dígitos.
$foo = 1 + "10.5"; / / $foo é ponto flutuante (11.5) $foo = 1 + "-1.3e3"; / / $foo é ponto flutuante (-1299) $foo = 1 + "bob-1.3e3"; / / $foo é ponto inteiro (1) $foo = 1 + "bob3"; / / $foo é ponto inteiro (1) $foo = 1 + "10 Small Pigs"; / / $foo é ponto inteiro (11) $foo = 4 + "10.2 Little Piggies"; / / $foo é ponto flutuante (14.2) $foo = "10.0 pigs" + 1; / / $foo é ponto flutuante (11) $foo = "10.0 pigs "+ 1.0; / / $foo é ponto flutuante (11)
Para mais informações sobre esta conversão, veja página do manual UNIX de strtod( 3).
Se você deseja testar qualquer um dos exemplo dessa seção, você pode copiar e colar os exemplos e inserir as linhas seguintes para ver por si mesmo como isso funciona.
echo "\$foo==$foo; tipo". gettype ($foo). "br / \n";
Anterior
Principal
Próxima
Números de ponto flutuante
Acima
Manual do PHP
Anterior
Capítulo 7.
Tipos
Próxima
O PHP não requer (ou suporta) a definição de tipo explicita na declaração de variáveis: o tipo de uma variável é determinado pelo contexto em que a variável é utilizada.
Isto significa que, se você assimila um valor string para a variável var, var se torna uma string.
Se você então assimila um valor inteiro para var, ela se torna um inteiro.
Um exemplo da conversão automática do PHP é o operador de adição '+'.
Se qualquer um dos operadores for float, então todos os operadores são avaliados como floats, e o resultado será um float.
De outra forma, se os operadores forem interpretados como inteiros então o resultado será um inteiro.
$foo = "0"; / / $foo é string (ASCII 48) $foo += 2; / / $foo é agora um inteiro (2) $foo = $foo + 1.3; / / $foo é agora um float (3.3) $foo = 5 + "10 Little Piggies"; / / $foo é inteiro (15) $foo = 5 + "10 Small Pigs"; / / $foo é inteiro (15)
Se os últimos dois exemplos lhe parecerem estranhos, veja Conversão de strings.
Se você deseja forçar uma variável para ser avaliada como um certo tipo, veja a seção Moldando o tipo (casting).
Se você deseja mudar o tipo de uma variável, veja settype().
Se quiser testar qualquer um dos exemplo desta seção, você pode usar a função var_dump().
Nota:
O comportamento de uma conversão automática para array é atualmente indefinida.
$a = "1"; / / $a é uma string $a[0] = "f"; / / E com relação aos índices da string?
O que acontece?
Desde que o PHP suporta indexação de strings através de offsets utilizando a mesma sintaxe da indexação de arrays, o exemplo acima nos deixa um problema: $a se tornou um array sendo o primeiro elemento "f", ou será que "f" se tornou o primeiro caracter da string $a?
Correções, entretanto, estão sendo discutidas.
A moldagem de tipos no PHP funciona como no C: o nome de um tipo desejado é escrito entre parênteses antes da variável em que se deseja a moldagem.
As moldagens permitidas são:
(bool), (boolean) - molde para booleano
(float), (double), (real) - molde para número de ponto flutuante
(string) - molde para string
(array) - molde para array
Nota:
Em vez de moldar uma variável para string, você também pode circundar a variável entre aspas.
$foo = (int) $bar; $foo = (int) $bar;
Pode não ser tão óbvio o que exatamente ocorre quando se molda entre certos tipos.
Convertendo para booleano
Quando moldando ou forçando a conversão de um array para string, o resultado será a palavra Array.
Quando moldando ou forçando o tipo de um objeto para string, o resultado será a palavra Object.
Quando moldando de uma variável escalar ou string para um array, a variável se torna o primeiro elemento do array:
$var = 'ciao'; $arr = (array) $var; echo $arr[0]; / / outputs 'ciao'
Quando moldando de uma variável escalar ou string para um objeto, a variável se torna um atributo do objeto: o nome do atributo se chamará 'scalar':
$var = 'ciao'; $obj = (object) $var; echo $obj - scalar; / / imprime 'ciao'
Anterior
Principal
Próxima
Pseudo-tipos utilizados nesta documentação
Acima
Variáveis
Manual do PHP
Anterior
Capítulo 8.
Variáveis
Próxima
Formulários HTML (GET and POST)
Quando um formulário é submetido para um script PHP, qualquer variável do formulário será automaticamente disponível para o script.
Há várias maneiras de acessar estas informações, por exemplo:
Exemplo 8-1.
form action=" foo.php "method="post" Nome: input type="text "name="username" br Email: input type="text "name="email" br input type="submit "name="submit" value="Me aperte! "/ form
Dependendo da configuração local e suas preferencias pessoais, essas são as vias pela qual você pode acessar os dados de seus formulários:
Exemplo 8-2.
Acessando dados de um formulário HTML via POST
?php / / Disponível desde o PHP 4.1.0 print $_POST[ 'username']; print $_REQUEST['username']; import_request_variables('p', 'p_'); print $p_username; / / Disponível deste o PHP 3. print $HTTP_POST_VARS['username']; / / Disponível se a diretiva register_globals = on. / / Desde o PHP 4.2.0 o valor default de register_globals é off / / Usar / manter esse método é preferível. print $username;?
Utilizar um formulário GET é similar, exceto que você use a variável GET predefinida.
O metodo GET obtem os dados da QUERY_STRING (a informação depois do '?' numa URL).
Então, por exemplo, http: / /www.example.com / test.php?id=3 contém os dados GET que serão acessíveis com $_GET[ 'id'].
Veja também $_REQUEST e import_request_variables().
Nota:
Arrays superglobais, como $_POST e $_GET, estão disponíveis desde o PHP 4.1.0.
Como explicado, antes do PHP 4.2.0 o valor default de register_globals era on.
E no PHP ele era sempre on.
A comunidade PHP está encorajando todos a não alterarem essa diretiva, assumindo-a sempre como off e codificando em conformidade com isso.
Nota:
A diretiva de configuração magic_quotes_gpc afeta os valores de GET, POST e Cookies.
Se estiver ativada, o valor (It's "PHP !") se tornará automaticamente (It\'s \"PHP!\").
Escaping é necessário para inserção em bancos de dados.
Veja também addslashes(), stripslashes() e magic_quotes_sybase.
O PHP entende arrays no contexto de variáveis de formulários (veja o FAQ O PHP entende arrays no contexto de variáveis de formulários (veja o FAQ relacionado).
Você pode, por exemplo, agrupar variáveis relacionadas juntas, ou usar esse recurso para receber valores de um campo de seleção múltipla.
Por exemplo, podemos ter um formulario que manda informações para si mesmo até um comando submetido para mostrar todos os dados.
Exemplo 8-3.
Variáveis de formulários mais complexos
No PHP 3, os arrays variáveis de formulários eram limitados a uma dimensão.
No PHP 4, essa restrição não existe mais.
Nomes de variáveis SUBMIT IMAGE
Quando submetendo um formulário, é possível de se utilizar imagens ao invés do botão de submit padrão com uma tag do tipo:
Quando o usuário clica em algum lugar da imagem, o formulário que o acompanha é transmitido para o servidor com duas variáveis adicionais, sub_x e sub_y.
Eles contém a coordenadas do clique do usuário na imagem.
Cookies HTTP
O PHP suporta transparentemente cookies HTTP como os definidos pela especificação da Netscape.
Cookies são um mecanismo de armazenamento de dados no browser cliente e permite o rastreamento ou identificação do retorno de usuários.
Você pode criar cookies com a função setcookie().
Cookies são parte do header HTTP, então, a função setcookie() precisa ser chamada antes de qualquer saída ser enviada ao browser.
Esta é a mesma restrição da função header().
Dados de cookies são disponíveis nos arrays de dados de cookies apropriados, como $_COOKIE, $HTTP_COOKIE_VARS como também em $_REQUEST.
Veja o manual de setcookie() para mais detalhes e exemplos.
Se você deseja assimilar vários valores para uma única variável cookie, você pode fazer dele um array:
?php setcookie( "MeuCookie[foo]", "Testando 1", time()+3600); setcookie("MeuCookie[bar]", "Testando 2", time()+3600);?
Isso irá criar dois cookies separados enquanto MeuCookie será um único array em seu script.
Se você quiser colocar em apenas um cookie vários valores, considere utilizar serialize() ou explode() nos valores primeiro.
Note que um cookie substituirá um anterior com o mesmo nome em seu browser mesmo se o nome ou o caminho for diferente.
Então, para uma aplicação de carrinho de compras em que você quer ter um contador e repassá-lo:
Exemplo 8-4.
Exemplo setcookie()
Pontos em nomes de variáveis postadas
Normalmente o PHP não altera o nome de variáveis quando elas são passadas para o script.
Entretanto, é necessário notar que o ponto (ponto final) não é um caracter válido no nomes de variáveis do PHP.
Para ilustrar, veja o seguinte exemplo:
?php $varname.ext; / * nome de variável inválido * /?
Nessa situação, é importante saber que o PHP automaticamente substituirá qualquer ponto nos nomes de variáveis recebidas com sublinhados.
Porque o PHP determina os tipos de variáveis e faz conversões (geralmente) quando necessárias, nem sempre é óbvio o tipo de uma variável tem em todos os momentos.
O PHP incluí várias funções que permitem determinar qual o tipo de uma variável, por exemplo: gettype(), is_array(), is_float(), is_int(), is_object(), e is_string().
Veja também o capítulo Tipos.
Anterior
Principal
Próxima
Variáveis variáveis
Acima
Constantes
Manual do PHP
Anterior
Próxima
Capítulo 8.
Variáveis
Introdução
As variáveis no PHP são representadas por um cifrão ($) seguido pelo nome da variável.
Os nomes de variável no PHP fazem distinção entre maiúsculas e minúsculas.
Os nomes de variável seguem as mesmas regras como outros rótulos no PHP.
Em uma expressão regular isto poderia ser representado desta forma: '[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'
Nota:
Para nossos propósitos, as letras a-z, A-Z e os caracteres ASCII de 127 a 255 (0x7f-0xff).
?php $var = "Bob"; $Var = "Joe"; echo "$var, $Var"; / / exibe "Bob, Joe" $4site = 'not yet'; / / inválido; começa com um número $_4site = 'not yet'; / / válido; começa com um sublinhado $täyte = 'mansikka'; / / válido; 'ä 'é um caracter ASCII 228.?
No PHP 3, as variáveis são sempre atribuídas por valor.
Isto significa que quando você atribui uma expressão a uma variável, o valor da expressão original é copiado integralmente para a variável de destino.
Isto significa também que, após atribuir o valor de uma variável a outra, a alteração de uma destas variáveis não afetará a outra.
Para maiores informações sobre este tipo de atribuição, veja o capítulo em Expressões.
O PHP 4 oferece um outro meio de atribuir valores a variáveis: a atribuição por referência.
Isto significa que a nova variável simplesmente referencia (em outras palavras, "torna-se um apelido para "ou "aponta para") a variável original.
Alterações na nova variável afetam a original e vice versa.
Entretanto, qualquer aumento de velocidade só será realmente notado em *loops* complexos ou em atribuições de grandes arrays ou objetos.
Para atribuir por referência, simplesmente adicione um e-comercial () na frente do nome da variável que estiver sendo atribuída (variável de origem) Por exemplo, o trecho de código abaixo imprime 'My name is Bob 'duas vezes:
?php $foo = 'Bob'; / / Atribui o valor 'Bob' a variável $foo $bar = $foo; / / Referecia $foo através de $bar. $bar = "My name is $bar"; / / Altera $bar... echo $bar; echo $foo; / / $foo é alterada também.?
Uma observação importante a se fazer: somente variáveis nomeadas podem ser atribuídas por referência.
?php $foo = 25; $bar = $foo; / / Esta atribuição é válida. $bar = (24 * 7); / / Inválido; referencia uma expressão sem nome. function test() {return 25;} $bar = test(); / / Inválido.?
Anterior
Principal
Próxima
Manipulação de tipos
Acima
Variáveis Predefinidas
Manual do PHP
Anterior
Capítulo 8.
Variáveis
Próxima
O PHP oferece um grande número de variáveis predefinidas para qualquer script que ele execute.
Muitas destas variáveis, entretanto, não podem ser completamente documentadas uma vez dependem de diversos fatores, como o servidor no qual scripts são executados, a versão e configuração deste servidor e outros.
Algumas destas variáveis não estarão disponíveis quando o PHP for executado na linha de comando.
Para uma lista destas variáveis, veja a seção Variáveis reservadas.
Atenção
No PHP 4.2.0 e posteriores, o valor default da diretiva register_globals é off.
Esta é a maior modificação no PHP.
Tendo register_globals off Tendo register_globals off afeta o conjunto de variáveis predefinidas disponíveis no escopo global.
POr exemplo, para ler DOCUMENT_ROOT você usará $_SERVER[ 'DOCUMENT_ROOT'] em vez de $DOCUMENT_ROOT, ou $_GET['id'] da URL http: / /www.example.com / test.php?id=3 em vez de $id, or $_ENV['HOME'] em vez de $HOME.
Para informações relacionadas desta modificação, veja detalhes da diretiva register_globals, no capítulo de segurança em Usando register_globals, assim como o detalhamento de lançamento das versões do PHP 4.1.0 e 4.2.0.
Utilizar as Variáveis Predefinidas do PHP, como os arrays superglobais, é muito mais preferível.
Desde a versão 4.1.0, o PHP fornece um conjunto adicional de arrays predefinidos contendo as variáveis do servidor web (se aplicável), as variáveis ambiente e as entradas do usuário.
Esses novos arrays são especiais pelo motivo que são automaticamente globais (significa que são automaticamente disponíveis em qualquer escopo.
Entretanto, para uma explicação de seu conteúdo e detalhes sobre as variáveis predefinidas do PHP e sua natureza, veja a seção Variáveis Predefinidas.
Veja também que todas as outras variáveis predefinidas antigas ($HTTP_*_VARS) ainda existem.
Se todos os indicadores não estiverem configurados no variables_order, seus arrays superglobais predefinidos respectivos estarão vazios.
Superglobais do PHP
Contém um referência para todas as variáveis que são atualmente disponíveis dentro do escopo global do script.
As chaves desse array são os nomes das variáveis globais. $GLOBALS existe desde o PHP 3.
Variáveis criadas pelo servidor web ou diretamente relacionadas ao ambiente de execução do script atual.
Análogo ao antigo array $HTTP_SERVER_VARS (que ainda continua disponível, mas em decadência).
Variáveis postadas para o script via método HTTP GET.
Análogo ao antigo array $HTTP_GET_VARS (que ainda continua disponível, mas em decadência).
Variáveis postadas para o script via método HTTP POST.
Análogo ao antigo array $HTTP_POST_VARS (que ainda continua disponível, mas em decadência).
Variáveis postadas para o script via cookies HTTP.
Análogo ao antigo array $HTTP_COOKIE_VARS (que ainda continua disponível, mas em decadência).
Variáveis postadas para o script via transferência de arquivos HTTP.
Análogo ao antigo array $HTTP_POST_FILES (que ainda continua disponível, mas em decadência).
Veja uploads via método POST para maiores informações.
Variáveis disponíveis no script do ambiente de execução.
Análogo ao antigo array $HTTP_ENV_VARS (que ainda continua disponível, mas em decadência).
Variáveis postadas para o script por todas os mecanismos de input, e que não podem ter seu conteúdo garantido de qualquer forma.
A presença e a ordem de inclusão das variáveis nesse array é definida de acordo com a diretiva de configuração variables_order.
Este array não tem um equivalente nas versões anteriores do PHP 4.1.0.
Veja também import_request_variables().
Nota:
Quando executando na linha de comando, isto não inclui as entradas argv e argc; elas estão presentes no array $_SERVER.
Variáveis que estão atualmente registradas na sessão do script.
Análogo ao antigo array $HTTP_SESSION_VARS (que ainda continua disponível, mas em decadência).
Veja a sessão funções de manipulação de Sessões para maiores informações.
Anterior
Principal
Próxima
Variáveis
Acima
Escopo de variáveis
Manual do PHP
Anterior
Capítulo 8.
Próxima
Escopo de variáveis
O escopo de uma variável é o contexto onde ela foi definida.
A maior parte das variáveis do PHP tem somente escopo local.
Este escopo local inclui os arquivos incluídos.
Por exemplo:
Aqui a variável $a estará disponível no script incluído b.inc.
Entretanto, com as funções definidas pelo usuário, um escopo local é introduzido.
Quaisquer variáveis utilizadas dento da função é por default limitada dentro do escopo local da função.
Por exemplo:
?php $a = 1; / * escopo global * / function Teste() {echo $a; / * referencia uma variável do escopo local (não definida) * /} Test();?
Este script não produz nenhuma saída porque a instrução echo() refere-se a uma versão local da variável $a, e ela não tem nenhum valor assimilado nesse escopo.
Essa é uma pequena diferença da linguagem C quando variáveis globais são automaticamente disponíveis para funções sem sobreescrever uma eventual definição local.
Isto causa problemas quando as pessoas mudam inadivertidamente uma variável global.
No PHP, as variáveis globais precisam ser declaradas globais dentro de uma função se ela vai ser utilizada naquela função.
Um exemplo:
?php $a = 1; $b = 2; function Soma() {global $a, $b; $b = $a + $b;} Soma(); echo $b;?
O script acima imprimirá "3".
Declarando $a e $b globais na função, todas as referências a essas variáveis referem-se a versão global.
Não há um limite para o número de variáveis globais que podem ser manipuladas por uma função.
Uma segunda maneira de acessar variáveis do escopo global é utilizando o array especial $GLOBALS definido pelo PHP.
O exemplo anterior poderia ser rescrito como:
?php $a = 1; $b = 2; function Soma() {$GLOBALS["b"] = $GLOBALS["a"] + $GLOBALS["b"];} Soma(); echo $b;?
O array $GLOBALS é um array associativo onde o nome da variável global é a chave do array e o seu conteúdo da variável como o valor do elemento do array.
Veja que $GLOBALS existe em qualquer escopo, isto porque $GLOBALS é uma superglobal.
Segue um exemplo demonstrando o poder das superglobais:
?php function test_global() {/ / A maioria das variaveis predefinidas nao sao 'super 'e requerem / / 'global' para serem disponiveis para funcoes em qualquer escopo. global $HTTP_POST_VARS; print $HTTP_POST_VARS['name']; / / Superglobais são disponiveis em qualquer escopo e / / nao precisam de 'global '.
Superglobais existem / / desde o PHP 4.1.0 print $_POST[ 'name'];}?
Outro recurso importante do escopo de variáveis é a variável estática.
Uma variável estática existe somente no escopo local da função, mas ela não perde seu valor quando o nível de execução do programa deixa o escopo.
Considere o seguinte exemplo:
?php function Teste () {$a = 0; echo $a; $a++;}?
Essa função é inútil partindo de que cada vez que ela é chamada, ela coloca em $a o valor 0 e imprime "0".
A instrução $a + +, que aumenta o valor da variável não tem sentido desde que a função sai e a variável $a desaparece.
Para faze-la mais útil como contadora sem deixar de perder o sua conta atual, a variável $a é declarada como estática:
?php function Teste() {static $a = 0; echo $a; $a++;}?
Agora, cada vez que a função Teste() for chamada ele imprimirá o valor de $a e o incrementará.
Variáveis estáticas fornecem uma solução ideal para funções recursivas.
Uma função recursiva é aquela se chama a si mesma.
Cuidados especiais precisam ser tomados quando escrevendo funções recursivas porque é possível que ela continue na recursão indefinidamente.
Você tem de ter certeza que há uma maneira segura de terminar a recursão.
A seguinte função recursiva conta até 10, utilizando a variável estática $count para saber quando parar:
?php function Teste() {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}?
O Zend Engine 1, base do PHP4, implementa os modificadores static e global para variáveis em termos de referência.
Por exemplo, uma variável global importada dentro do escopo de uma função com a instrução global atualmente cria uma referência para a variável global.
Isto pode causar comportamentos impresíveis para os seguintes casos:
Executando esse exemplo você terá as seguites saídas:
Uma situação similar se aplica ao modificador static.
Referências não são armazenadas estaticamente:
?php function get_instance_ref() {static $obj; echo "Objeto estatico: "; var_dump($obj); if (!isset($obj)) {/ / Assimila uma referencia a variavel estatica $obj = new stdclass;} $obj - property++; return $obj;} function get_instance_noref() {static $obj; echo "Objeto estatico:"; var_dump($obj); if (!isset($obj)) {/ / Assimila o objeto para a veriavel estatica $obj = new stdclass;} $obj - property++; return $obj;} $obj1 = get_instance_ref(); $still_obj1 = get_instance_ref(); echo "\n"; $obj2 = get_instance_noref(); $still_obj2 = get_instance_noref();?
Executando esse exemplo você terá as seguites saídas:
Objeto estatico:
NULL Objeto estatico:
NULL Objeto estatico:
NULL Objeto estatico: object( stdClass)(1) {["property"]= int(1)}
Este exemplo demonstra que quando assimilando uma referência para uma variável estática, ela não se lembra quando você chama a função get_instance_ref() uma segunda vez.
Anterior
Principal
Próxima
Variáveis Predefinidas
Acima
Variáveis variáveis
Manual do PHP
Anterior
Capítulo 8.
Próxima
Variáveis variáveis
As vezes é conveniente poder trabalhar com variáveis variáveis.
Isto é, nomes de variáveis que pode ser criadas e utilizadas dinamicamente.
Uma variável normal é criada numa instrução como:
Uma variável variável pega o valor de uma variável e a trata como o nome de uma variável.
No exemplo acima, hello pode ser utilizada como o nome de uma variável utilizando dois sinais de cifrão:
Neste ponto, duas variáveis foram definidas e preservadas na árvore de símbolos do PHP: $a contendo "hello" e $hello contendo "world ".
Da mesma forma, esta instrução:
produz a mesma saida que:
no caso: hello world.
Para poder utilizar variáveis variáveis com arrays, você precisa resolver um problema de ambigüidade.
Assim, se você escrever $$a[ 1] então o interpretador pode entender que você quer usar $a[1] como uma variável ou que você quer usar $$a como uma variável e [1] como o índice dessa variável.
A sintaxe para resolver essa ambigüidade é ${$a[1]} para o primeiro caso e ${$a}[1] para o segundo.
Atenção
Verifique que variáveis variáveis não podem ser utilizadas com os novos arrays superglobais.
Isto significa que você não pode fazer coisas como ${$_GET}.
Se você está procurando uma maneira de manipular as superglobais como as antigas HTTP_*_VARS, você deve tentar referenciá-las.
Anterior
Principal
Próxima
Escopo de variáveis
Acima
Variáveis externas ao PHP
Manual do PHP
Anterior
Apêndice B.
Próxima
Migrating Configuration Files
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Cookies
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
empty( "0")
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Configuration changes
Atenção
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
PHP 3 extension
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Migrating from PHP 3 to PHP 4
Anterior
Principal
Próxima
Publicações sobre PHP
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Initializers
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Deprecate functions and extensions
Changed status for unset()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Parser behavior
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Running PHP 3 and PHP 4 concurrently
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Variable substitution in strings
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice B.
Próxima
Handling of global variables
Exemplo B-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
Short-circuited boolean evaluation
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
Error messages have changed
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
Expression types
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Migrating from PHP / FI 2 to PHP 3
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
if..endif syntax
Exemplo C-5.
Exemplo C-6.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
Other incompatibilities
Exemplo C-11.
Anterior
Principal
Próxima
Acima
O debugador do PHP
Manual do PHP
Anterior
Apêndice C.
Próxima
Start / end tags
Exemplo C-1.
Exemplo C-2.
Exemplo C-3.
Exemplo C-4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
Function TRUE / FALSE return values
Exemplo C-9.
Exemplo C-10.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice C.
Próxima
while syntax
Exemplo C-7.
Exemplo C-8.
Atenção
Anterior
Principal
Próxima
Acima
Anterior
Identificadores faltando (compilação do manual)
Anterior
Principal
Traduções
Acima
Manual do PHP
Anterior
Próxima
Pattern Modifiers
Pattern Modifiers - - Describes possible modifiers in regex patterns
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Pattern Syntax - - Describes PCRE regex syntax
Differences From Perl
Regular Expression Details
Meta-characters
Vertical bar
Recursive patterns
Performances
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice E.
Próxima
E_NOTICE
E_WARNING
E_PARSE
E_ALL
Anterior
Principal
Próxima
Acima
Lista de funções sinônimas (aliases)
Manual do PHP
Anterior
Próxima
Extending PHP
Function Prototype
Exemplo E-1.
Variable Function Arguments
Exemplo E-2.
Using the Function Arguments
Tabela E-1.
Setting Variables in the Symbol Table
Atenção
Exemplo E-3.
Exemplo E-4.
Exemplo E-5.
Exemplo E-6.
Returning simple values
Returning complex values
Using the resource list
Exemplo E-7.
Exemplo E-8.
Exemplo E-9.
Using the persistent resource table
Adding runtime configuration directives
Anterior
Principal
Próxima
Protocolo do Debugger
Acima
Anterior
Próxima
Prefácio
PHP, que significa "PHP:
Hypertext Preprocessor ", é uma linguagem de programação de ampla utilização, interpretada, que é especialmente interessante para desenvolvimento para a Web e pode ser mesclada dentro do código HTML.
A sintaxe da linguagem lembra C, Java e Perl, e é fácil de aprender.
O objetivo principal da linguagem é permitir a desenvolvedores escrever páginas que serão geradas dinamicamente rapidamente, mas você pode fazer muito mais do que isso com PHP.
Esse manual consiste primariamente de uma referência de funções, mas ele também contém uma referência da linguagem, explicações sobre as mais importantes características do PHP, e outras informações suplementares.
Você pode fazer o download desse manual em vários formatos em http: / /www.php.net / docs.php.
Os arquivos para downloads são atualizados automaticamente assim que o conteúdo for modificado.
Para mais informações sobre como esse manual é desenvolvido pode ser encontrado em 'Sobre o manual' do apêndice.
Veja também a história do PHP.
Anterior
Principal
Próxima
Manual do PHP
Começando
Manual do PHP
Anterior
Próxima
Introdução
Instalação
Configuração durante execução
As diretivas de configuração no php.ini podem ser sobrescritas por diretivas php_flag no arquivo de configuração do servidor ou por arquivos .htaccess locais.
Exemplo 1.
Desligando a interpretação do PHP em um diretório com o .htaccess
Tabela 1.
Opções de configuração no Apache
Nome
Valor Default
Alterabilidade
Descrição
liga ou desliga a interpretação pelo PHP
Detalhes na função apache_child_terminate()
envia a data de modificação do script PHP como um header Last-Modified:
interpreta arquivos marcados executáveis como scripts PHP, independentemente do final do arquivo
Descrição resumida das diretivas de configuração.
Esta diretiva somente é útil para a versão módulo do Apache do PHP.
Ela pode ser usada para ligar ou desligar a interpretação do PHP em nível de diretório ou em nível de servidor virtual.
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Referência das Funções
Acima
Manual do PHP
Anterior
Próxima
Funções para manipulação de arrays
Essas funções permitem a interação e manipulação de arrays de várias formas.
Arrays simples e multidimensionais (matrizes) são suportados, e podem ser criados pelo usuário ou por outras funções.
Existem diversas funções específicas para bancos de dados para preencher arrays com os dados retornados em consultas, e vários outros tipos de funções também retornam arrays.
Requisitos
Instalação
Configuração durante execução
Tipos Resource
Constantes Predefinidas
As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.
CASE_LOWER é usada com a função array_change_key_case() e é usada em chaves de arrays para torná-las minúsculas.
É o valor padrão utilizado em array_change_key_case().
CASE_UPPER é usada com a função array_change_key_case() e é usada em chaves de arrays para torná-las maiúsculas.
Sinais de ordenação:
SORT_ASC é usada com array_multisort() para ordenar em ordem crescente.
SORT_DESC é usada com array_multisort() para ordenar em ordem descrescente
Sinais de tipos de ordenação: usadas por várias funções de ordenação
SORT_REGULAR é usada para comparar itens normalmente.
SORT_NUMERIC é usada para comparar itens numericamente.
SORT_STRING é usada para comparar itens como se fossem strings.
Veja também is_array(), explode(), implode(), split(), preg_split() e join().
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Aspell functions [deprecated]
Instalação
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
BCMath Funções Matemáticas de Precisão Arbitrária
Para matemática de precisão arbitrária, o PHP oferece a Calculadora Binária com suporte a números de qualquer tamanho e precisão, representados como strings.
Desde o PHP 4.0.4, a libbcmath é distribuída junto com o PHP.
Instalação
No PHP 4, estas funções somente serão disponíveis se PHP foi configurado com --enable-bcmath.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de configuração da BC Math
Nome
Padrão
Alterável
Segue uma breve descrição das diretivas de configuração.
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Funções de compactação com Bzip2
As funções para bzip2 são usadas para ler e escrever, de forma transparente, arquivos compactados do tipo bzip2 (.bz2).
Este módulo utiliza as funções da biblioteca bzip2 desenvolvida por Julian Seward
O suporte às funções para Bzip2 no PHP não é habilitado por padrão.
Este módulo requer bzip2 / libbzip2, versão = 1.0.x.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão define um tipo de recurso (resource): um ponteiro para arquivo que identifica o arquivo bzip2 que está sendo usado.
Esta extensão não possui nenhuma constante.
Este exemplo abre um arquivo temporário e escreve uma string de test nele, e então mostra o conteúdo do arquivo.
Exemplo 1.
Um exemplo simples de bzip2
?php $arquivo = "/ tmp / testfile.bz2"; $str = "This is a test string.\n"; / / abre o arquivo para escrita $bz = bzopen($arquivo, "w"); / / escreve a string no arquivo bzwrite($bz, $str); / / fecha o arquivo bzclose($bz); / / abre o arquivo para leitura $bz = bzopen($arquivo, "r"); / / lê 10 caracteres print bzread($bz, 10); / / imprime até o final do arquivo (ou os próximos 1024 caracteres) print bzread($bz); / / fecha o arquivo bzclose($bz);?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
CCVS API Functions
Nota:
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Classes e Objetos
Introdução
Você pode obter o nome da classe ao qual um objeto pertence, bem como suas propriedades e métodos.
Usando estas funções, você pode descobrir não apenas a classe de um objeto, mas também seu parentesco (no caso, de qual objeto de classe ele extende).
Exemplos
Neste exemplo, nós primeiramente definiremos uma classe base e uma extensão da classe.
A classe base descreve um vegetal comum, que é comestível ou não e que tem sua cor.
A sub-classe Espinafre adiciona um método para cozinhá-lo e outro para descobrir se ele está cozido.
Exemplo 1. classes.inc
Nós instânciamos 2 objetos destas classes e exibimos informações sobre elas, incluindo o parentesco de suas classes.
Nós também definimos algumas funções úteis, principalmente ter uma boa saída de variáveis.
Exemplo 2. test_script.php
Uma coisa importante para notar no exemplo acima é que o objeto $leafy é uma instância da classe Espinafre que é uma subclasse de Vegetal, então a última parte do script acima retornará:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Instalação
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
ClibPDF functions
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Exemplo 1.
Exemplo 2. pdfclock example from pdflib 2.0 distribution
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Exemplo 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Instalação
Nota:
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Constantes Predefinidas
Exemplos
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Instalação
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XV.
Introdução
Esta função não está documentada, somente a lista de argumentos está disponível.
Nota:
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Funções data e hora
Você pode usar estas funções para tratar com a data e a hora.
Estas funções te permitem conseguir a data e a hora do servidor onde o PHP está rodando.
Nota:
Considerar especialmente horário-de-verão e anos bissextos.
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Database (dbm-style) abstraction layer functions
Tabela 1.
Tabela 2.
Nota: db2 conflicts with db3 and db4.
Nota: db3 conflicts with db2 and db4.
Nota: db4 conflicts with db2 and db3.
Nota:
Nota:
Nota:
Nota:
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Instalação
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Nota:
Requisitos
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplos
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XXII.
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Requisitos
Configuração durante execução
Tipos Resource
Constantes Predefinidas
db+ + error codes
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Nota:
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Requisitos
Instalação
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhuma constante.
Para funções relacionadas como dirname(), is_dir(), mkdir() e rmdir(), veja a seção Filesystem.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
DOM XML functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Requisitos
Deprecated functions
Tabela 1.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Tabela 2.
Tabela 3.
Tabela 4.
Tabela 5.
Tabela 6.
Tabela 7.
Tabela 8.
Tabela 9.
Tabela 10.
Tabela 11.
Exemplo 1.
DomDocumentType - entities
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XXVI. .NET functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Error Handling and Logging Functions
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Nota:
Nota:
Nota:
Constantes Predefinidas
As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.
Nota:
Tabela 2.
Exemplos
Exemplo 1.
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
FrontBase Functions
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Instalação
Nota:
Configuração durante execução
Tipos Resource
Constantes Predefinidas
(integer)
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de configuração do Filesystem e Streams
Padrão
Alterável
Descrição resumida das diretivas de configuração.
Esta opção ativa o dispositivo URL fopen wrappers que permite o acesso a objetos URL como arquivos.
São disponibilizados por padrão wrappers para acesso de arquivos remotos utilizando os protocolos FTP ou HTTP, e algumas estensões como a zlib podem registar wrappers adicionais.
Nota:
Esta opção foi introduzida imediatamente antes da liberação da versão 4.0.3.
Até essa versão e incluindo a 4.0.3, você somente podia desabilitar este recurso na compilação, usando a opção --disable-url-fopen-wrapper.
Atenção
Nas versões Windows anterioes a PHP 4.3, as funções seguintes não suportavam acesso de arquivos remotos: include(), include_once(), require(), require_once() e as funções imagecreatefromXXX da extensão Referência XLI, Image functions.
Define o user agent que o PHP irá enviar.
Timeout padrão (em segundos) para streams baseados em socket.
Nota:
Esta opção de configuração foi incluida no PHP 4.3.
Define a senha do FTP anonimo (seu endereço de e-mail).
Quando ativo, o PHP irá examinar os dados lidos por fgets() e file() para verificar se está sendo utilizado a convensão de fim de linha Unix, MS-DOS ou Macintosh.
Isto ativa a interoperabilidade do PHP com sistemas Macintosh, mas seu padrão é Off, porque isso causa uma pequena perda de performance na detecção da convenção de fim de linha num primeiro momento e porque as pessoas que utilizam o fim de linha como separadores de itens sob sistemas Unix podem experimentar problemas de falta de compatibilidade.
Nota:
Esta opção de configuração foi introduzida no PHP 4.3.
Constantes Predefinidas
Veja Também
Para uma lista e descrição dos vários wrappers URL que podem ser utilizados como arquivos remotos, veja em Apêndice I.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Instalação
Configuração durante execução
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
GMP functions
Nota:
Atenção
Nota:
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Hyperwave API functions
Requisitos
Instalação
Integration with Apache
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Hyperwave functions
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
InterBase functions
Nota:
Requisitos
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Tabela 2. iconv constants
Nota:
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Nota:
Tabela 1.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Nota:
Requisitos
Nota:
Tabela 1.
Tabela 2.
Nota:
Tabela 3.
Tabela 4.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 5.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
IMAP, POP3 and NNTP functions
Nota:
Nota:
Atenção
Configuração durante execução
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Nota:
Tipos Resource
Constantes Predefinidas
As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.
Tabela 2.
Tabela 3. phpinfo() constants
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Nota:
Atenção
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
IRC Gateway Functions
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
LDAP functions
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplo 1.
Using the PHP LDAP calls
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XLIX.
Funções de E-Mail
Introdução
A função mail() te permite enviar email
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Instalação
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Configuração durante execução
Diretivas de configuração para Mail
Apenas para usuários de Windows:
PHP usaria nome DNS ou endereço IP do servidor SMTP para enviar email com a função mail().
Apenas usuários de Windows:
Número da porta para conectar ao servidor especificado com a configuração de SMTP quando enviando mail com mail(); por definição 25.
Apenas disponível desde PHP 4.3.0.
O "From:" endereço de email seria usado no envio de PHP em Windows.
Sistemas não utilizando sendmail definiriam esta diretiva para sendmail wrapper / replacement deles.
Por exemplo, Qmail usuários pode normalmente definí-los para / var / qmail / bin / sendmail ou / var / qmail / bin / qmail-inject.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Este módulo é EXPERIMENTAL.
Esteja avisado, e use este módulo por sua própria conta e risco.
Returns an array listing filename information
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Estas funções matemáticas somente suportam valores dentro do tamanho integer and float do seu computador. (estes correspondem atualmente aos tipos do C long e double) Se você precisa manipular números maiores, procure funções de matemática com precisão arbitrária.
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.
Tabela 1.
Constantes matemáticas
Constante
Valor
Descrição
raiz_quadrada( pi) [4.0.2]
2 / raiz_quadrada( pi)
raiz_quadrada( 2)
raiz_quadrada( 3) [4.0.2]
1 / raiz_quadrada( 2)
Constante de Euler [4.0.2]
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Multi-Byte String Functions
Nota:
Nota:
Instalação
Nota:
Nota:
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Exemplo 1. php.ini setting example
Exemplo 2. php.ini setting for EUC-JP users
Exemplo 3. php.ini setting for SJIS users
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplo 4.
Nota:
Exemplo 5. php.ini setting example
Exemplo 6.
Supported Character Encodings
Nota: "Supported character encoding" does not mean that it works as internal character code.
Tabela 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
MCAL functions
Nota:
Nota:
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
MCVE Payment Functions
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Mhash - Funções de hash
Essas funções são planejadas para trabalhar com mhash.
Esta é uma interface para a biblioteca mhash.
O mhash suporta uma grande variedade de algoritmos de hash como MD5, SHA1, GOST e muitos outros.
Para uma lista completa das hashs suportadas, verifique a documentação do mhash.
A regra geral é: você pode acessar o algoritmo de hash a partir do PHP com MHASH_NOMEdoHASH, Por exemplo, para acessar o algoritmo TIGER, você utiliza a constante MHASH_TIGER.
Para usá-las, faça o download da distribuição do mhash em http: / /mhash.sourceforge.net / e siga as instruções de instalação inclusas.
Você precisará compilar o PHP com o parametro --with-mhash[ =DIR] para habilitar esta extensão.
DIR é o diretório de instalação do mhash.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Aqui está a lista de hashes que são atualmente suportadas por mhash.
Se uma hash não está listada aqui, mas é listada pelo mhash como suportada, você pode assumir seguramente que esta documentação está desatualizada.
Exemplos
Calcular o MD5 digest e hmac e imprimir como hex
?php $input = "what do ya want for nothing ?"; $hash = mhash (MHASH_MD5, $input); print "A hash é ".bin2hex ($hash)." br / \n"; $hash = mhash (MHASH_MD5, $input, "Jefe"); print "A hmac é ".bin2hex ($hash). "br / \n";?
Este código irá produzir:
A hash é d03cb659cbf9192dcd066272249f8412 A hmac é 750c783e6ab0b503eaa86e310a5db738
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ming functions for Flash
Este módulo é EXPERIMENTAL.
Esteja avisado, e use este módulo por sua própria conta e risco.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
As classes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão for compilada junto com o PHP, ou carregada dinamicamente na execução.
SWFBitmap - getWidth - - Returns the bitmap 's width.
SWFDisplayItem - move - - Moves object in relative coordinates.
SWFDisplayItem - multColor - - Multiplies the item 's color transform.
SWFDisplayItem - scale - - Scales the object in relative coordinates.
SWFDisplayItem - setDepth
SWFDisplayItem - - Creates a new displayitem object.
SWFMovie - nextframe - - Moves to the next frame of the animation.
SWFMovie - remove - - Removes the object instance from the display list.
SWFMovie - setbackground - - Sets the background color.
SWFMovie - setframes - - Sets the total number of frames in the animation.
SWFShape - addFill - - Adds a solid fill to the shape.
SWFShape - movePenTo - - Moves the shape 's pen.
SWFShape - setRightFill - - Sets right rasterizing color.
SWFTextField - setLeftMargin - - Sets the left margin width of the text field.
SWFTextField - setMargins - - Sets the margins width of the text field.
SWFTextField - - Creates a text field object
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de Configuração
Nome
Padrão
Modificável
Aqui esta uma pequena explicação das diretivas de configuração.
TRUE por padrão.
Veja também ignore_user_abort().
Cores para o modo de destaque da sintaxe.
Qualquer coisa aceitável em font color="?????? "deve funcionar.
Nome (ex: browscap.ini )e localização do arquivo com as capacidades do browser.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Configuração durante execução
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Mohawk Software session handler functions
Nota:
Instalação
Configuração durante execução
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Requisitos
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1. mSQL configuration options
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Funções Microsoft SQL Server
Introdução
Nota:
Você pode usar a extensão Sybase para conectar com banco de dados MSSQL de outras plataformas.
Requisitos
A extensão requer que as ferramentas de cliente do MS SQL sejam instaladas no sistema onde o PHP esta instalado.
Copiar ntwdblib.dll irá somente prover acesso.
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de configuração do MS SQL Server
Nome
Padrão
Modificável
Tipos Resource
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
LXV. muscat functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
MySQL
Estas funções permitem acessar os servidores de banco de dados do MYSQL.
Maiores informações podem ser encontradas em http: / /www.mysql.com /.
Documentação para MySQL pode ser encontrada em http: / /www.mysql.com / documentation /.
Para ter estas funções disponiveis, você deve compilar o PHP com suporte a MySQL.
Usando a opção de configuração --with-mysql você permite ao PHP acessar banco de dados do MySQL.
Se você usar esta opção sem especificar o caminho para o MySQL, o PHP usará as bibliotecas do cliente que vem com ele.
Com o PHP4, o suporte a MySQL esta sempre ativado; se você não especificar a opção de configuração, as bibliotecas que vem com o PHP serão usadas.
Usuários que usam outras aplicações que usam MySQL (por exemplos, executando PHP3 e PHP4 como modulos do apache, ou auth-mysql) devem sempre espicificar o caminho para o MySQL: --with-mysql= / caminho / para / mysql.
Isto irá forçar o PHP a usar as bibliotecas de cliente instaladas com o MySQL, evitando quaisquer conflitos.
Atenção
Veja a extensão recode para maiores informações.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de configuração do MySQL
Nome
Padrão
Modificável
Aqui esta uma pequena explicação das diretivas de configuração.
Quando permitir conexões persistentes para o MySQL.
O número máximo de conexões persistentes com o MySQL por processo.
O número maximo de conexões com o MYSQL por processo, incluindo conexões persistentes.
O número padrão da porta TCP a usar quando conectar com o servidor do banco de dados se nenhuma outra porta for especificada.
Se nenhum padrão for especificado, aporta será obtida da variavel de ambiente MYSQL_TCP_PORT, da entrada mysql-tcp em / etc / services ou da constante da compilação MYSQL_PORT, nesta ordem.
Windows irá usar somente a constante MYSQL_PORT.
O nome padrão do socket para usar quando conectar com um servidor de banco de dados local se outro nome de socket não for especificado.
O servidor padrão para usar quando conectar com um servidor de banco de dados se outro servidor não for encontrado.
Não se aplica em safe mode.
O nome padrão de usuário para conectar ao servidor de banco de dados se outro nome não for especificado.
Não se aplica em safe mode.
A senha padrão para usar ao conectar ao servidor de banco de dados se outra senha não for especificada.
Não se aplica em safe mode.
Limite de tempo da conexão em segundos.
No Linux este limite é também usado para a espera da primeira resposta do servidor.
Há dois tipos de recursos usados no modulo MySql.
O primeiro é a identificação do link da conexão com o banco de dados, o segundo é o que guarda o resultado de uma query.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Desde PHP 4.3.0 é possivel especificar opções adicionais para as funções mysql_connect() and mysql_pconnect() As seguintes constantes são definidas:
Tabela 2.
Constante do cliente MySQL
constante
descrição
usa o protocolo de compressão
Permite espaço após o nome de função
Permite interactive_timeout segundos (ao inves de wait_timeout) de inatividade antes de fechar a conexão.
A função mysql_fetch_array() usa uma constante para cada diferentes tipos de matrizes de resultado.
As seguintes constantes são definidas:
Tabela 3.
constante
descrição
As colunas são retornadas na matriz tendo o nome do campo como índice da matriz.
As colunas são retornadas na matriz tendo ambos os indices: um numérico e o um com o nome do campo.
As colunas são retornadas numa matriz tendo um indice numérico dos campos.
Este indice começa com 0, o primeiro campo no resultado.
Este exemplo simples mostra como conectar, executar uma query, mostrar o resultado e desconectar do banco de dados do MySQL.
Exemplo 1.
Exemplo da extensão do MySQL
?php / * Conectando, escolhendo o banco de dados * / $link = mysql_connect( "mysql_host", "mysql_user", "mysql_password") or die("Não pude conectar"); print "Conexão bem sucedida"; mysql_select_db("my_database") or die("Não pude selecionar o banco de dados"); / * Fazendo a query SQL* / $query = "SELECT * FROM my_table"; $result = mysql_query($query) or die("Query falhou"); / * Mostrando os resultados em HTML * / print "table \n"; while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {print "\t tr \n"; foreach ($line as $col_value) {print "\t\t td $col_value / td \n";} print "\t / tr \n";} print" / table \n"; / * Liberando o resultado * / mysql_free_result($result); / * Fechando a conexão * / mysql_close($link);?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Ncurses terminal screen control functions
Atenção
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Tabela 2. ncurses color constants
Keys
Tabela 3. ncurses key constants
Tabela 4. mouse constants
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.
Tabela 2. openlog() Options
Tabela 3. syslog() Priorities (in descending order)
Tabela 4. dns_get_record() Options
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Requisitos
Instalação
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Lotus Notes functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Specify the name of the note.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
LXX.
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Exemplo 1.
Exemplo 2.
Exemplos
Exemplo 3. storage_classes.inc
Exemplo 4. test_aggregation.php
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Oracle 8 functions
Requisitos
Instalação
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Constantes Predefinidas
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Nota:
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Returns a result identifier containing the information.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Instalação
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Key / Certificate parameters
Certificate Verification
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Tabela 1.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Requisitos
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Nota:
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplos
Exemplo 1.
Nota:
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Sobrecarga de propriedades e métodos de objetos
O propósito desta extensão é permitir a sobrecarga de propriedades de acesso e metodos de objetos.
A classe especificada tem que definir os metodos para ter esta funcionalidade: __get(), __set() e __call() respectivamente para leitura / escrita das propriedades, ou chamar um metodo.
Desta forma a sobrecarga pode ser seletiva:
Dentro destas funções a sobrecarga é desabilitada de forma que você possa acessar propriedades do objeto normalmente.
Atenção
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Instalação
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplos
Alguns exemplos simples da utilização da função overload():
Exemplo 1.
Sobrecarga de uma classe no PHP
?php class OO {var $a = 111; var $elem = array('b '= 9, 'c' = 42); / / Metodo callback para pegar uma propriedade function __get($prop_name, $prop_value) {if (isset($this - elem[$prop_name])) {$prop_value = $this - elem[$prop_name]; return true;} else {return false;}} / / Metodo callback para definir uma propriedade function __set($prop_name, $prop_value) {$this - elem[$prop_name] = $prop_value; return true;}} / / Aqui nós sobrecarregamos o objeto OO overload('OO'); $o = new OO; print "\$o - a: $o - a\n"; / / imprime: $o - a: print "\$o - b: $o - b\n"; / / imprime: $o - b:
9 print "\$o - c: $o - c\n"; / / imprime: $o - c:
42 print "\$o - d: $o - d\n"; / / imprime: $o - d: / / adicionar um novo intem para o array $elem em OO $o - x = 56; / / iniciar stdclass (é integrada no PHP 4) / / $var não é sobrecarregada! $val = new stdclass; $val - prop = 555; / / Que "a" seja um array com o objeto $val dentro dele / / mas __set() o colocará no array $elem $o - a = array($val); var_dump($o - a[0] - prop);?
Atenção
Como esta é uma extensão experimental, nem todas as coisas funcionam.
Não existe ainda suporte para __call() Não existe ainda suporte para __call() e você somente pode fazer a sobrecaraga das operações get e set para propriedades.
Você não pode invocar as chamadas originais da classe e __set() somente funciona até um nível de acesso de propriedades.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Instalação
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Tipos Resource
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Process Control Functions
Nota:
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Nota:
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Exemplos
Exemplo 1.
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Regular Expression Functions (Perl-Compatible)
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Tabela 1.
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Tabela 1.
Exemplos
Exemplo 1.
Exemplo 2. pdfclock example from PDFlib distribution
Veja Também
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Instalação
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
O Postgres, desenvolvido originalmente no Departamento de Ciência de Computação da Universidade de Berkeley, foi pioneiro em muitos dos conceitos objeto-relacionais que agora estão disponíveis em alguns bancos de dados comerciais.
Fornece suporte a linguagem SQL92 / SQL99, integridade de transações e extensibilidade de tipos.
O PostgreSQL é um descendente com código aberto do código original desenvolvido em Berkeley.
Para usar usar as funções para PostgreSQL, você precisa do PostgreSQL 6.5 ou superior e PostgreSQL 7.0 ou superior para habilitar todos os recursos deste módulo.
PostgreSQL suporta inúmeros tipos de codificação de caracteres incluindo a codificação de caracteres multibyte.
Instalação
Para habilitar o módulo de funções para PostgreSQL, a opção de configuração --with-pgsql[ =DIR] deve ser usada no momento da compilação do PHP.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Opções de configuração do PostgreSQL
Nome
Padrão
Alterável
Aqui está uma pequena explicação sobre as diretivas de configuração.
Se quer ou não permitir conexões persistentes com o PostgreSQL.
O número máximo de conexões persistentes com PostgreSQL por processo.
Como usar e algumas dicas
Atenção
Usar o módulo PostgreSQL com o PHP 4.0.6 não é recomendado devido a um bug no código de manipulação de notificações.
Use o 4.1.0 ou superior.
Atenção
Os nomes das funções PostgreSQL serão alterados na versão 4.2.0 para confirmar os padrões de programação atuais.
A maioria dos novos nomes terão sublinhados (underscore) adicionais, por exemplo, pg_lo_open().
Algumas funções foram renomeadas para uma maior consistência, por exemplo, pg_exec() mudou para pg_query().
Os nomes antigos podem ser usados na 4.2.0 e em algumas poucas outras versões após esta, mas eles serão removidos futuramente.
Tabela 2.
Nomes de funções alterados
A antiga sintaxe pg_connect() / pg_pconnect() ficará obsoleta para suportar conexões assíncronas no futuro.
Por favor, use a string de conexão para pg_connect() e pg_pconnect().
Nem todas as funções são suportadas por todas as compilações.
Isso vai depender da versão da libpq (A interface cliente em C para PostgreSQL) e como esta foi compilada.
Se há alguma função ausente, é porque a libpq não suporta a característica exigida por esta função.
Também é importante que você use uma versão da libpq mais nova do que a que o servidor exige.
Se você usar uma versão mais antiga do que a que o servidor espera, você poderá ter problemas.
Desde a versão 6.3 (03 / 02 / 1998), o PostgreSQL usa sockets de domínio unix por padrão.
A porta TCP não ficará aberta por padrão.
Uma tabela é mostrada abaixo descrevendo essas novas possibilidades de conexão.
Este socket será encontrado em / tmp / .s.PGSQL.5432.
Esta opção pode ser habilitada com o parâmetro '-i' para o postmaster e seu significado é: "escute em sockets TCP / IP assim como em sockets de domínio Unix ".
Tabela 3.
Postmaster e PHP
Uma conexão com o servidor PostgreSQL pode ser estabelecida com os seguintes pares de valores definidos na string de comando: $conn = pg_connect( "host=seuHost port=suaPorta tty=seuTTY options=suasOpcoes dbname=seuDB user=seuUsuario password=suaSenha");
A sintaxe anterior: $conn = pg_connect ("host", "porta", "opcoes", "tty", "nomebd") ficará obsoleta.
Variáveis de ambiente afetam o comportamento do servidor / cliente PostgreSQL.
Por exemplo, o módulo PostgreSQL irá procurar pela variável de ambiente PGHOST quando o nome de host é omitido na string de conexão.
As variáveis de ambiente suportadas variam de versão para versão.
Vide o Manual de Programador do PostgreSQL (Programmer´s Manual, na seção libpq - Enviroment Variables) para maiores detalhes.
Certifique-se que você definiu as variáveis de ambiente para o usuário apropriado.
Use $_ENV ou getenv() para verificar se as variáveis de ambiente estão disponíveis para o processo atual.
Exemplo 1.
Definindo os parâmetros padrão
Constantes Predefinidas
Exemplos
A partir do PostgreSQL 7.1.0, você pode armazenar até 1GB dentro de um campo do tipo texto.
Em versões mais antigas, isto era limitado ao tamanho do bloco (o padrão era 8KB e o máximo era 32KB, definido em tempo de compilação).
Para usar a interface de objetos grandes (large objects), é exigido que se encapsule as funções de objetos grandes em um bloco de transação.
Um bloco de transação inicia-se com a declaração SQL BEGIN e, se a transação for válida, termina com COMMIT ou END.
Se a transação falhar, ela deve ser fechada com ROLLBACK ou ABORT.
Exemplo 2.
Usando Objetos Grandes (large objects)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Nota:
Instalação
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Printer functions
Introdução
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Requisitos
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
LXXXIX. qtdom functions
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Nota:
Requisitos
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
GNU Readline
Nota:
Instalação
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
GNU Recode functions
Nota:
Atenção
Atenção
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XC.
Introdução
Atenção
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Nota:
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Exemplos
Exemplo 1.
Veja Também
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Semaphore, Shared Memory and IPC Functions
Tabela 1.
Nota:
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 2.
Tipos Resource
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SESAM database functions
Nota:
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Configuration notes
Tabela 1.
Runtime considerations
Tabela 2.
Migration from other SQL databases
Notes on the use of various SQL types
Tabela 3.
Exemplo 1.
Exemplo 2.
Anterior
Principal
PrÃ³xima
Acima
Manual do PHP
Anterior
Próxima
XCIII.
Manejo de sessões
Introdução
Suporte a sessões no PHP consiste em uma forma de preservar certos dados através de acessos subseqüentes.
Isto te permite construir aplicações mais personalizadas e aumenta a atração ao seu web site.
Se você está familiarizado com o gerenciamento de sessões do PHPLIB, você irá notar que alguns conceitos são similares ao suporte de sessões do PHP.
Um visitante acessando seu web site está determinado por uma única id, a então chamada id de sessão.
Esta ou é guardada em um cookie do lado do usuário ou está na URL.
Sessões te permite registrar arbitrariamente números de variáveis para estarem lado a lado com os requerimentos.
Quando um visitante acessa seu site, o PHP checará automaticamente (se session.auto_start está definida para 1) ou no seu pedido (explicitamente através da session_start() ou implicitamente através da session_register()) se uma id de sessão especifica foi enviada com o pedido.
Se este é o caso, o ambiente anterior guardado é restaurado.
Todas as variáveis registradas são publicadas em série após o pedido terminar.
Variáveis registradas que estão indefinidas estão marcadas como estando não definida.
Num acesso subseqüente, estas não estarão definidas pelo módulo da sessão a menos que o usuário defina elas mais tarde.
Nota:
Manejo de sessões foi adicionado no PHP 4.0.
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Instalação
Suporte a sessões esta habilitado no PHP 4.0 por definição.
Se você não gostaria de seu PHP com suporte a sessão, você especifica a opção de configuração --disable-session.
Configuração durante execução
O sistema de suporte de sessão oferece no arquivo php.ini numerosas opções de configuração. nós daremos um breve resumo.
session.save_handler define o nome do operador( funções-handler) que é usado para guardar e resgatar dados associados com a sessão.
Por definição files.
session.save_path session.save_path define o argumento que que é passado para o save handler.
Se você escolher o default files handler, este é o caminho onde os arquivos serão criados.
Por definição para / tmp.
Se a profundidade do caminho de session.save_path é maior do que 2, coleção de lixo não será executada( garbage collection - gc).
Atenção
Se você deixar isto definido para um diretório muito visível, tal como / tmp (o padrão), outros usuários do servidor poderão ser capazes de assumir o controle da sessão obtendo a lista de arquivos naquele diretório.
session.name session.name especifica o nome da sessão que é usada como nome de cookie.
Ela poderia apenas conter caracteres alfanuméricos.
Por definição PHPSESSID.
session.auto_start session.auto_start especifica se o módulo da sessão inicia a sessão automaticamente num pedido na inicialização.
Por definição 0 (desabilitado).
session.cookie_lifetime especifica o tempo de vida de um cookie em segundos que é enviado para o navegador.
O valor 0 significa "até que o navegador seja fechado." Por definição 0.
session.serialize_handler define o nome do operador( handler) que é usado para serializar / deserializar dados.
Correntemente, um formato interno do PHP (nome php) e WDDX é suportado (nome wddx).
WDDX está apenas disponível, se o PHP está compilado com o suporte WDDX support.
Por definição php.
session.gc_probability especifica a probabilidade que a rotina gc (coleção de lixo-garbage collection) é iniciada em cada pedido em porcentagem.
Por definição 1.
session.gc_maxlifetime especifica o número de segundos depois que o dado será visto como 'lixo' e limpado.
session.referer_check session.referer_check contém a substring que você quer checar cada HTTP Referer para.
Se o Referer foi enviado pelo cliente e a substring não foi encontrada, a id de sessão embutida será percebida como inválida.
Por definição uma string vazia.
session.entropy_file session.entropy_file dá um caminho para um recurso externo( file) que será usado como um entropy source na criação da id de sessão.
São exemplos / dev / random ou / dev / urandom que estão disponéveis em muitos Sistemas Unix.
session.entropy_length especifíca o número de bytes que serão lidos do arquivo especificado acima.
Por definição 0 (desabilitada).
session.use_cookies session.use_cookies especifica se o módulo usará cookies para gravar a id de sessão no lado do cliente.
Por definição 1 (habilitada).
session.use_only_cookies especifica se o módulo usará apenas cookies para gravar a id de sessão no lado do cliente.
Por definição 0 (desabilitada).
Habilitar esta definição previni ataques envolvendo id de sessão passadas em URLs.
Esta definição foi adicionada no PHP 4.3.0.
session.cookie_path session.cookie_path especifica o caminho para definir em session_cookie.
Por definição /.
session.cookie_domain session.cookie_domain especifica o domínio para para definir em session_cookie.
Nenhuma definição.
session.cache_limiter especifica o método de controle do cache para usar para páginas de sessão (none / nocache / private / private_no_expire / public).
Por definição nocache.
session.cache_expire session.cache_expire especifica o tempo de vida para páginas de sessão no cache em minutos, isto não tem efeito para para limitador sem cache.
Por definição 180.
session.use_trans_sid se o suporte de sid transparente está habilitado ou não, se habilitado por compilação com --enable-trans-sid.
Por definição 1 (habilitado).
url_rewriter.tags url_rewriter.tags especifica quais tags html estão reescritas para incluir id de sessão se o suporte transparente de sid está habilitado.
Por definição a=href,area=href,frame=src,input=src,form=fakeentry
A configuração de track_vars e register_globals influencia em como as variáveis da sessão conseguem armazenar e devolver.
Nota:
No PHP 4.0.3, track_vars está sempre ligada.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplos
Nota:
No PHP 4.1.0, $_SESSION está disponível como variável global apenas como $_POST, $_GET, $_REQUEST e assim por diante.
Não como $HTTP_SESSION_VARS, $_SESSION está sempre global.
Então, global poderia não ser usada para $_SESSION.
Se track_vars is habilitada e register_globals está desabilitada, apenas aquelas membros da matriz associativa $HTTP_SESSION_VARS Se track_vars is habilitada e register_globals está desabilitada, apenas aquelas membros da matriz associativa $HTTP_SESSION_VARS podem ser registradas em uma sessão de variáveis.
A sessão de variáveis restauradas somente estarão disponíveis na matriz $HTTP_SESSION_VARS.
Exemplo 1.
Registrando uma variável com track_vars habilitada
?php session_start(); if (isset($HTTP_SESSION_VARS['count'])) {$HTTP_SESSION_VARS['count']++;} else {$HTTP_SESSION_VARS['count'] = 0;}?
Uso de $_SESSION (ou $HTTP_SESSION_VARS com PHP 4.0.6 ou inferior) é recomendado por segurança e code readablity.
Com $_SESSION ou $HTTP_SESSION_VARS, não á necessidade de usar as funções session_register() / session_unregister() / session_is_registered().
Usuários podem acessar variável de sessão como uma variável normal.
Exemplo 2.
Registrando uma variável com $_SESSION.
Exemplo 3.
Desregistrando uma variável com $_SESSION.
Se a register_globals está habilitada, então todas as variáveis globais podem ser registradas como variáveis de sessão e as variáveis de sessão serão restauradas para a variável global correspondente.
Visto que o PHP deve saber quais variáveis globais estão registradas como variáveis de sessão, usuaários devem registrar variáveis com a função session_register() enquanto $HTTP_SESSION_VARS / $_SESSION não necessita utilizar session_register().
Cuidado
Se você está usando $HTTP_SESSION_VARS / $_SESSION e desabilitada register_globals, não faça uso de session_register(), session_is_registered() e session_unregister().
Se você habilita register_globals, session_unregister() Se você habilita register_globals, session_unregister() poderiam ser usadas desde que as variáveis de sessão estejam registradas como variáveis globais quando os dados da sessão não estão em série.
Desabilitar register_globals é recomendado para ambas razões, segurança e performance.
Registrando uma variável com register_globals habilitada
Se ambas track_vars e register_globals estão habilitadas, então as variáveis globais e as entradas $HTTP_SESSION_VARS / $_SESSION farão referência ao mesmo valor para as variáveis já registradas.
Se o usuário utiliza session_register() para registrar variável de sessão, $HTTP_SESSION_VARS / $_SESSION não terão esta variável numa matriz até que ela seja lida de um armazém de sessão. (i.e. até o próximo pedido)
Passando a ID de sessão
Há dois métodos para propagar uma id de sessão:
Parâmetro URL
Módulo de sessão suporta ambos os métodos.
Cookies são mais eficientes, mas se eles não estiverem autorizados (clientes não são obrigados a aceita-los), nós não podemos conter deles.
O segundo método inclui a id de sessão diretamente na URL.
PHP é capaz de fazer isto transparentemente quando compilado com --enable-trans-sid.
Se você habilitar esta opção, URIs ligadas serão automaticamente mudadas para conter a id de sessão.
Alternativamente, você pode usar a constante SID que é definida, se o cliente não enviar o cookie apropriado.
SID é do formulário session_name=session_id ou é uma string vazia.
Nota:
A diretriz arg_separator.output php.ini permite personalizar o argumento separador.
O seguinte exemplo demonstra como registrar uma variável, e e como ligar corretamente a outra página usando SID.
Exemplo 5.
Contar o número de visitas de um simples usuário
Hello visitor, you have seen this page ?php echo $count;? times. p; ?php # the ?php echo SID? (?=SID? can be used if short tag is enabled) # is necessary to preserve the session id # in the case that the user has disabled cookies?
To continue, A HREF=" nextpage.php? ?php echo SID? "click here / A
A ?=SID? não é necessário, se --enable-trans-sid foi usada para compilar o PHP.
URLs não ligadas estão assumidas para apontar para sites externos e portanto não anexam a SID, pois ela poderia escapar para outro servidor.
Session handlers customizáveis
Para implementar o armazenamento num banco de dados, ou qualque outra forma de aramzenamento, você vai precisar usar session_set_save_handler() * para define as funções de armazenamento que são usadas (* to create a set of user-level storage functions).
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Shared Memory Functions
Nota:
Requisitos
Instalação
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
SNMP functions
Requisitos
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Atenção
Este módulo é EXPERIMENTAL.
Esteja avisado, e use este módulo por sua própria conta e risco.
Requisitos
Instalação
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Nota:
Exemplos
Exemplo 1.
Exemplo 2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
There are many wrappers built into PHP by default (See Apêndice I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Capítulo 43.
Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Capítulo 43.
See Apêndice I for a list of PHP builtin wrappers.
Requisitos
Instalação
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Constantes Predefinidas
Exemplos
Exemplo 1.
Exemplo 2.
Exemplo 3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
String functions
Todas estas funções manipulam strings de várias maneiras.
Para informações de como a string se comporta, especialmente com realção ao uso de aspas simples, aspas duplas, seqüências de escape, veja o Strings dentro da sessão Types do manual.
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extensão não possui nenhuma constante.
Para as mais poderosas funções de manipulação de strings dê uma olhada em POSIX regular expression functions e Perl compatible regular expression functions.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Shockwave Flash functions
Introdução
Nota:
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
C.
Funções Sybase
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tokenizer functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Nota:
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
CII.
Funções URL
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
CIV. vpopmail functions
Atenção
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Atenção
Este módulo é EXPERIMENTAL.
Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.
Esteja avisado, e use este módulo por sua própria conta e risco.
Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.
Esta extenção não define nenhum parâmetro de configuração no php.ini.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
WDDX Functions
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Exemplo 1.
Exemplo 2.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XML parser functions
Configuração durante execução
Esta extenção não define nenhum parâmetro de configuração no php.ini.
Esta extensão não possui nenhum tipo resource.
Constantes Predefinidas
Event Handlers
Tabela 1.
Error Codes
Exemplos
Exemplo 1.
XML Tag Mapping Example
Exemplo 2.
XML External Entity Example
Exemplo 3.
Exemplo 4. xmltest.xml
Exemplo 5. xmltest2.xml
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Introdução
Atenção
Este módulo é EXPERIMENTAL.
Esteja avisado, e use este módulo por sua própria conta e risco.
Requisitos
Nenhuma biblioteca externa é necessária para compilar esta extensão.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
XSLT functions
Nota:
Configuração durante execução
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Instalação
Atenção
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
Tabela 1.
Esta extensão não possui nenhum tipo resource.
Esta extensão não possui nenhuma constante.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Zip File Functions (Read Only Access)
Instalação
Nota:
Configuração durante execução
Tipos Resource
Constantes Predefinidas
Esta extensão não possui nenhuma constante.
Exemplo 1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Funções de Compressão Zlib
Introdução
Nota:
A Versão 4.0.4 introduziu a função fopen-wrapper para arquivos .gz, então você pode usar o prefixo 'zlib:' especial para acessar arquivos comprimidos transparentemente usando as funções normais de acesso a arquivos f*() se você concatenar o nome do arquivo e ou seu caminho com o prefixo 'zlib: 'quando usar a função fopen().
Na versão 4.3.0, este prefixo especial foi mudado para 'zlib: / /' para previnir ambiguidades com nome de arquivos contendo ':'.
Esta facilidade requer uma biblioteca em tempo de execução que provê a função fopencookie().
Em meu conhecimento atual a GNU libc é a única bliblioteca que provê esta facilidade.
Requisitos
Este módulo usa as funções da zlib por Jean-loup Gailly e Mark Adler.
Você terá que usar uma versão zlib = à 1.0.9 com este módulo.
Configuração durante execução
O comportamento dessas funções podem ser modificado pelas configurações do php.ini.
A extensão zlib oferece a opção de comprimir transparentemente suas páginas em tempo real, se o navegador requisitante suportar isto.
Então existem três opções no arquivo de configuração php.ini.
Tabela 1.
Opções de Configuração da Zlib
Nome
Padrão
Modificável
Aqui está uma breve explicação das diretrizes de configuração.
Serve para comprimir páginas de modo transparente.
Se esta opção for mudada para "On" no php.ini ou na configuração do Apache, as páginas serão comprimidas se o navegador enviar um cabeçalho "Accept-Encoding: gzip "ou "deflate". "Content-Encoding: gzip" (respectivamente "deflate") e cabeçalhos "Vary:
Accept-Encoding "serão adicionados para a saida.
Você pode usar a função ini_set() para desabilitar isto em seu script se os cabeçalhos ainda não foram enviados.
Se você enviar um cabeçalho à saída "Content-Type: image /" a compressão será desabilitada, também (para corrigir um defeito do Netscape).
Você pode reabilitar isto, se você adicionar a função "ini_set('zlib.output_compression', 'On')" depois da chamada do cabeçalho que que foi adicionado o content-type da imagem.
Esta opção também aceita valores inteiros em vez de valores booleanos "On" / "Off", usando isto você pode configurar o tamanho do buffer de saída (o padrão é 4KB).
Em vez disto você deve usar zlib.output_handler.
Nível de compressão usado para as saídas.
Você não pode especificar tratamentos adicionais de saída se zlib.output_compression for ativado.
Tipos Resource
Esta extensão não possui nenhum tipo resource.
As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.
Este exemplo abre um arquivo temporário e gera uma string teste dentro dele, então ela mostra o conteúdo deste arquivo duas vezes.
Exemplo 1.
Pequeno Exemplo das funções Zlib
?php $filename = tempnam ('/ tmp', 'zlibteste') .'.gz'; print "html \n head / head \n body \n pre \n"; $s = "Somente um teste, teste, teste, teste, teste, teste, teste, teste!\n"; / / abre o arquivo para gerar ele com a compressão máxima $zp = gzopen($filename, "w9"); / / escreve a string no arquivo gzwrite($zp, $s); / / fecha o arquivo gzclose($zp); / / abre o arquivo para leitura $zp = gzopen($filename, "r"); / / lê 3 caracteres print gzread($zp, 3); / / mostra o conteúdo até o fim do arquivo e o fecha. gzpassthru($zp); print "\n"; / / abre o arquivo e imprime o conteúdo dele (pela segunda vez). if (readgzfile($filename) != strlen($s)) {echo "Erro com as funções zlib !";} unlink($filename); print" / pre \n / h1 / body \n / html \n";?
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice G.
Palavras reservadas do PHP
Próxima
Classes padrão
A classe de onde a função dir() é instanciada.
Estas classes são definidas na extensão Ming, e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.
Estas classes são definidas na extensão Oracle 8, e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.
Estas classes são definidas na extensão qtdom e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.
Anterior
Principal
Próxima
Variáveis predefinidas
Acima
Constantes Predefinidas
Manual do PHP
Anterior
Próxima
Core Predefined Constants - - Constants defined in the PHP core, Zend, and SAPI modules
Anterior
Principal
Próxima
Constantes Predefinidas
Acima
Manual do PHP
Anterior
Apêndice G.
Próxima
Constantes Predefinidas
Anterior
Principal
Próxima
Classes pre-definidas
Acima
Manual do PHP
Anterior
Próxima
Standard Predefined Constants - - Constants defined in PHP by default
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Palavras reservadas do PHP
Nenhum dos identificadores listados aqui pode ser utilizado como seus identificadores nos scripts.
Esta lista ainda não está completa.
Lista de palavras-chave (keywords)
Estas palavras tem um significado especial no PHP.
Algumas delas representam coisas que parecem funções, algumas parecem constantes mas na verdade não o são realmente: elas são construtores de linguagem.
Você não pode usar nenhuma das seguintes palavras como constantes, nomes de classes ou de funções.
Utilizar como nome de variáveis geralmente não causa erros, mas pode levar a confusão.
Tabela G-1.
Palavras-chave do PHP
Anterior
Principal
Próxima
Lista de funções sinônimas (aliases)
Acima
Variáveis predefinidas
Manual do PHP
Anterior
Apêndice G.
Palavras reservadas do PHP
Próxima
Variáveis predefinidas
Variáveis do servidor: $_SERVER
Introduzida na versão 4.1.0.
$_SERVER é um array contendo informações como headers, caminhos e localizações do script.
Os itens deste array são criados pelo servidor web.
Não há garantias que todos os servidores web geram todas elas: alguns servidores talvez omitam algumas ou geram outras que não estão listadas aqui.
Mesmo assim, um grande número dessas variáveis estão de acordo com a especificação CGI 1.1, então você pode esperar encontrá-las nesse array.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_SERVER; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_SERVER_VARS.
$HTTP_SERVER_VARS contém a mesmas informações, mas ela não é uma superglobal .( Note que $HTTP_SERVER_VARS e $_SERVER são variáveis diferentes como também o PHP as manipula diferentemente)
Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_SERVER e $HTTP_SERVER_VARS.
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Você poderá ou não encontrar qualquer um dos seguintes elementos dentro de $_SERVER.
Note que poucos (ou nenhum) deles estão disponíveis (ou não terão qualquer sentido) se você estiver rodando o PHP na linha de comando.
O nome do arquivo do script atualmente em uso, relativo ao document root.
Por exemplo, $_SERVER[ 'PHP_SELF'] em um script com o endereço http: / /example.com / test.php / foo.bar pode ser / test.php / foo.bar.
Se estiver rodando o PHP em linha de comando, esta variável não está disponível.
Array de argumentos passado para o script.
Quando o script é executado na linha de comando, isto permite um acesso aos parâmetros de linha de comando no estilo do C.
Quando chamado via método GET, ele conterá a query string.
Contém o número de parâmetros da linha de comando passados para o script (se executando da linha de comando).
O número de revisão da especificação CGI que o servidor está utilizando, por exemplo: 'CGI / 1.1'.
O nome host do servidor onde o script atual é executado.
Se o script está rodando em um host virtual, este será o valor definido para aquele host virtual.
A string de identificação do servidor, fornecida nos headers quando respondendo a requests.
Nome e número de revisão do protocolo de informação pelo qual a página foi requerida, por exemplo 'HTTP / 1.0';
Geralmente 'GET', 'HEAD', 'POST' ou 'PUT'.
A query string (string de solicitação), se houver, pela qual a página foi acessada.
O diretório raiz sob onde o script atual é executado, como definido no arquivos de configuração do servidor.
O conteúdo do header Accept: da requisição atual, se houver.
O conteúdo do header Accept-Charset: da requisição atual, se houver.
Exemplo: 'iso-8859-1,*,utf-8'.
O conteúdo do header Accept-Encoding: da requisição atual, se houver.
Exemplo: 'gzip'.
O conteúdo do header Accept-Language: da requisição atual, se houver.
Exemplo 'en'.
O conteúdo do header Connection: da requisição atual, se houver.
Exemplo: 'Keep-Alive'.
O conteúdo do header Host: da requisição atual, se houver.
O endereço da página (se houver) através da qual o agente do usuário acessou a página atual.
Essa diretiva é informada pelo agente do usuário.
Nem todos os browsers geram esse header, e alguns ainda possuem a habilidade de modificar o conteúdo do HTTP_REFERER como recurso.
Em poucas palavras, não é confiável.
O conteúdo do header User_Agent: da requisição atual, se houver.
É uma string denotando o agente de usuário pelo qual a página é acessada.
Um exemplo típico é:
Além de outras coisas, você pode utilizar este valor com get_browser() para personalizar a geração de suas páginas para as capacidades do agente do usuário.
O endereço IP de onde o usuário está visualizado a página atual.
A porta TCP na máquina do usuário utilizada para comunicação com o servidor web.
O caminho absoluto o script atualmente em execução.
O valor fornecido pela diretiva SERVER_ADMIN (do Apache) no arquivo de configuração do servidor.
Se o script está sendo executado em um host virtual, este será os valores definidos para aquele host virtual.
A porta na máquina servidora utilizada pelo servidor web para comunicação.
Como default, este valor é '80'.
Utilizando SSL, entretanto, mudará esse valor para a porta de comunicação segura HTTP.
String contendo a versão do servidor e nome do host virtual que é adicionado às páginas geradas no servidor, se ativo.
Contém o caminho completo do script atual.
O URI fornecido para acessar a página atual, por exemplo, '/ index.html'.
Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com o username fornecido pelo usuário.
Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com a senha fornecida pelo usuário.
Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com o tipo de autenticação utilizado.
Variáveis de ambiente: $_ENV
Nota:
Introduzida na versão 4.1.0.
Em versões anteriores, utilize $HTTP_ENV_VARS.
Estas variáveis são importadas dentro no espaço global do PHP do ambiente sob qual o interpretador do PHP está rodando.
Muitos são são criados no shell (terminal) sob o qual o PHP é executado e sistemas diferentes normalmente utilizam vários sabores de shells, e uma lista definitiva é impossível.
Verifique a documentação de sua shell para a lista de variáveis ambiente definidas.
Outras variáveis ambiente incluem as variáveis CGI, informadas aqui independente do PHP estar rodando como um módulo do servidor ou como processador CGI.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_ENV; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_ENV_VARS.
$HTTP_ENV_VARS contém a mesma informação, mas não é uma superglobal. (Note que HTTP_ENV_VARS e $_ENV são variáveis diferentes como também o PHP as manipula diferentemente)
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Cookies HTTP: $_COOKIE
Nota:
Introduzida na versão 4.1.0.
Em versões anteriores, utilize $HTTP_COOKIE_VARS.
Contém um array associativo de variáveis passas para o script atual através de cookies HTTP.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_COOKIE; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_COOKIE_VARS.
$HTTP_COOKIE_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_COOKIE_VARS e $_COOKIE são variáveis diferentes como também o PHP as manipula diferentemente)
Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_COOKIE e $HTTP_COOKIE_VARS.
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variáveis HTTP GET: $_GET
Nota:
Introduzida na versão 4.1.0.
Contém um array associativo de variáveis passadas para o script atual através do método HTTP GET.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_GET; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_GET_VARS.
$HTTP_GET_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_GET_VARS e $_GET são variáveis diferentes como também o PHP as manipula diferentemente)
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variaveis HTTP POST: $_POST
Nota:
Introduzida na versão 4.1.0.
Em versões anteriores, use $HTTP_POST_VARS.
Contém um array associativo de variáveis passadas para o script atual através do método HTTP POST.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto siginifica que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_POST; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_POST_VARS.
$HTTP_POST_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_POST_VARS e $_POST são variáveis diferentes como também o PHP as manipula diferentemente)
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variáveis de upload de arquivos HTTP: $_FILES
Nota:
Introduzida na versão 4.1.0.
Em versões anteriores, use $HTTP_POST_FILES.
Contém um array associativo dos itens carregador no script atual através do método HTTP POST.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_FILES; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_FILES_VARS.
$HTTP_POST_FILES contém as mesmas informações, mas não é uma superglobal.
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variáveis da requisição: $_REQUEST
Nota:
Introduzida na versão 4.1.0.
Não há array equivalente em versões anteriores.
Contém um array associativo com os conteúdos de $_GET, $_POST, $_COOKIE e $_FILES.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_REQUEST; para pode acessá-la dentro de funções ou métodos.
Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variáveis de sessão: $_SESSION
Nota:
Introduzida na versão 4.1.0.
Em versões anteriores, use $HTTP_SESSION_VARS.
Contém um array associativo das variáveis de sessão disponíveis para o script atual.
Veja a documentação das funções de Sessões para maiores informações de como utilizá-las.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto siginifica que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $_SESSION; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_SESSION_VARS.
$HTTP_SESSION_VARS contém as mesmas informações, mas não é uma superglobal.
Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_SESSION e $HTTP_SESSION_VARS Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.
Estas variáveis globais individuais não são superglobais.
Variaveis globais: $GLOBALS
Os nomes das variáveis são as chaves do array.
Esta é uma variável 'superglobal', ou automaticamente global.
Isto significa que ela é disponível em todos os escopos (níveis) de um script.
Você não precisa fazer um global $GLOBALS; para pode acessá-la dentro de funções ou métodos.
A mensagem de erro anterior: $php_errormsg
$php_errormsg é uma variável contendo o texto da última mensagem de erro gerada pelo PHP.
Esta variável somente está disponível no escopo em que o erro ocorreu, e somente se a opção de configuração track_errors está ativa (seu default é off).
Anterior
Principal
Próxima
Palavras reservadas do PHP
Acima
Classes pre-definidas
Anterior
Apêndice H.
List of Resource Types
Tabela H-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Installed as an Apache module
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Case 1: only public files served
Case 3: setting doc_root or user_dir
Case 4:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Keeping Current
Anterior
Principal
Próxima
Acima
Referência da Linguagem
Manual do PHP
Anterior
Capítulo 5.
Próxima
Exemplo 5-5.
SQL Injection
Exemplo 5-6.
Nota:
Exemplo 5-7.
Exemplo 5-8.
Exemplo 5-9.
Nota:
Exemplo 5-10.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Error Reporting
Exemplo 5-11.
Exemplo 5-12.
Exemplo 5-13.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Filesystem Security
Exemplo 5-1.
Exemplo 5-2....
Exemplo 5-3.
Exemplo 5-4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Hiding PHP
Exemplo 5-18.
Exemplo 5-19.
Exemplo 5-20.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
General considerations
Anterior
Principal
Próxima
Diretivas de configuração
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
Using Register Globals
Exemplo 5-14.
Exemplo 5-15.
Exemplo 5-16.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 5.
Próxima
User Submitted Data
Exemplo 5-17.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Common API Reference
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Basics
Exemplo 43-1. simple stream example that displays the PHP home page
Tabela 43-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Constants
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Dir API Reference
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams File API Reference
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Streams API for PHP Extension Authors
Nota:
Anterior
Principal
Próxima
Manual do PHP
Anterior
Próxima
Stream open options - - Affects the operation of stream factory functions
Nota:
Anterior
Principal
Próxima
Acima
Perguntas Mais Freqüentes
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Tabela 43-1.
Tabela 43-2.
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Tabela 43-1.
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
php_stream_make_seekable
Description
Tabela 43-1. php_stream_make_seekable() return values
Nota:
Nota:
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams as Resources
Exemplo 43-2.
Exemplo 43-3.
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Socket API Reference
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
struct php_stream_dirent - - Holds information about a single file during dir scanning
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
struct php_stream_statbuf - - Holds information about a file or URL
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 43.
Próxima
Streams Structures
Anterior
Principal
Próxima
Acima
Anterior
Apêndice J.
List of Parser Tokens
Tabela J-1.
Anterior
Principal
Próxima
Acima
Sobre o manual
Manual do PHP
Anterior
Capítulo 2.
Próxima
Your first PHP-enabled page
Exemplo 2-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 2.
Próxima
Dealing with Forms
Exemplo 2-6.
Exemplo 2-7.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
A simple tutorial
What do I need?
Anterior
Principal
Próxima
O que o PHP pode fazer?
Acima
Manual do PHP
Anterior
Capítulo 2.
Próxima
Using old code with new versions of PHP
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 2.
Próxima
Something Useful
Exemplo 2-2.
Exemplo 2-3.
Exemplo 2-4.
Exemplo 2-5.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 2.
Próxima
What 's next?
Anterior
Principal
Próxima
Acima
Instalação
Manual do PHP
Anterior
Apêndice I.
Próxima
Compression Streams
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice I.
Próxima
FTP and FTPS
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
HTTP and HTTPS
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Apêndice I.
Próxima
PHP input / output streams
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 42.
API Macros
A set of macros was introduced into Zend' s API that simplify access to zval containers (see Tabela 42-1).
Tabela 42-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Accessing Arguments
To work around this, you have to use a set of API functions to force a type conversion on every argument that' s being passed (see Tabela 32-1).
Tabela 32-1.
Nota:
Figura 32-2 shows the output.
Figura 32-2.
Exemplo 32-2.
For a description of both structures, see Tabela 32-2, Tabela 32-3 and Tabela 32-4.
Tabela 32-2.
See Tabela 32-3 for a description.
For a list of available types, see Tabela 32-4.
Tabela 32-3.
Tabela 32-4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Dealing with Arguments Passed by Reference
Examples are given in in Exemplo 32-3.
Exemplo 32-3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Old way of retrieving arguments (deprecated)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Accepting Arguments
Figura 32-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Retrieving Arguments
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Dealing with a Variable Number of Arguments / Optional Parameters
A very clever implementation of this can be found in the code handling PHP' s fsockopen() located in ext / standard / fsock.c, as shown in Exemplo 32-1.
Exemplo 32-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 32.
Próxima
Assuring Write Safety for Other Parameters
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 27.
PHP 's Automatic Build System
The default config.m4 shown in Exemplo 27-1 is a bit more complex:
Exemplo 27-1.
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 38.
Calling User Functions
Exemplo 38-1 shows a small demonstration of calling a user function.
Exemplo 38-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Reference:
config.m4
PHP defines a set of macros that can be used in this process, the most useful of which are described in Tabela 41-1.
Tabela 41-1.
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 34.
The Copy Constructor
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 28-1 shows the source.
Exemplo 28-1.
Nota:
Compiling Modules
The module shown earlier in Exemplo 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Extending PHP 4.0
Hacking the Core of PHP
Duplicating Variable Contents:
Anterior
Principal
Próxima
Anterior
Capítulo 39.
Initialization File Support
Access to initialization entries can also be handled with the macros shown in Tabela 39-1.
Tabela 39-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 26.
Próxima
Complex Types
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 26.
Próxima
Directory and File Functions
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Source Layout
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 26.
Próxima
Macros
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 26.
Próxima
Memory Management
Atenção
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 26.
Próxima
String Handling
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Overview
What Is Zend? and What Is PHP?
This might sound a bit confusing at first, but it' s not that complicated (see Figura 24-1).
Figura 24-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 25.
Próxima
Built-in Modules
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 25.
Próxima
The Zend Engine
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
As shown in Figura 24-1 As shown in Figura 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 36.
Próxima
Execution Information
For examples of these functions, see Exemplo 36-2.
Exemplo 36-2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 36.
Próxima
Including Output in phpinfo()
Exemplo 36-1 Exemplo 36-1 shows a source example and its output.
Exemplo 36-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 36.
Próxima
zend_error()
Tabela 36-1.
Figura 36-1.
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 35.
Returning Values
These macros automatically set the correspondent type and value, as described in Tabela 35-1 and Tabela 35-2.
Nota:
The macros in Tabela 35-1 automatically return from your function, those in Tabela 35-2 only set the return value; they don 't return from your function.
Tabela 35-1.
Tabela 35-2.
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 37.
Startup and Shutdown Functions
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Declaring Exported Functions
The parameter list of this declaration is very important; you should keep these parameters in mind (see Tabela 31-1 for descriptions).
Tabela 31-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Declaration of the Zend Function Block
Internally, zend_function_entry is defined as shown in Exemplo 31-1.
Exemplo 31-1.
Nota:
Tabela 31-2 shows a list of all the macros that you can use to define functions.
Tabela 31-2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Creation of get_module()
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Header File Inclusions
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Module Structure
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Implementation of All Exported Functions
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Declaration of the Zend Module Block
You can see the internal definition of this module in Exemplo 31-2.
Exemplo 31-2.
For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Tabela 31-3.
Tabela 31-3.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 31.
Próxima
Summary
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 30.
Troubleshooting
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 29.
Using Extensions
For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Exemplo 29-1.
Atenção
Exemplo 29-1.
Calling this PHP file in your Web browser should give you the output shown in Figura 29-1.
Figura 29-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Arrays
Tabela 33-1, Tabela 33-2 and Tabela 33-3 describe these functions.
Tabela 33-1.
Tabela 33-2.
Tabela 33-3.
This is done using zend_hash_update( )() for associative arrays (see Exemplo 33-3) and zend_hash_index_update() for indexed arrays (see Exemplo 33-4):
Exemplo 33-3.
Exemplo 33-4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Booleans
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Creating Constants
To create your own constants, you can use the macros in Tabela 33-6.
Tabela 33-6.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Doubles (Floats)
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Macros for Automatic Global Variable Creation
This is somewhat bad practice, but Table Tabela 33-5 describes macros that do exactly this task.
Tabela 33-5.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Próxima
Exemplo 33-1.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Longs (Integers)
The corresponding type value for longs is IS_LONG (see Exemplo 33-2).
Exemplo 33-2.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Objects
Tabela 33-4.
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Resources
Nota:
Nota:
Nota:
Anterior
Principal
Próxima
Acima
Manual do PHP
Anterior
Capítulo 33.
Próxima
Strings
Anterior
Principal
Próxima
Acima
Anterior
Capítulo 40.
Where to Go from Here
Anterior
Principal
Próxima
Acima
